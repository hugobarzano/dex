{"ast":null,"code":"import _objectSpread from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import{Row,Col,Tag}from'antd';import{useFills,useMarket}from'../../utils/markets';import DataTable from'../layout/DataTable';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function FillsTable(){var fills=useFills();var _useMarket=useMarket(),quoteCurrency=_useMarket.quoteCurrency;var columns=[{title:'Market',dataIndex:'marketName',key:'marketName'},{title:'Side',dataIndex:'side',key:'side',render:function render(side){return/*#__PURE__*/_jsx(Tag,{color:side==='buy'?'#41C77A':'#F23B69',style:{fontWeight:700},children:side.charAt(0).toUpperCase()+side.slice(1)});}},{title:\"Size\",dataIndex:'size',key:'size'},{title:\"Price\",dataIndex:'price',key:'price'},{title:\"Liquidity\",dataIndex:'liquidity',key:'liquidity'},{title:quoteCurrency?\"Fees (\".concat(quoteCurrency,\")\"):'Fees',dataIndex:'feeCost',key:'feeCost'}];var dataSource=(fills||[]).map(function(fill){return _objectSpread(_objectSpread({},fill),{},{key:\"\".concat(fill.orderId).concat(fill.side),liquidity:fill.eventFlags.maker?'Maker':'Taker'});});return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{span:24,children:/*#__PURE__*/_jsx(DataTable,{dataSource:dataSource,columns:columns,pagination:true,pageSize:5,emptyLabel:\"No fills\"})})})});}","map":{"version":3,"sources":["/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/src/components/UserInfoTable/FillsTable.jsx"],"names":["React","Row","Col","Tag","useFills","useMarket","DataTable","FillsTable","fills","quoteCurrency","columns","title","dataIndex","key","render","side","fontWeight","charAt","toUpperCase","slice","dataSource","map","fill","orderId","liquidity","eventFlags","maker"],"mappings":"mLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,GAAnB,KAA8B,MAA9B,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,qBAApC,CACA,MAAOC,CAAAA,SAAP,KAAsB,qBAAtB,C,gGAEA,cAAe,SAASC,CAAAA,UAAT,EAAsB,CACnC,GAAMC,CAAAA,KAAK,CAAGJ,QAAQ,EAAtB,CAEA,eAA0BC,SAAS,EAAnC,CAAQI,aAAR,YAAQA,aAAR,CAEA,GAAMC,CAAAA,OAAO,CAAG,CACd,CACEC,KAAK,CAAE,QADT,CAEEC,SAAS,CAAE,YAFb,CAGEC,GAAG,CAAE,YAHP,CADc,CAMd,CACEF,KAAK,CAAE,MADT,CAEEC,SAAS,CAAE,MAFb,CAGEC,GAAG,CAAE,MAHP,CAIEC,MAAM,CAAE,gBAACC,IAAD,qBACN,KAAC,GAAD,EACE,KAAK,CAAEA,IAAI,GAAK,KAAT,CAAiB,SAAjB,CAA6B,SADtC,CAEE,KAAK,CAAE,CAAEC,UAAU,CAAE,GAAd,CAFT,UAIGD,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeC,WAAf,GAA+BH,IAAI,CAACI,KAAL,CAAW,CAAX,CAJlC,EADM,EAJV,CANc,CAmBd,CACER,KAAK,OADP,CAEEC,SAAS,CAAE,MAFb,CAGEC,GAAG,CAAE,MAHP,CAnBc,CAwBd,CACEF,KAAK,QADP,CAEEC,SAAS,CAAE,OAFb,CAGEC,GAAG,CAAE,OAHP,CAxBc,CA6Bd,CACEF,KAAK,YADP,CAEEC,SAAS,CAAE,WAFb,CAGEC,GAAG,CAAE,WAHP,CA7Bc,CAkCd,CACEF,KAAK,CAAEF,aAAa,iBAAYA,aAAZ,MAA+B,MADrD,CAEEG,SAAS,CAAE,SAFb,CAGEC,GAAG,CAAE,SAHP,CAlCc,CAAhB,CAyCA,GAAMO,CAAAA,UAAU,CAAG,CAACZ,KAAK,EAAI,EAAV,EAAca,GAAd,CAAkB,SAACC,IAAD,wCAChCA,IADgC,MAEnCT,GAAG,WAAKS,IAAI,CAACC,OAAV,SAAoBD,IAAI,CAACP,IAAzB,CAFgC,CAGnCS,SAAS,CAAEF,IAAI,CAACG,UAAL,CAAgBC,KAAhB,CAAwB,OAAxB,CAAkC,OAHV,IAAlB,CAAnB,CAMA,mBACE,sCACE,KAAC,GAAD,wBACE,KAAC,GAAD,EAAK,IAAI,CAAE,EAAX,uBACE,KAAC,SAAD,EACE,UAAU,CAAEN,UADd,CAEE,OAAO,CAAEV,OAFX,CAGE,UAAU,CAAE,IAHd,CAIE,QAAQ,CAAE,CAJZ,CAKE,UAAU,CAAC,UALb,EADF,EADF,EADF,EADF,CAeD","sourcesContent":["import React from 'react';\nimport { Row, Col, Tag } from 'antd';\nimport { useFills, useMarket } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\n\nexport default function FillsTable() {\n  const fills = useFills();\n\n  const { quoteCurrency } = useMarket();\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: `Size`,\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: `Price`,\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      title: `Liquidity`,\n      dataIndex: 'liquidity',\n      key: 'liquidity',\n    },\n    {\n      title: quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees',\n      dataIndex: 'feeCost',\n      key: 'feeCost',\n    },\n  ];\n\n  const dataSource = (fills || []).map((fill) => ({\n    ...fill,\n    key: `${fill.orderId}${fill.side}`,\n    liquidity: fill.eventFlags.maker ? 'Maker' : 'Taker',\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No fills\"\n          />\n        </Col>\n      </Row>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}