{"ast":null,"code":"import _regeneratorRuntime from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import EventEmitter from'eventemitter3';import{PublicKey}from'@solana/web3.js';import{notify}from'../../utils/notifications';import{DEFAULT_PUBLIC_KEY}from'../types';export var MathWalletAdapter=/*#__PURE__*/function(_EventEmitter){_inherits(MathWalletAdapter,_EventEmitter);var _super=_createSuper(MathWalletAdapter);function MathWalletAdapter(){var _this;_classCallCheck(this,MathWalletAdapter);_this=_super.call(this);_this._publicKey=void 0;_this._onProcess=void 0;_this._connected=void 0;_this._onProcess=false;_this._connected=false;_this.connect=_this.connect.bind(_assertThisInitialized(_this));return _this;}_createClass(MathWalletAdapter,[{key:\"connected\",get:function get(){return this._connected;}},{key:\"autoApprove\",get:function get(){return false;}},{key:\"signAllTransactions\",value:function(){var _signAllTransactions=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(transactions){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(this._provider){_context.next=2;break;}return _context.abrupt(\"return\",transactions);case 2:return _context.abrupt(\"return\",this._provider.signAllTransactions(transactions));case 3:case\"end\":return _context.stop();}}},_callee,this);}));function signAllTransactions(_x){return _signAllTransactions.apply(this,arguments);}return signAllTransactions;}()},{key:\"_provider\",get:function get(){var _window,_window$solana;if((_window=window)===null||_window===void 0?void 0:(_window$solana=_window.solana)===null||_window$solana===void 0?void 0:_window$solana.isMathWallet){return window.solana;}return undefined;}},{key:\"publicKey\",get:function get(){return this._publicKey||DEFAULT_PUBLIC_KEY;}},{key:\"signTransaction\",value:function(){var _signTransaction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(transaction){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(this._provider){_context2.next=2;break;}return _context2.abrupt(\"return\",transaction);case 2:return _context2.abrupt(\"return\",this._provider.signTransaction(transaction));case 3:case\"end\":return _context2.stop();}}},_callee2,this);}));function signTransaction(_x2){return _signTransaction.apply(this,arguments);}return signTransaction;}()},{key:\"connect\",value:function connect(){var _this2=this;if(this._onProcess){return;}if(!this._provider){window.open('https://mathwallet.org/','_blank');notify({message:'Math Wallet Error',description:'Please install mathwallet'});return;}this._onProcess=true;this._provider.getAccount().then(function(account){_this2._publicKey=new PublicKey(account);_this2._connected=true;_this2.emit('connect',_this2._publicKey);}).catch(function(){_this2.disconnect();}).finally(function(){_this2._onProcess=false;});}},{key:\"disconnect\",value:function disconnect(){if(this._publicKey){this._publicKey=undefined;this._connected=false;this.emit('disconnect');}}}]);return MathWalletAdapter;}(EventEmitter);","map":{"version":3,"sources":["/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/src/wallet-adapters/math/index.tsx"],"names":["EventEmitter","PublicKey","notify","DEFAULT_PUBLIC_KEY","MathWalletAdapter","_publicKey","_onProcess","_connected","connect","bind","transactions","_provider","signAllTransactions","window","solana","isMathWallet","undefined","transaction","signTransaction","open","message","description","getAccount","then","account","emit","catch","disconnect","finally"],"mappings":"yuCAAA,MAAOA,CAAAA,YAAP,KAAyB,eAAzB,CACA,OAASC,SAAT,KAAuC,iBAAvC,CACA,OAASC,MAAT,KAAuB,2BAAvB,CACA,OAASC,kBAAT,KAAkD,UAAlD,CAEA,UAAaC,CAAAA,iBAAb,4HAIE,4BAAc,mDACZ,wBADY,MAHdC,UAGc,cAFdC,UAEc,cADdC,UACc,QAEZ,MAAKD,UAAL,CAAkB,KAAlB,CACA,MAAKC,UAAL,CAAkB,KAAlB,CACA,MAAKC,OAAL,CAAe,MAAKA,OAAL,CAAaC,IAAb,+BAAf,CAJY,aAKb,CATH,qDAWE,cAAgB,CACd,MAAO,MAAKF,UAAZ,CACD,CAbH,yBAeE,cAAkB,CAChB,MAAO,MAAP,CACD,CAjBH,+HAmBE,iBACEG,YADF,qHAGO,KAAKC,SAHZ,yDAIWD,YAJX,yCAOS,KAAKC,SAAL,CAAeC,mBAAf,CAAmCF,YAAnC,CAPT,6DAnBF,4IA6BE,cAAwB,4BACtB,YAAKG,MAAL,kDAAI,QAAiBC,MAArB,yCAAI,eAAyBC,YAA7B,CAA2C,CACzC,MAAQF,CAAAA,MAAD,CAAgBC,MAAvB,CACD,CACD,MAAOE,CAAAA,SAAP,CACD,CAlCH,uBAoCE,cAAgB,CACd,MAAO,MAAKX,UAAL,EAAmBF,kBAA1B,CACD,CAtCH,uHAwCE,kBAAsBc,WAAtB,yHACO,KAAKN,SADZ,2DAEWM,WAFX,0CAKS,KAAKN,SAAL,CAAeO,eAAf,CAA+BD,WAA/B,CALT,+DAxCF,iIAgDE,kBAAU,iBACR,GAAI,KAAKX,UAAT,CAAqB,CACnB,OACD,CAED,GAAI,CAAC,KAAKK,SAAV,CAAqB,CACnBE,MAAM,CAACM,IAAP,CAAY,yBAAZ,CAAuC,QAAvC,EACAjB,MAAM,CAAC,CACLkB,OAAO,CAAE,mBADJ,CAELC,WAAW,CAAE,2BAFR,CAAD,CAAN,CAIA,OACD,CAED,KAAKf,UAAL,CAAkB,IAAlB,CACA,KAAKK,SAAL,CACGW,UADH,GAEGC,IAFH,CAEQ,SAACC,OAAD,CAAkB,CACtB,MAAI,CAACnB,UAAL,CAAkB,GAAIJ,CAAAA,SAAJ,CAAcuB,OAAd,CAAlB,CACA,MAAI,CAACjB,UAAL,CAAkB,IAAlB,CACA,MAAI,CAACkB,IAAL,CAAU,SAAV,CAAqB,MAAI,CAACpB,UAA1B,EACD,CANH,EAOGqB,KAPH,CAOS,UAAM,CACX,MAAI,CAACC,UAAL,GACD,CATH,EAUGC,OAVH,CAUW,UAAM,CACb,MAAI,CAACtB,UAAL,CAAkB,KAAlB,CACD,CAZH,EAaD,CA5EH,0BA8EE,qBAAa,CACX,GAAI,KAAKD,UAAT,CAAqB,CACnB,KAAKA,UAAL,CAAkBW,SAAlB,CACA,KAAKT,UAAL,CAAkB,KAAlB,CACA,KAAKkB,IAAL,CAAU,YAAV,EACD,CACF,CApFH,+BAAuCzB,YAAvC","sourcesContent":["import EventEmitter from 'eventemitter3';\nimport { PublicKey, Transaction } from '@solana/web3.js';\nimport { notify } from '../../utils/notifications';\nimport { DEFAULT_PUBLIC_KEY, WalletAdapter } from '../types';\n\nexport class MathWalletAdapter extends EventEmitter implements WalletAdapter {\n  _publicKey?: PublicKey;\n  _onProcess: boolean;\n  _connected: boolean;\n  constructor() {\n    super();\n    this._onProcess = false;\n    this._connected = false;\n    this.connect = this.connect.bind(this);\n  }\n\n  get connected() {\n    return this._connected;\n  }\n\n  get autoApprove() {\n    return false;\n  }\n\n  public async signAllTransactions(\n    transactions: Transaction[],\n  ): Promise<Transaction[]> {\n    if (!this._provider) {\n      return transactions;\n    }\n\n    return this._provider.signAllTransactions(transactions);\n  }\n\n  private get _provider() {\n    if ((window as any)?.solana?.isMathWallet) {\n      return (window as any).solana;\n    }\n    return undefined;\n  }\n\n  get publicKey() {\n    return this._publicKey || DEFAULT_PUBLIC_KEY;\n  }\n\n  async signTransaction(transaction: Transaction) {\n    if (!this._provider) {\n      return transaction;\n    }\n\n    return this._provider.signTransaction(transaction);\n  }\n\n  connect() {\n    if (this._onProcess) {\n      return;\n    }\n\n    if (!this._provider) {\n      window.open('https://mathwallet.org/', '_blank');\n      notify({\n        message: 'Math Wallet Error',\n        description: 'Please install mathwallet',\n      });\n      return;\n    }\n\n    this._onProcess = true;\n    this._provider\n      .getAccount()\n      .then((account: any) => {\n        this._publicKey = new PublicKey(account);\n        this._connected = true;\n        this.emit('connect', this._publicKey);\n      })\n      .catch(() => {\n        this.disconnect();\n      })\n      .finally(() => {\n        this._onProcess = false;\n      });\n  }\n\n  disconnect() {\n    if (this._publicKey) {\n      this._publicKey = undefined;\n      this._connected = false;\n      this.emit('disconnect');\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}