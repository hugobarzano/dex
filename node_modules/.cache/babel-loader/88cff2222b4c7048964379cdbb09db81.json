{"ast":null,"code":"import _slicedToArray from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useMemo}from'react';import{useParams}from'react-router-dom';import{Col,PageHeader,Row,Spin,Typography}from'antd';import{PublicKey}from'@solana/web3.js';import{useAccountInfo}from'../../../utils/connection';import FloatingElement from'../../../components/layout/FloatingElement';import{decodePoolState,isAdminControlledPool}from'@project-serum/pool';import PoolInfoPanel from'./PoolInfoPanel';import{parseTokenMintData}from'../../../utils/tokens';import PoolCreateRedeemPanel from'./PoolCreateRedeemPanel';import PoolBalancesPanel from'./PoolBalancesPanel';import{useHistory}from'react-router-dom';import{PoolAdminPanel}from'./PoolAdminPanel';import{useWallet}from'../../../utils/wallet';import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Text=Typography.Text;export default function PoolPage(){var _useParams=useParams(),poolAddress=_useParams.poolAddress;var _useAccountInfo=useAccountInfo(isPublicKey(poolAddress)?new PublicKey(poolAddress):null),_useAccountInfo2=_slicedToArray(_useAccountInfo,2),poolAccountInfo=_useAccountInfo2[0],poolAccountLoaded=_useAccountInfo2[1];var history=useHistory();var poolInfo=useMemo(function(){if(!poolAccountInfo){return null;}try{return{address:new PublicKey(poolAddress),state:decodePoolState(poolAccountInfo.data),program:poolAccountInfo.owner};}catch(e){return null;}},[poolAddress,poolAccountInfo]);var _useAccountInfo3=useAccountInfo(poolInfo===null||poolInfo===void 0?void 0:poolInfo.state.poolTokenMint),_useAccountInfo4=_slicedToArray(_useAccountInfo3,2),mintAccountInfo=_useAccountInfo4[0],mintAccountInfoLoaded=_useAccountInfo4[1];var mintInfo=useMemo(function(){return mintAccountInfo?parseTokenMintData(mintAccountInfo.data):null;},[mintAccountInfo]);var _useWallet=useWallet(),wallet=_useWallet.wallet;if(poolInfo&&mintInfo&&wallet){var _poolInfo$state$admin;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(PageHeader,{title:/*#__PURE__*/_jsxs(_Fragment,{children:[\"Pool \",poolInfo.address.toBase58()]}),onBack:function onBack(){return history.push('/pools');},subTitle:poolInfo.state.name}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{xs:24,lg:12,children:/*#__PURE__*/_jsx(PoolInfoPanel,{poolInfo:poolInfo,mintInfo:mintInfo})}),/*#__PURE__*/_jsx(Col,{xs:24,lg:12,children:/*#__PURE__*/_jsx(PoolCreateRedeemPanel,{poolInfo:poolInfo,mintInfo:mintInfo})}),/*#__PURE__*/_jsx(Col,{xs:24,children:/*#__PURE__*/_jsx(PoolBalancesPanel,{poolInfo:poolInfo})}),wallet.connected&&((_poolInfo$state$admin=poolInfo.state.adminKey)===null||_poolInfo$state$admin===void 0?void 0:_poolInfo$state$admin.equals(wallet.publicKey))&&isAdminControlledPool(poolInfo)?/*#__PURE__*/_jsx(Col,{xs:24,children:/*#__PURE__*/_jsx(PoolAdminPanel,{poolInfo:poolInfo})}):null]})]});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(PageHeader,{title:/*#__PURE__*/_jsxs(_Fragment,{children:[\"Pool \",poolAddress]}),onBack:function onBack(){return history.push('/pools');}}),/*#__PURE__*/_jsx(FloatingElement,{children:!poolAccountLoaded||!mintAccountInfoLoaded?/*#__PURE__*/_jsx(Spin,{}):/*#__PURE__*/_jsx(Text,{children:\"Invalid pool\"})})]});}function isPublicKey(address){try{new PublicKey(address);return true;}catch(e){return false;}}","map":{"version":3,"sources":["/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/src/pages/pools/PoolPage/index.tsx"],"names":["React","useMemo","useParams","Col","PageHeader","Row","Spin","Typography","PublicKey","useAccountInfo","FloatingElement","decodePoolState","isAdminControlledPool","PoolInfoPanel","parseTokenMintData","PoolCreateRedeemPanel","PoolBalancesPanel","useHistory","PoolAdminPanel","useWallet","Text","PoolPage","poolAddress","isPublicKey","poolAccountInfo","poolAccountLoaded","history","poolInfo","address","state","data","program","owner","e","poolTokenMint","mintAccountInfo","mintAccountInfoLoaded","mintInfo","wallet","toBase58","push","name","connected","adminKey","equals","publicKey"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Col, PageHeader, Row, Spin, Typography } from 'antd';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport {\n  decodePoolState,\n  isAdminControlledPool,\n  PoolInfo,\n} from '@project-serum/pool';\nimport PoolInfoPanel from './PoolInfoPanel';\nimport { parseTokenMintData } from '../../../utils/tokens';\nimport PoolCreateRedeemPanel from './PoolCreateRedeemPanel';\nimport PoolBalancesPanel from './PoolBalancesPanel';\nimport { useHistory } from 'react-router-dom';\nimport { PoolAdminPanel } from './PoolAdminPanel';\nimport { useWallet } from '../../../utils/wallet';\n\nconst { Text } = Typography;\n\nexport default function PoolPage() {\n  const { poolAddress } = useParams();\n  const [poolAccountInfo, poolAccountLoaded] = useAccountInfo(\n    isPublicKey(poolAddress) ? new PublicKey(poolAddress) : null,\n  );\n  const history = useHistory();\n\n  const poolInfo: PoolInfo | null = useMemo(() => {\n    if (!poolAccountInfo) {\n      return null;\n    }\n    try {\n      return {\n        address: new PublicKey(poolAddress),\n        state: decodePoolState(poolAccountInfo.data),\n        program: poolAccountInfo.owner,\n      };\n    } catch (e) {\n      return null;\n    }\n  }, [poolAddress, poolAccountInfo]);\n  const [mintAccountInfo, mintAccountInfoLoaded] = useAccountInfo(\n    poolInfo?.state.poolTokenMint,\n  );\n  const mintInfo = useMemo(\n    () => (mintAccountInfo ? parseTokenMintData(mintAccountInfo.data) : null),\n    [mintAccountInfo],\n  );\n  const { wallet } = useWallet();\n\n  if (poolInfo && mintInfo && wallet) {\n    return (\n      <>\n        <PageHeader\n          title={<>Pool {poolInfo.address.toBase58()}</>}\n          onBack={() => history.push('/pools')}\n          subTitle={poolInfo.state.name}\n        />\n        <Row>\n          <Col xs={24} lg={12}>\n            <PoolInfoPanel poolInfo={poolInfo} mintInfo={mintInfo} />\n          </Col>\n          <Col xs={24} lg={12}>\n            <PoolCreateRedeemPanel poolInfo={poolInfo} mintInfo={mintInfo} />\n          </Col>\n          <Col xs={24}>\n            <PoolBalancesPanel poolInfo={poolInfo} />\n          </Col>\n          {wallet.connected &&\n          poolInfo.state.adminKey?.equals(wallet.publicKey) &&\n          isAdminControlledPool(poolInfo) ? (\n            <Col xs={24}>\n              <PoolAdminPanel poolInfo={poolInfo} />\n            </Col>\n          ) : null}\n        </Row>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <PageHeader\n        title={<>Pool {poolAddress}</>}\n        onBack={() => history.push('/pools')}\n      />\n      <FloatingElement>\n        {!poolAccountLoaded || !mintAccountInfoLoaded ? (\n          <Spin />\n        ) : (\n          <Text>Invalid pool</Text>\n        )}\n      </FloatingElement>\n    </>\n  );\n}\n\nfunction isPublicKey(address) {\n  try {\n    new PublicKey(address);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}