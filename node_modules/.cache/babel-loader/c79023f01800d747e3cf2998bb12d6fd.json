{"ast":null,"code":"import _regeneratorRuntime from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React,{useEffect,useState}from'react';import{Button,Col,Input,Row,Select,Typography}from'antd';import styled from'styled-components';import{Orderbook}from'@project-serum/serum';import{getExpectedFillPrice,getMarketDetails,getMarketInfos,getMarketOrderPrice,getSelectedTokenAccountForMint,MarketProvider,useBalances,useCustomMarkets,useLocallyStoredFeeDiscountKey,useMarket,useTokenAccounts}from'../utils/markets';import{notify}from'../utils/notifications';import{useWallet}from'../utils/wallet';import{useConnection,useSendConnection}from'../utils/connection';import{placeOrder}from'../utils/send';import{floorToDecimal,getDecimalCount}from'../utils/utils';import FloatingElement from'./layout/FloatingElement';import WalletConnect from'./WalletConnect';import{SwapOutlined}from'@ant-design/icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Option=Select.Option;var Title=Typography.Title;var ActionButton=styled(Button)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  color: #2abdd2;\\n  background-color: #212734;\\n  border-width: 0px;\\n\"])));var ConvertButton=styled(Button)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  background: #02bf76;\\n  border-color: #02bf76;\\n\"])));export default function ConvertForm(){var _useWallet=useWallet(),connected=_useWallet.connected,wallet=_useWallet.wallet;var _useCustomMarkets=useCustomMarkets(),customMarkets=_useCustomMarkets.customMarkets;var marketInfos=getMarketInfos(customMarkets);var _useState=useState(null),_useState2=_slicedToArray(_useState,2),marketAddress=_useState2[0],setMarketAddress=_useState2[1];var _useState3=useState(undefined),_useState4=_slicedToArray(_useState3,2),fromToken=_useState4[0],setFromToken=_useState4[1];var _useState5=useState(undefined),_useState6=_slicedToArray(_useState5,2),toToken=_useState6[0],setToToken=_useState6[1];var _useState7=useState(undefined),_useState8=_slicedToArray(_useState7,2),size=_useState8[0],setSize=_useState8[1];var marketInfosbyName=Object.fromEntries(marketInfos.map(function(market){return[market.name,market];}));var tokenConvertMap=new Map();Object.keys(marketInfosbyName).forEach(function(market){var _market$split=market.split('/'),_market$split2=_slicedToArray(_market$split,2),base=_market$split2[0],quote=_market$split2[1];!tokenConvertMap.has(base)?tokenConvertMap.set(base,new Set([quote])):tokenConvertMap.set(base,new Set([].concat(_toConsumableArray(tokenConvertMap.get(base)||[]),[quote])));!tokenConvertMap.has(quote)?tokenConvertMap.set(quote,new Set([base])):tokenConvertMap.set(quote,new Set([].concat(_toConsumableArray(tokenConvertMap.get(quote)||[]),[base])));});var setMarket=function setMarket(toToken){var marketInfo=marketInfos.filter(function(marketInfo){return!marketInfo.deprecated;}).find(function(marketInfo){return marketInfo.name===\"\".concat(fromToken,\"/\").concat(toToken)||marketInfo.name===\"\".concat(toToken,\"/\").concat(fromToken);});if(!marketInfo){console.warn(\"Could not find market info for market names \".concat(fromToken,\"/\").concat(toToken,\" or \").concat(toToken,\"/\").concat(fromToken));notify({message:'Invalid market',type:'error'});return;}setMarketAddress(marketInfo.address.toBase58());setToToken(toToken);};return/*#__PURE__*/_jsxs(FloatingElement,{style:{maxWidth:500},children:[/*#__PURE__*/_jsx(Title,{level:3,children:\"Convert\"}),!connected&&/*#__PURE__*/_jsx(Row,{justify:\"center\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(WalletConnect,{})})}),tokenConvertMap&&connected&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Row,{style:{marginBottom:8},children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Select,{style:{minWidth:300},placeholder:\"Select a token\",value:fromToken,onChange:function onChange(token){setFromToken(token);setToToken(undefined);},children:Array.from(tokenConvertMap.keys()).map(function(token){return/*#__PURE__*/_jsx(Option,{value:token,children:token},token);})})})}),fromToken&&/*#__PURE__*/_jsx(Row,{style:{marginBottom:8},children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Select,{style:{minWidth:300},value:toToken,onChange:setMarket,children:_toConsumableArray(tokenConvertMap.get(fromToken)||[]).map(function(token){return/*#__PURE__*/_jsx(Option,{value:token,children:token},token);})})})}),fromToken&&toToken&&/*#__PURE__*/_jsx(MarketProvider,{marketAddress:marketAddress,setMarketAddress:setMarketAddress,children:/*#__PURE__*/_jsx(ConvertFormSubmit,{size:size,setSize:setSize,fromToken:fromToken,toToken:toToken,wallet:wallet,customMarkets:customMarkets})})]})]});}function ConvertFormSubmit(_ref){var size=_ref.size,setSize=_ref.setSize,fromToken=_ref.fromToken,toToken=_ref.toToken,wallet=_ref.wallet,customMarkets=_ref.customMarkets;var _useMarket=useMarket(),market=_useMarket.market;var _useTokenAccounts=useTokenAccounts(),_useTokenAccounts2=_slicedToArray(_useTokenAccounts,1),accounts=_useTokenAccounts2[0];var balances=useBalances();var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),fromAmount=_useState10[0],setFromAmount=_useState10[1];var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),toAmount=_useState12[0],setToAmount=_useState12[1];var _useLocallyStoredFeeD=useLocallyStoredFeeDiscountKey(),feeDiscountKey=_useLocallyStoredFeeD.storedFeeDiscountKey;var connection=useConnection();var sendConnection=useSendConnection();var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),isConverting=_useState14[0],setIsConverting=_useState14[1];var isFromTokenBaseOfMarket=function isFromTokenBaseOfMarket(market){var _getMarketDetails=getMarketDetails(market,customMarkets),marketName=_getMarketDetails.marketName;if(!marketName){throw Error('Cannot determine if coin is quote or base because marketName is missing');}var _marketName$split=marketName.split('/'),_marketName$split2=_slicedToArray(_marketName$split,1),base=_marketName$split2[0];return fromToken===base;};var onConvert=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var baseCurrencyAccount,quoteCurrencyAccount,side,sidedOrderbookAccount,orderbookData,decodedOrderbookData,_ref3,_ref4,bbo,tickSizeDecimals,parsedPrice,sizeDecimalCount,nativeSize,parsedSize;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(market){_context.next=4;break;}console.warn('Market is null when attempting convert.');notify({message:'Invalid market',type:'error'});return _context.abrupt(\"return\");case 4:// get accounts\nbaseCurrencyAccount=getSelectedTokenAccountForMint(accounts,market===null||market===void 0?void 0:market.baseMintAddress);quoteCurrencyAccount=getSelectedTokenAccountForMint(accounts,market===null||market===void 0?void 0:market.quoteMintAddress);// get approximate price\n_context.prev=6;side=isFromTokenBaseOfMarket(market)?'sell':'buy';_context.next=15;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](6);console.warn(_context.t0);notify({message:'Error placing order',description:_context.t0.message,type:'error'});return _context.abrupt(\"return\");case 15:sidedOrderbookAccount=// @ts-ignore\nside==='buy'?market._decoded.asks:market._decoded.bids;_context.next=18;return connection.getAccountInfo(sidedOrderbookAccount);case 18:orderbookData=_context.sent;if(orderbookData===null||orderbookData===void 0?void 0:orderbookData.data){_context.next=22;break;}notify({message:'Invalid orderbook data',type:'error'});return _context.abrupt(\"return\");case 22:decodedOrderbookData=Orderbook.decode(market,orderbookData.data);_ref3=decodedOrderbookData&&decodedOrderbookData.getL2(1).map(function(_ref5){var _ref6=_slicedToArray(_ref5,1),price=_ref6[0];return price;}),_ref4=_slicedToArray(_ref3,1),bbo=_ref4[0];if(bbo){_context.next=27;break;}notify({message:'No best price found',type:'error'});return _context.abrupt(\"return\");case 27:if(size){_context.next=30;break;}notify({message:'Size not specified',type:'error'});return _context.abrupt(\"return\");case 30:tickSizeDecimals=getDecimalCount(market.tickSize);parsedPrice=getMarketOrderPrice(decodedOrderbookData,size,tickSizeDecimals);// round size\nsizeDecimalCount=getDecimalCount(market.minOrderSize);nativeSize=side==='sell'?size:size/parsedPrice;parsedSize=floorToDecimal(nativeSize,sizeDecimalCount);setIsConverting(true);_context.prev=36;if(wallet){_context.next=39;break;}return _context.abrupt(\"return\",null);case 39:_context.next=41;return placeOrder({side:side,price:parsedPrice,size:parsedSize,orderType:'ioc',market:market,connection:sendConnection,wallet:wallet,baseCurrencyAccount:baseCurrencyAccount===null||baseCurrencyAccount===void 0?void 0:baseCurrencyAccount.pubkey,quoteCurrencyAccount:quoteCurrencyAccount===null||quoteCurrencyAccount===void 0?void 0:quoteCurrencyAccount.pubkey,feeDiscountPubkey:feeDiscountKey});case 41:_context.next=47;break;case 43:_context.prev=43;_context.t1=_context[\"catch\"](36);console.warn(_context.t1);notify({message:'Error placing order',description:_context.t1.message,type:'error'});case 47:_context.prev=47;setIsConverting(false);return _context.finish(47);case 50:case\"end\":return _context.stop();}}},_callee,null,[[6,10],[36,43,47,50]]);}));return function onConvert(){return _ref2.apply(this,arguments);};}();var getPrice=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var side,sidedOrderbookAccount,orderbookData,decodedOrderbookData,_ref8,_ref9,bbo,tickSizeDecimals,expectedPrice;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;side=isFromTokenBaseOfMarket(market)?'sell':'buy';sidedOrderbookAccount=// @ts-ignore\nside==='buy'?market._decoded.asks:market._decoded.bids;_context2.next=5;return connection.getAccountInfo(sidedOrderbookAccount);case 5:orderbookData=_context2.sent;if(!(!(orderbookData===null||orderbookData===void 0?void 0:orderbookData.data)||!market)){_context2.next=8;break;}return _context2.abrupt(\"return\",[null,null]);case 8:decodedOrderbookData=Orderbook.decode(market,orderbookData.data);_ref8=decodedOrderbookData&&decodedOrderbookData.getL2(1).map(function(_ref10){var _ref11=_slicedToArray(_ref10,1),price=_ref11[0];return price;}),_ref9=_slicedToArray(_ref8,1),bbo=_ref9[0];if(!(!bbo||!size)){_context2.next=12;break;}return _context2.abrupt(\"return\",[null,null]);case 12:tickSizeDecimals=getDecimalCount(market.tickSize);expectedPrice=getExpectedFillPrice(decodedOrderbookData,size,tickSizeDecimals);if(!(side==='buy')){_context2.next=18;break;}return _context2.abrupt(\"return\",[expectedPrice.toFixed(6),1]);case 18:return _context2.abrupt(\"return\",[1,expectedPrice.toFixed(6)]);case 19:_context2.next=25;break;case 21:_context2.prev=21;_context2.t0=_context2[\"catch\"](0);console.log(\"Got error \".concat(_context2.t0));return _context2.abrupt(\"return\",[null,null]);case 25:case\"end\":return _context2.stop();}}},_callee2,null,[[0,21]]);}));return function getPrice(){return _ref7.apply(this,arguments);};}();useEffect(function(){getPrice().then(function(_ref12){var _ref13=_slicedToArray(_ref12,2),fromAmount=_ref13[0],toAmount=_ref13[1];setFromAmount(fromAmount||undefined);setToAmount(toAmount||undefined);});},// eslint-disable-next-line\n[market===null||market===void 0?void 0:market.address.toBase58(),size]);var canConvert=market&&size&&size>0;var balance=balances.find(function(coinBalance){return coinBalance.coin===fromToken;});var availableBalance=(((balance===null||balance===void 0?void 0:balance.unsettled)||0)+((balance===null||balance===void 0?void 0:balance.wallet)||0))*0.99;return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Row,{style:{marginBottom:8},children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Input,{style:{minWidth:300},addonBefore:\"Size (\".concat(fromToken,\")\"),placeholder:\"Size\",value:size===null?undefined:size,type:\"number\",onChange:function onChange(e){return setSize(parseFloat(e.target.value)||undefined);}})})}),/*#__PURE__*/_jsxs(Row,{gutter:12,style:{marginBottom:8},children:[/*#__PURE__*/_jsx(Col,{span:12,children:/*#__PURE__*/_jsxs(ActionButton,{block:true,size:\"large\",onClick:function onClick(){return setSize(floorToDecimal(availableBalance,4));},children:[\"Max: \",availableBalance.toFixed(4)]})}),/*#__PURE__*/_jsx(Col,{span:12,children:/*#__PURE__*/_jsx(ConvertButton,{block:true,type:\"primary\",size:\"large\",loading:isConverting,onClick:onConvert,disabled:!canConvert,children:\"Convert\"})})]}),canConvert&&/*#__PURE__*/_jsxs(Row,{align:\"middle\",justify:\"center\",children:[/*#__PURE__*/_jsxs(Col,{children:[fromAmount,\" \",fromToken]}),/*#__PURE__*/_jsx(Col,{offset:1,children:/*#__PURE__*/_jsx(SwapOutlined,{})}),/*#__PURE__*/_jsxs(Col,{offset:1,children:[toAmount,\" \",toToken]})]})]});}","map":{"version":3,"sources":["/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/src/components/ConvertForm.tsx"],"names":["React","useEffect","useState","Button","Col","Input","Row","Select","Typography","styled","Orderbook","getExpectedFillPrice","getMarketDetails","getMarketInfos","getMarketOrderPrice","getSelectedTokenAccountForMint","MarketProvider","useBalances","useCustomMarkets","useLocallyStoredFeeDiscountKey","useMarket","useTokenAccounts","notify","useWallet","useConnection","useSendConnection","placeOrder","floorToDecimal","getDecimalCount","FloatingElement","WalletConnect","SwapOutlined","Option","Title","ActionButton","ConvertButton","ConvertForm","connected","wallet","customMarkets","marketInfos","marketAddress","setMarketAddress","undefined","fromToken","setFromToken","toToken","setToToken","size","setSize","marketInfosbyName","Object","fromEntries","map","market","name","tokenConvertMap","Map","keys","forEach","split","base","quote","has","set","Set","get","setMarket","marketInfo","filter","deprecated","find","console","warn","message","type","address","toBase58","maxWidth","marginBottom","minWidth","token","Array","from","ConvertFormSubmit","accounts","balances","fromAmount","setFromAmount","toAmount","setToAmount","feeDiscountKey","storedFeeDiscountKey","connection","sendConnection","isConverting","setIsConverting","isFromTokenBaseOfMarket","marketName","Error","onConvert","baseCurrencyAccount","baseMintAddress","quoteCurrencyAccount","quoteMintAddress","side","description","sidedOrderbookAccount","_decoded","asks","bids","getAccountInfo","orderbookData","data","decodedOrderbookData","decode","getL2","price","bbo","tickSizeDecimals","tickSize","parsedPrice","sizeDecimalCount","minOrderSize","nativeSize","parsedSize","orderType","pubkey","feeDiscountPubkey","getPrice","expectedPrice","toFixed","log","then","canConvert","balance","coinBalance","coin","availableBalance","unsettled","e","parseFloat","target","value"],"mappings":"87BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,MAAT,CAAiBC,GAAjB,CAAsBC,KAAtB,CAA6BC,GAA7B,CAAkCC,MAAlC,CAA0CC,UAA1C,KAA4D,MAA5D,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,SAAT,KAA0B,sBAA1B,CACA,OACEC,oBADF,CAEEC,gBAFF,CAGEC,cAHF,CAIEC,mBAJF,CAKEC,8BALF,CAMEC,cANF,CAOEC,WAPF,CAQEC,gBARF,CASEC,8BATF,CAUEC,SAVF,CAWEC,gBAXF,KAYO,kBAZP,CAaA,OAASC,MAAT,KAAuB,wBAAvB,CACA,OAASC,SAAT,KAA0B,iBAA1B,CACA,OAASC,aAAT,CAAwBC,iBAAxB,KAAiD,qBAAjD,CACA,OAASC,UAAT,KAA2B,eAA3B,CACA,OAASC,cAAT,CAAyBC,eAAzB,KAAgD,gBAAhD,CACA,MAAOC,CAAAA,eAAP,KAA4B,0BAA5B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,OAASC,YAAT,KAA6B,mBAA7B,C,6IAIA,GAAQC,CAAAA,MAAR,CAAmBzB,MAAnB,CAAQyB,MAAR,CACA,GAAQC,CAAAA,KAAR,CAAkBzB,UAAlB,CAAQyB,KAAR,CAEA,GAAMC,CAAAA,YAAY,CAAGzB,MAAM,CAACN,MAAD,CAAT,0IAAlB,CAMA,GAAMgC,CAAAA,aAAa,CAAG1B,MAAM,CAACN,MAAD,CAAT,uHAAnB,CAKA,cAAe,SAASiC,CAAAA,WAAT,EAAuB,CACpC,eAA8Bb,SAAS,EAAvC,CAAQc,SAAR,YAAQA,SAAR,CAAmBC,MAAnB,YAAmBA,MAAnB,CACA,sBAA0BpB,gBAAgB,EAA1C,CAAQqB,aAAR,mBAAQA,aAAR,CACA,GAAMC,CAAAA,WAAW,CAAG3B,cAAc,CAAC0B,aAAD,CAAlC,CACA,cAA0CrC,QAAQ,CAAgB,IAAhB,CAAlD,wCAAOuC,aAAP,eAAsBC,gBAAtB,eAEA,eAAkCxC,QAAQ,CAAqByC,SAArB,CAA1C,yCAAOC,SAAP,eAAkBC,YAAlB,eACA,eAA8B3C,QAAQ,CAAqByC,SAArB,CAAtC,yCAAOG,OAAP,eAAgBC,UAAhB,eACA,eAAwB7C,QAAQ,CAAqByC,SAArB,CAAhC,yCAAOK,IAAP,eAAaC,OAAb,eAEA,GAAMC,CAAAA,iBAAiB,CAAGC,MAAM,CAACC,WAAP,CACxBZ,WAAW,CAACa,GAAZ,CAAgB,SAACC,MAAD,QAAY,CAACA,MAAM,CAACC,IAAR,CAAcD,MAAd,CAAZ,EAAhB,CADwB,CAA1B,CAIA,GAAME,CAAAA,eAAyC,CAAG,GAAIC,CAAAA,GAAJ,EAAlD,CACAN,MAAM,CAACO,IAAP,CAAYR,iBAAZ,EAA+BS,OAA/B,CAAuC,SAACL,MAAD,CAAY,CACjD,kBAAoBA,MAAM,CAACM,KAAP,CAAa,GAAb,CAApB,gDAAKC,IAAL,mBAAWC,KAAX,mBACA,CAACN,eAAe,CAACO,GAAhB,CAAoBF,IAApB,CAAD,CACIL,eAAe,CAACQ,GAAhB,CAAoBH,IAApB,CAA0B,GAAII,CAAAA,GAAJ,CAAQ,CAACH,KAAD,CAAR,CAA1B,CADJ,CAEIN,eAAe,CAACQ,GAAhB,CACEH,IADF,CAEE,GAAII,CAAAA,GAAJ,8BAAaT,eAAe,CAACU,GAAhB,CAAoBL,IAApB,GAA6B,EAA1C,GAA+CC,KAA/C,GAFF,CAFJ,CAMA,CAACN,eAAe,CAACO,GAAhB,CAAoBD,KAApB,CAAD,CACIN,eAAe,CAACQ,GAAhB,CAAoBF,KAApB,CAA2B,GAAIG,CAAAA,GAAJ,CAAQ,CAACJ,IAAD,CAAR,CAA3B,CADJ,CAEIL,eAAe,CAACQ,GAAhB,CACEF,KADF,CAEE,GAAIG,CAAAA,GAAJ,8BAAaT,eAAe,CAACU,GAAhB,CAAoBJ,KAApB,GAA8B,EAA3C,GAAgDD,IAAhD,GAFF,CAFJ,CAMD,CAdD,EAgBA,GAAMM,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACrB,OAAD,CAAa,CAC7B,GAAMsB,CAAAA,UAAU,CAAG5B,WAAW,CAC3B6B,MADgB,CACT,SAACD,UAAD,QAAgB,CAACA,UAAU,CAACE,UAA5B,EADS,EAEhBC,IAFgB,CAGf,SAACH,UAAD,QACEA,CAAAA,UAAU,CAACb,IAAX,aAAuBX,SAAvB,aAAoCE,OAApC,GACAsB,UAAU,CAACb,IAAX,aAAuBT,OAAvB,aAAkCF,SAAlC,CAFF,EAHe,CAAnB,CAOA,GAAI,CAACwB,UAAL,CAAiB,CACfI,OAAO,CAACC,IAAR,uDACiD7B,SADjD,aAC8DE,OAD9D,gBAC4EA,OAD5E,aACuFF,SADvF,GAGAtB,MAAM,CAAC,CACLoD,OAAO,CAAE,gBADJ,CAELC,IAAI,CAAE,OAFD,CAAD,CAAN,CAIA,OACD,CACDjC,gBAAgB,CAAC0B,UAAU,CAACQ,OAAX,CAAmBC,QAAnB,EAAD,CAAhB,CACA9B,UAAU,CAACD,OAAD,CAAV,CACD,CApBD,CAsBA,mBACE,MAAC,eAAD,EAAiB,KAAK,CAAE,CAAEgC,QAAQ,CAAE,GAAZ,CAAxB,wBACE,KAAC,KAAD,EAAO,KAAK,CAAE,CAAd,qBADF,CAEG,CAACzC,SAAD,eACC,KAAC,GAAD,EAAK,OAAO,CAAC,QAAb,uBACE,KAAC,GAAD,wBACE,KAAC,aAAD,IADF,EADF,EAHJ,CASGmB,eAAe,EAAInB,SAAnB,eACC,wCACE,KAAC,GAAD,EAAK,KAAK,CAAE,CAAE0C,YAAY,CAAE,CAAhB,CAAZ,uBACE,KAAC,GAAD,wBACE,KAAC,MAAD,EACE,KAAK,CAAE,CAAEC,QAAQ,CAAE,GAAZ,CADT,CAEE,WAAW,CAAC,gBAFd,CAGE,KAAK,CAAEpC,SAHT,CAIE,QAAQ,CAAE,kBAACqC,KAAD,CAAW,CACnBpC,YAAY,CAACoC,KAAD,CAAZ,CACAlC,UAAU,CAACJ,SAAD,CAAV,CACD,CAPH,UASGuC,KAAK,CAACC,IAAN,CAAW3B,eAAe,CAACE,IAAhB,EAAX,EAAmCL,GAAnC,CAAuC,SAAC4B,KAAD,qBACtC,KAAC,MAAD,EAAQ,KAAK,CAAEA,KAAf,UACGA,KADH,EAA2BA,KAA3B,CADsC,EAAvC,CATH,EADF,EADF,EADF,CAoBGrC,SAAS,eACR,KAAC,GAAD,EAAK,KAAK,CAAE,CAAEmC,YAAY,CAAE,CAAhB,CAAZ,uBACE,KAAC,GAAD,wBACE,KAAC,MAAD,EACE,KAAK,CAAE,CAAEC,QAAQ,CAAE,GAAZ,CADT,CAEE,KAAK,CAAElC,OAFT,CAGE,QAAQ,CAAEqB,SAHZ,UAKG,mBAAKX,eAAe,CAACU,GAAhB,CAAoBtB,SAApB,GAAkC,EAAvC,EAA4CS,GAA5C,CAAgD,SAAC4B,KAAD,qBAC/C,KAAC,MAAD,EAAQ,KAAK,CAAEA,KAAf,UACGA,KADH,EAA2BA,KAA3B,CAD+C,EAAhD,CALH,EADF,EADF,EArBJ,CAqCGrC,SAAS,EAAIE,OAAb,eACC,KAAC,cAAD,EACE,aAAa,CAAEL,aADjB,CAEE,gBAAgB,CAAEC,gBAFpB,uBAIE,KAAC,iBAAD,EACE,IAAI,CAAEM,IADR,CAEE,OAAO,CAAEC,OAFX,CAGE,SAAS,CAAEL,SAHb,CAIE,OAAO,CAAEE,OAJX,CAKE,MAAM,CAAER,MALV,CAME,aAAa,CAAEC,aANjB,EAJF,EAtCJ,GAVJ,GADF,CAmED,CAED,QAAS6C,CAAAA,iBAAT,MAcG,IAbDpC,CAAAA,IAaC,MAbDA,IAaC,CAZDC,OAYC,MAZDA,OAYC,CAXDL,SAWC,MAXDA,SAWC,CAVDE,OAUC,MAVDA,OAUC,CATDR,MASC,MATDA,MASC,CARDC,aAQC,MARDA,aAQC,CACD,eAAmBnB,SAAS,EAA5B,CAAQkC,MAAR,YAAQA,MAAR,CACA,sBAAmBjC,gBAAgB,EAAnC,wDAAOgE,QAAP,uBACA,GAAMC,CAAAA,QAAQ,CAAGrE,WAAW,EAA5B,CACA,eAAoCf,QAAQ,EAA5C,0CAAOqF,UAAP,gBAAmBC,aAAnB,gBACA,gBAAgCtF,QAAQ,EAAxC,2CAAOuF,QAAP,gBAAiBC,WAAjB,gBACA,0BAEIvE,8BAA8B,EAFlC,CACwBwE,cADxB,uBACEC,oBADF,CAIA,GAAMC,CAAAA,UAAU,CAAGrE,aAAa,EAAhC,CACA,GAAMsE,CAAAA,cAAc,CAAGrE,iBAAiB,EAAxC,CAEA,gBAAwCvB,QAAQ,CAAC,KAAD,CAAhD,2CAAO6F,YAAP,gBAAqBC,eAArB,gBAEA,GAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAAC3C,MAAD,CAAY,CAC1C,sBAAuB1C,gBAAgB,CAAC0C,MAAD,CAASf,aAAT,CAAvC,CAAQ2D,UAAR,mBAAQA,UAAR,CACA,GAAI,CAACA,UAAL,CAAiB,CACf,KAAMC,CAAAA,KAAK,CACT,yEADS,CAAX,CAGD,CACD,sBAAeD,UAAU,CAACtC,KAAX,CAAiB,GAAjB,CAAf,wDAAOC,IAAP,uBACA,MAAOjB,CAAAA,SAAS,GAAKiB,IAArB,CACD,CATD,CAWA,GAAMuC,CAAAA,SAAS,2FAAG,qUACX9C,MADW,yBAEdkB,OAAO,CAACC,IAAR,CAAa,yCAAb,EACAnD,MAAM,CAAC,CACLoD,OAAO,CAAE,gBADJ,CAELC,IAAI,CAAE,OAFD,CAAD,CAAN,CAHc,wCAShB;AACM0B,mBAVU,CAUYtF,8BAA8B,CACxDsE,QADwD,CAExD/B,MAFwD,SAExDA,MAFwD,iBAExDA,MAAM,CAAEgD,eAFgD,CAV1C,CAcVC,oBAdU,CAcaxF,8BAA8B,CACzDsE,QADyD,CAEzD/B,MAFyD,SAEzDA,MAFyD,iBAEzDA,MAAM,CAAEkD,gBAFiD,CAd3C,CAmBhB;AAnBgB,gBAsBdC,IAAI,CAAGR,uBAAuB,CAAC3C,MAAD,CAAvB,CAAkC,MAAlC,CAA2C,KAAlD,CAtBc,iFAwBdkB,OAAO,CAACC,IAAR,cACAnD,MAAM,CAAC,CACLoD,OAAO,CAAE,qBADJ,CAELgC,WAAW,CAAE,YAAEhC,OAFV,CAGLC,IAAI,CAAE,OAHD,CAAD,CAAN,CAzBc,yCAiCVgC,qBAjCU,CAkCd;AACAF,IAAI,GAAK,KAAT,CAAiBnD,MAAM,CAACsD,QAAP,CAAgBC,IAAjC,CAAwCvD,MAAM,CAACsD,QAAP,CAAgBE,IAnC1C,wBAoCYjB,CAAAA,UAAU,CAACkB,cAAX,CAC1BJ,qBAD0B,CApCZ,SAoCVK,aApCU,kBAuCXA,aAvCW,SAuCXA,aAvCW,iBAuCXA,aAAa,CAAEC,IAvCJ,0BAwCd3F,MAAM,CAAC,CAAEoD,OAAO,CAAE,wBAAX,CAAqCC,IAAI,CAAE,OAA3C,CAAD,CAAN,CAxCc,yCA2CVuC,oBA3CU,CA2CaxG,SAAS,CAACyG,MAAV,CAAiB7D,MAAjB,CAAyB0D,aAAa,CAACC,IAAvC,CA3Cb,OA6CdC,oBAAoB,EACpBA,oBAAoB,CAACE,KAArB,CAA2B,CAA3B,EAA8B/D,GAA9B,CAAkC,kDAAEgE,KAAF,gBAAaA,CAAAA,KAAb,EAAlC,CA9Cc,+BA4CTC,GA5CS,aA+CXA,GA/CW,0BAgDdhG,MAAM,CAAC,CAAEoD,OAAO,CAAE,qBAAX,CAAkCC,IAAI,CAAE,OAAxC,CAAD,CAAN,CAhDc,4CAmDX3B,IAnDW,0BAoDd1B,MAAM,CAAC,CAAEoD,OAAO,CAAE,oBAAX,CAAiCC,IAAI,CAAE,OAAvC,CAAD,CAAN,CApDc,yCAwDV4C,gBAxDU,CAwDS3F,eAAe,CAAC0B,MAAM,CAACkE,QAAR,CAxDxB,CAyDVC,WAzDU,CAyDI3G,mBAAmB,CACrCoG,oBADqC,CAErClE,IAFqC,CAGrCuE,gBAHqC,CAzDvB,CA+DhB;AACMG,gBAhEU,CAgES9F,eAAe,CAAC0B,MAAM,CAACqE,YAAR,CAhExB,CAiEVC,UAjEU,CAiEGnB,IAAI,GAAK,MAAT,CAAkBzD,IAAlB,CAAyBA,IAAI,CAAGyE,WAjEnC,CAkEVI,UAlEU,CAkEGlG,cAAc,CAACiG,UAAD,CAAaF,gBAAb,CAlEjB,CAoEhB1B,eAAe,CAAC,IAAD,CAAf,CApEgB,oBAsET1D,MAtES,0DAuEL,IAvEK,iCA0ERZ,CAAAA,UAAU,CAAC,CACf+E,IAAI,CAAJA,IADe,CAEfY,KAAK,CAAEI,WAFQ,CAGfzE,IAAI,CAAE6E,UAHS,CAIfC,SAAS,CAAE,KAJI,CAKfxE,MAAM,CAANA,MALe,CAMfuC,UAAU,CAAEC,cANG,CAOfxD,MAAM,CAANA,MAPe,CAQf+D,mBAAmB,CAAEA,mBAAF,SAAEA,mBAAF,iBAAEA,mBAAmB,CAAE0B,MAR3B,CASfxB,oBAAoB,CAAEA,oBAAF,SAAEA,oBAAF,iBAAEA,oBAAoB,CAAEwB,MAT7B,CAUfC,iBAAiB,CAAErC,cAVJ,CAAD,CA1EF,2FAuFdnB,OAAO,CAACC,IAAR,cACAnD,MAAM,CAAC,CACLoD,OAAO,CAAE,qBADJ,CAELgC,WAAW,CAAE,YAAEhC,OAFV,CAGLC,IAAI,CAAE,OAHD,CAAD,CAAN,CAxFc,yBA8FdqB,eAAe,CAAC,KAAD,CAAf,CA9Fc,8GAAH,kBAATI,CAAAA,SAAS,2CAAf,CAkGA,GAAM6B,CAAAA,QAAQ,2FAAG,0QAEPxB,IAFO,CAEAR,uBAAuB,CAAC3C,MAAD,CAAvB,CAAkC,MAAlC,CAA2C,KAF3C,CAGPqD,qBAHO,CAIX;AACAF,IAAI,GAAK,KAAT,CAAiBnD,MAAM,CAACsD,QAAP,CAAgBC,IAAjC,CAAwCvD,MAAM,CAACsD,QAAP,CAAgBE,IAL7C,wBAMejB,CAAAA,UAAU,CAACkB,cAAX,CAC1BJ,qBAD0B,CANf,QAMPK,aANO,qBAST,EAACA,aAAD,SAACA,aAAD,iBAACA,aAAa,CAAEC,IAAhB,GAAwB,CAAC3D,MAThB,4DAUJ,CAAC,IAAD,CAAO,IAAP,CAVI,SAYP4D,oBAZO,CAYgBxG,SAAS,CAACyG,MAAV,CAAiB7D,MAAjB,CAAyB0D,aAAa,CAACC,IAAvC,CAZhB,OAcXC,oBAAoB,EACpBA,oBAAoB,CAACE,KAArB,CAA2B,CAA3B,EAA8B/D,GAA9B,CAAkC,qDAAEgE,KAAF,iBAAaA,CAAAA,KAAb,EAAlC,CAfW,+BAaNC,GAbM,eAgBT,CAACA,GAAD,EAAQ,CAACtE,IAhBA,6DAiBJ,CAAC,IAAD,CAAO,IAAP,CAjBI,UAmBPuE,gBAnBO,CAmBY3F,eAAe,CAAC0B,MAAM,CAACkE,QAAR,CAnB3B,CAoBPU,aApBO,CAoBSvH,oBAAoB,CACxCuG,oBADwC,CAExClE,IAFwC,CAGxCuE,gBAHwC,CApB7B,MAyBTd,IAAI,GAAK,KAzBA,6DA0BJ,CAACyB,aAAa,CAACC,OAAd,CAAsB,CAAtB,CAAD,CAA2B,CAA3B,CA1BI,2CA4BJ,CAAC,CAAD,CAAID,aAAa,CAACC,OAAd,CAAsB,CAAtB,CAAJ,CA5BI,+FA+Bb3D,OAAO,CAAC4D,GAAR,oCA/Ba,iCAgCN,CAAC,IAAD,CAAO,IAAP,CAhCM,yEAAH,kBAARH,CAAAA,QAAQ,2CAAd,CAoCAhI,SAAS,CACP,UAAM,CACJgI,QAAQ,GAAGI,IAAX,CAAgB,gBAA4B,qCAA1B9C,UAA0B,WAAdE,QAAc,WAC1CD,aAAa,CAACD,UAAU,EAAI5C,SAAf,CAAb,CACA+C,WAAW,CAACD,QAAQ,EAAI9C,SAAb,CAAX,CACD,CAHD,EAID,CANM,CAOP;AACA,CAACW,MAAD,SAACA,MAAD,iBAACA,MAAM,CAAEsB,OAAR,CAAgBC,QAAhB,EAAD,CAA6B7B,IAA7B,CARO,CAAT,CAWA,GAAMsF,CAAAA,UAAU,CAAGhF,MAAM,EAAIN,IAAV,EAAkBA,IAAI,CAAG,CAA5C,CACA,GAAMuF,CAAAA,OAAO,CAAGjD,QAAQ,CAACf,IAAT,CACd,SAACiE,WAAD,QAAiBA,CAAAA,WAAW,CAACC,IAAZ,GAAqB7F,SAAtC,EADc,CAAhB,CAGA,GAAM8F,CAAAA,gBAAgB,CACpB,CAAC,CAAC,CAAAH,OAAO,OAAP,EAAAA,OAAO,SAAP,QAAAA,OAAO,CAAEI,SAAT,GAAsB,CAAvB,GAA6B,CAAAJ,OAAO,OAAP,EAAAA,OAAO,SAAP,QAAAA,OAAO,CAAEjG,MAAT,GAAmB,CAAhD,CAAD,EAAuD,IADzD,CAGA,mBACE,MAAC,KAAD,CAAO,QAAP,yBACE,KAAC,GAAD,EAAK,KAAK,CAAE,CAAEyC,YAAY,CAAE,CAAhB,CAAZ,uBACE,KAAC,GAAD,wBACE,KAAC,KAAD,EACE,KAAK,CAAE,CAAEC,QAAQ,CAAE,GAAZ,CADT,CAEE,WAAW,iBAAWpC,SAAX,KAFb,CAGE,WAAW,CAAC,MAHd,CAIE,KAAK,CAAEI,IAAI,GAAK,IAAT,CAAgBL,SAAhB,CAA4BK,IAJrC,CAKE,IAAI,CAAC,QALP,CAME,QAAQ,CAAE,kBAAC4F,CAAD,QAAO3F,CAAAA,OAAO,CAAC4F,UAAU,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAV,EAA8BpG,SAA/B,CAAd,EANZ,EADF,EADF,EADF,cAaE,MAAC,GAAD,EAAK,MAAM,CAAE,EAAb,CAAiB,KAAK,CAAE,CAAEoC,YAAY,CAAE,CAAhB,CAAxB,wBACE,KAAC,GAAD,EAAK,IAAI,CAAE,EAAX,uBACE,MAAC,YAAD,EACE,KAAK,KADP,CAEE,IAAI,CAAC,OAFP,CAGE,OAAO,CAAE,yBAAM9B,CAAAA,OAAO,CAACtB,cAAc,CAAC+G,gBAAD,CAAmB,CAAnB,CAAf,CAAb,EAHX,mBAKQA,gBAAgB,CAACP,OAAjB,CAAyB,CAAzB,CALR,GADF,EADF,cAUE,KAAC,GAAD,EAAK,IAAI,CAAE,EAAX,uBACE,KAAC,aAAD,EACE,KAAK,KADP,CAEE,IAAI,CAAC,SAFP,CAGE,IAAI,CAAC,OAHP,CAIE,OAAO,CAAEpC,YAJX,CAKE,OAAO,CAAEK,SALX,CAME,QAAQ,CAAE,CAACkC,UANb,qBADF,EAVF,GAbF,CAoCGA,UAAU,eACT,MAAC,GAAD,EAAK,KAAK,CAAC,QAAX,CAAoB,OAAO,CAAC,QAA5B,wBACE,MAAC,GAAD,YACG/C,UADH,KACgB3C,SADhB,GADF,cAIE,KAAC,GAAD,EAAK,MAAM,CAAE,CAAb,uBACE,KAAC,YAAD,IADF,EAJF,cAOE,MAAC,GAAD,EAAK,MAAM,CAAE,CAAb,WACG6C,QADH,KACc3C,OADd,GAPF,GArCJ,GADF,CAoDD","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Col, Input, Row, Select, Typography } from 'antd';\nimport styled from 'styled-components';\nimport { Orderbook } from '@project-serum/serum';\nimport {\n  getExpectedFillPrice,\n  getMarketDetails,\n  getMarketInfos,\n  getMarketOrderPrice,\n  getSelectedTokenAccountForMint,\n  MarketProvider,\n  useBalances,\n  useCustomMarkets,\n  useLocallyStoredFeeDiscountKey,\n  useMarket,\n  useTokenAccounts,\n} from '../utils/markets';\nimport { notify } from '../utils/notifications';\nimport { useWallet } from '../utils/wallet';\nimport { useConnection, useSendConnection } from '../utils/connection';\nimport { placeOrder } from '../utils/send';\nimport { floorToDecimal, getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\nimport WalletConnect from './WalletConnect';\nimport { SwapOutlined } from '@ant-design/icons';\nimport { CustomMarketInfo } from '../utils/types';\nimport { WalletAdapter } from '../wallet-adapters';\n\nconst { Option } = Select;\nconst { Title } = Typography;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nconst ConvertButton = styled(Button)`\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nexport default function ConvertForm() {\n  const { connected, wallet } = useWallet();\n  const { customMarkets } = useCustomMarkets();\n  const marketInfos = getMarketInfos(customMarkets);\n  const [marketAddress, setMarketAddress] = useState<string | null>(null);\n\n  const [fromToken, setFromToken] = useState<string | undefined>(undefined);\n  const [toToken, setToToken] = useState<string | undefined>(undefined);\n  const [size, setSize] = useState<number | undefined>(undefined);\n\n  const marketInfosbyName = Object.fromEntries(\n    marketInfos.map((market) => [market.name, market]),\n  );\n\n  const tokenConvertMap: Map<string, Set<string>> = new Map();\n  Object.keys(marketInfosbyName).forEach((market) => {\n    let [base, quote] = market.split('/');\n    !tokenConvertMap.has(base)\n      ? tokenConvertMap.set(base, new Set([quote]))\n      : tokenConvertMap.set(\n          base,\n          new Set([...(tokenConvertMap.get(base) || []), quote]),\n        );\n    !tokenConvertMap.has(quote)\n      ? tokenConvertMap.set(quote, new Set([base]))\n      : tokenConvertMap.set(\n          quote,\n          new Set([...(tokenConvertMap.get(quote) || []), base]),\n        );\n  });\n\n  const setMarket = (toToken) => {\n    const marketInfo = marketInfos\n      .filter((marketInfo) => !marketInfo.deprecated)\n      .find(\n        (marketInfo) =>\n          marketInfo.name === `${fromToken}/${toToken}` ||\n          marketInfo.name === `${toToken}/${fromToken}`,\n      );\n    if (!marketInfo) {\n      console.warn(\n        `Could not find market info for market names ${fromToken}/${toToken} or ${toToken}/${fromToken}`,\n      );\n      notify({\n        message: 'Invalid market',\n        type: 'error',\n      });\n      return;\n    }\n    setMarketAddress(marketInfo.address.toBase58());\n    setToToken(toToken);\n  };\n\n  return (\n    <FloatingElement style={{ maxWidth: 500 }}>\n      <Title level={3}>Convert</Title>\n      {!connected && (\n        <Row justify=\"center\">\n          <Col>\n            <WalletConnect />\n          </Col>\n        </Row>\n      )}\n      {tokenConvertMap && connected && (\n        <>\n          <Row style={{ marginBottom: 8 }}>\n            <Col>\n              <Select\n                style={{ minWidth: 300 }}\n                placeholder=\"Select a token\"\n                value={fromToken}\n                onChange={(token) => {\n                  setFromToken(token);\n                  setToToken(undefined);\n                }}\n              >\n                {Array.from(tokenConvertMap.keys()).map((token) => (\n                  <Option value={token} key={token}>\n                    {token}\n                  </Option>\n                ))}\n              </Select>\n            </Col>\n          </Row>\n          {fromToken && (\n            <Row style={{ marginBottom: 8 }}>\n              <Col>\n                <Select\n                  style={{ minWidth: 300 }}\n                  value={toToken}\n                  onChange={setMarket}\n                >\n                  {[...(tokenConvertMap.get(fromToken) || [])].map((token) => (\n                    <Option value={token} key={token}>\n                      {token}\n                    </Option>\n                  ))}\n                </Select>\n              </Col>\n            </Row>\n          )}\n          {fromToken && toToken && (\n            <MarketProvider\n              marketAddress={marketAddress}\n              setMarketAddress={setMarketAddress}\n            >\n              <ConvertFormSubmit\n                size={size}\n                setSize={setSize}\n                fromToken={fromToken}\n                toToken={toToken}\n                wallet={wallet}\n                customMarkets={customMarkets}\n              />\n            </MarketProvider>\n          )}\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n\nfunction ConvertFormSubmit({\n  size,\n  setSize,\n  fromToken,\n  toToken,\n  wallet,\n  customMarkets,\n}: {\n  size: number | null | undefined;\n  setSize: (newSize: number | undefined) => void;\n  fromToken: string;\n  toToken: string;\n  wallet?: WalletAdapter;\n  customMarkets: CustomMarketInfo[];\n}) {\n  const { market } = useMarket();\n  const [accounts] = useTokenAccounts();\n  const balances = useBalances();\n  const [fromAmount, setFromAmount] = useState<number | undefined>();\n  const [toAmount, setToAmount] = useState<number | undefined>();\n  const {\n    storedFeeDiscountKey: feeDiscountKey,\n  } = useLocallyStoredFeeDiscountKey();\n\n  const connection = useConnection();\n  const sendConnection = useSendConnection();\n\n  const [isConverting, setIsConverting] = useState(false);\n\n  const isFromTokenBaseOfMarket = (market) => {\n    const { marketName } = getMarketDetails(market, customMarkets);\n    if (!marketName) {\n      throw Error(\n        'Cannot determine if coin is quote or base because marketName is missing',\n      );\n    }\n    const [base] = marketName.split('/');\n    return fromToken === base;\n  };\n\n  const onConvert = async () => {\n    if (!market) {\n      console.warn('Market is null when attempting convert.');\n      notify({\n        message: 'Invalid market',\n        type: 'error',\n      });\n      return;\n    }\n    // get accounts\n    const baseCurrencyAccount = getSelectedTokenAccountForMint(\n      accounts,\n      market?.baseMintAddress,\n    );\n    const quoteCurrencyAccount = getSelectedTokenAccountForMint(\n      accounts,\n      market?.quoteMintAddress,\n    );\n\n    // get approximate price\n    let side;\n    try {\n      side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n\n    const sidedOrderbookAccount =\n      // @ts-ignore\n      side === 'buy' ? market._decoded.asks : market._decoded.bids;\n    const orderbookData = await connection.getAccountInfo(\n      sidedOrderbookAccount,\n    );\n    if (!orderbookData?.data) {\n      notify({ message: 'Invalid orderbook data', type: 'error' });\n      return;\n    }\n    const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\n    const [bbo] =\n      decodedOrderbookData &&\n      decodedOrderbookData.getL2(1).map(([price]) => price);\n    if (!bbo) {\n      notify({ message: 'No best price found', type: 'error' });\n      return;\n    }\n    if (!size) {\n      notify({ message: 'Size not specified', type: 'error' });\n      return;\n    }\n\n    const tickSizeDecimals = getDecimalCount(market.tickSize);\n    const parsedPrice = getMarketOrderPrice(\n      decodedOrderbookData,\n      size,\n      tickSizeDecimals,\n    );\n\n    // round size\n    const sizeDecimalCount = getDecimalCount(market.minOrderSize);\n    const nativeSize = side === 'sell' ? size : size / parsedPrice;\n    const parsedSize = floorToDecimal(nativeSize, sizeDecimalCount);\n\n    setIsConverting(true);\n    try {\n      if (!wallet) {\n        return null;\n      }\n\n      await placeOrder({\n        side,\n        price: parsedPrice,\n        size: parsedSize,\n        orderType: 'ioc',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n        feeDiscountPubkey: feeDiscountKey,\n      });\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setIsConverting(false);\n    }\n  };\n\n  const getPrice = async () => {\n    try {\n      const side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\n      const sidedOrderbookAccount =\n        // @ts-ignore\n        side === 'buy' ? market._decoded.asks : market._decoded.bids;\n      const orderbookData = await connection.getAccountInfo(\n        sidedOrderbookAccount,\n      );\n      if (!orderbookData?.data || !market) {\n        return [null, null];\n      }\n      const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\n      const [bbo] =\n        decodedOrderbookData &&\n        decodedOrderbookData.getL2(1).map(([price]) => price);\n      if (!bbo || !size) {\n        return [null, null];\n      }\n      const tickSizeDecimals = getDecimalCount(market.tickSize);\n      const expectedPrice = getExpectedFillPrice(\n        decodedOrderbookData,\n        size,\n        tickSizeDecimals,\n      );\n      if (side === 'buy') {\n        return [expectedPrice.toFixed(6), 1];\n      } else {\n        return [1, expectedPrice.toFixed(6)];\n      }\n    } catch (e) {\n      console.log(`Got error ${e}`);\n      return [null, null];\n    }\n  };\n\n  useEffect(\n    () => {\n      getPrice().then(([fromAmount, toAmount]) => {\n        setFromAmount(fromAmount || undefined);\n        setToAmount(toAmount || undefined);\n      });\n    },\n    // eslint-disable-next-line\n    [market?.address.toBase58(), size],\n  );\n\n  const canConvert = market && size && size > 0;\n  const balance = balances.find(\n    (coinBalance) => coinBalance.coin === fromToken,\n  );\n  const availableBalance =\n    ((balance?.unsettled || 0) + (balance?.wallet || 0)) * 0.99;\n\n  return (\n    <React.Fragment>\n      <Row style={{ marginBottom: 8 }}>\n        <Col>\n          <Input\n            style={{ minWidth: 300 }}\n            addonBefore={`Size (${fromToken})`}\n            placeholder=\"Size\"\n            value={size === null ? undefined : size}\n            type=\"number\"\n            onChange={(e) => setSize(parseFloat(e.target.value) || undefined)}\n          />\n        </Col>\n      </Row>\n      <Row gutter={12} style={{ marginBottom: 8 }}>\n        <Col span={12}>\n          <ActionButton\n            block\n            size=\"large\"\n            onClick={() => setSize(floorToDecimal(availableBalance, 4))}\n          >\n            Max: {availableBalance.toFixed(4)}\n          </ActionButton>\n        </Col>\n        <Col span={12}>\n          <ConvertButton\n            block\n            type=\"primary\"\n            size=\"large\"\n            loading={isConverting}\n            onClick={onConvert}\n            disabled={!canConvert}\n          >\n            Convert\n          </ConvertButton>\n        </Col>\n      </Row>\n      {canConvert && (\n        <Row align=\"middle\" justify=\"center\">\n          <Col>\n            {fromAmount} {fromToken}\n          </Col>\n          <Col offset={1}>\n            <SwapOutlined />\n          </Col>\n          <Col offset={1}>\n            {toAmount} {toToken}\n          </Col>\n        </Row>\n      )}\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}