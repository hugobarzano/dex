{"ast":null,"code":"import _regeneratorRuntime from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import EventEmitter from'eventemitter3';import{notify}from'../../utils/notifications';import{DEFAULT_PUBLIC_KEY}from'../types';export var PhantomWalletAdapter=/*#__PURE__*/function(_EventEmitter){_inherits(PhantomWalletAdapter,_EventEmitter);var _super=_createSuper(PhantomWalletAdapter);function PhantomWalletAdapter(){var _this;_classCallCheck(this,PhantomWalletAdapter);_this=_super.call(this);_this._handleConnect=function(){var _this2;for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}(_this2=_this).emit.apply(_this2,['connect'].concat(args));};_this._handleDisconnect=function(){var _this3;for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}(_this3=_this).emit.apply(_this3,['disconnect'].concat(args));};_this.connect=_this.connect.bind(_assertThisInitialized(_this));return _this;}_createClass(PhantomWalletAdapter,[{key:\"_provider\",get:function get(){var _window,_window$solana;if((_window=window)===null||_window===void 0?void 0:(_window$solana=_window.solana)===null||_window$solana===void 0?void 0:_window$solana.isPhantom){return window.solana;}return undefined;}},{key:\"connected\",get:function get(){var _this$_provider;return((_this$_provider=this._provider)===null||_this$_provider===void 0?void 0:_this$_provider.isConnected)||false;}},{key:\"autoApprove\",get:function get(){var _this$_provider2;return((_this$_provider2=this._provider)===null||_this$_provider2===void 0?void 0:_this$_provider2.autoApprove)||false;}},{key:\"signAllTransactions\",value:function(){var _signAllTransactions=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(transactions){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(this._provider){_context.next=2;break;}return _context.abrupt(\"return\",transactions);case 2:return _context.abrupt(\"return\",this._provider.signAllTransactions(transactions));case 3:case\"end\":return _context.stop();}}},_callee,this);}));function signAllTransactions(_x){return _signAllTransactions.apply(this,arguments);}return signAllTransactions;}()},{key:\"publicKey\",get:function get(){var _this$_provider3;return((_this$_provider3=this._provider)===null||_this$_provider3===void 0?void 0:_this$_provider3.publicKey)||DEFAULT_PUBLIC_KEY;}},{key:\"signTransaction\",value:function(){var _signTransaction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(transaction){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(this._provider){_context2.next=2;break;}return _context2.abrupt(\"return\",transaction);case 2:return _context2.abrupt(\"return\",this._provider.signTransaction(transaction));case 3:case\"end\":return _context2.stop();}}},_callee2,this);}));function signTransaction(_x2){return _signTransaction.apply(this,arguments);}return signTransaction;}()},{key:\"connect\",value:function connect(){var _this$_provider6;if(!this._provider){window.open('https://phantom.app/','_blank');notify({message:'Connection Error',description:'Please install Phantom wallet'});return;}if(!this._provider.listeners('connect').length){var _this$_provider4;(_this$_provider4=this._provider)===null||_this$_provider4===void 0?void 0:_this$_provider4.on('connect',this._handleConnect);}if(!this._provider.listeners('disconnect').length){var _this$_provider5;(_this$_provider5=this._provider)===null||_this$_provider5===void 0?void 0:_this$_provider5.on('disconnect',this._handleDisconnect);}return(_this$_provider6=this._provider)===null||_this$_provider6===void 0?void 0:_this$_provider6.connect();}},{key:\"disconnect\",value:function disconnect(){if(this._provider){this._provider.disconnect();}}}]);return PhantomWalletAdapter;}(EventEmitter);","map":{"version":3,"sources":["/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/src/wallet-adapters/phantom/index.tsx"],"names":["EventEmitter","notify","DEFAULT_PUBLIC_KEY","PhantomWalletAdapter","_handleConnect","args","emit","_handleDisconnect","connect","bind","window","solana","isPhantom","undefined","_provider","isConnected","autoApprove","transactions","signAllTransactions","publicKey","transaction","signTransaction","open","message","description","listeners","length","on","disconnect"],"mappings":"yuCAAA,MAAOA,CAAAA,YAAP,KAAyB,eAAzB,CAEA,OAASC,MAAT,KAAuB,2BAAvB,CACA,OAASC,kBAAT,KAAkD,UAAlD,CAsBA,UAAaC,CAAAA,oBAAb,kIAGE,+BAAc,sDACZ,wBADY,MAYNC,cAZM,CAYW,UAAa,0CAATC,IAAS,0CAATA,IAAS,wBACpC,eAAKC,IAAL,eAAU,SAAV,SAAwBD,IAAxB,GACD,CAda,OAgBNE,iBAhBM,CAgBc,UAAa,2CAATF,IAAS,+CAATA,IAAS,0BACvC,eAAKC,IAAL,eAAU,YAAV,SAA2BD,IAA3B,GACD,CAlBa,CAEZ,MAAKG,OAAL,CAAe,MAAKA,OAAL,CAAaC,IAAb,+BAAf,CAFY,aAGb,CANH,wDAQE,cAAqD,4BACnD,YAAKC,MAAL,kDAAI,QAAiBC,MAArB,yCAAI,eAAyBC,SAA7B,CAAwC,CACtC,MAAQF,CAAAA,MAAD,CAAgBC,MAAvB,CACD,CACD,MAAOE,CAAAA,SAAP,CACD,CAbH,uBAuBE,cAAgB,qBACd,MAAO,uBAAKC,SAAL,0DAAgBC,WAAhB,GAA+B,KAAtC,CACD,CAzBH,yBA2BE,cAAkB,sBAChB,MAAO,wBAAKD,SAAL,4DAAgBE,WAAhB,GAA+B,KAAtC,CACD,CA7BH,+HA+BE,iBACEC,YADF,qHAGO,KAAKH,SAHZ,yDAIWG,YAJX,yCAOS,KAAKH,SAAL,CAAeI,mBAAf,CAAmCD,YAAnC,CAPT,6DA/BF,4IAyCE,cAAgB,sBACd,MAAO,wBAAKH,SAAL,4DAAgBK,SAAhB,GAA6BjB,kBAApC,CACD,CA3CH,uHA6CE,kBAAsBkB,WAAtB,yHACO,KAAKN,SADZ,2DAEWM,WAFX,0CAKS,KAAKN,SAAL,CAAeO,eAAf,CAA+BD,WAA/B,CALT,+DA7CF,iIAqDE,kBAAU,sBACR,GAAI,CAAC,KAAKN,SAAV,CAAqB,CACnBJ,MAAM,CAACY,IAAP,CAAY,sBAAZ,CAAoC,QAApC,EACArB,MAAM,CAAC,CACLsB,OAAO,CAAE,kBADJ,CAELC,WAAW,CAAE,+BAFR,CAAD,CAAN,CAIA,OACD,CACD,GAAI,CAAC,KAAKV,SAAL,CAAeW,SAAf,CAAyB,SAAzB,EAAoCC,MAAzC,CAAiD,sBAC/C,uBAAKZ,SAAL,4DAAgBa,EAAhB,CAAmB,SAAnB,CAA8B,KAAKvB,cAAnC,EACD,CACD,GAAI,CAAC,KAAKU,SAAL,CAAeW,SAAf,CAAyB,YAAzB,EAAuCC,MAA5C,CAAoD,sBAClD,uBAAKZ,SAAL,4DAAgBa,EAAhB,CAAmB,YAAnB,CAAiC,KAAKpB,iBAAtC,EACD,CACD,wBAAO,KAAKO,SAAZ,2CAAO,iBAAgBN,OAAhB,EAAP,CACD,CArEH,0BAuEE,qBAAa,CACX,GAAI,KAAKM,SAAT,CAAoB,CAClB,KAAKA,SAAL,CAAec,UAAf,GACD,CACF,CA3EH,kCACU5B,YADV","sourcesContent":["import EventEmitter from 'eventemitter3';\nimport { PublicKey, Transaction } from '@solana/web3.js';\nimport { notify } from '../../utils/notifications';\nimport { DEFAULT_PUBLIC_KEY, WalletAdapter } from '../types';\n\ntype PhantomEvent = 'disconnect' | 'connect';\ntype PhantomRequestMethod =\n  | 'connect'\n  | 'disconnect'\n  | 'signTransaction'\n  | 'signAllTransactions';\n\ninterface PhantomProvider {\n  publicKey?: PublicKey;\n  isConnected?: boolean;\n  autoApprove?: boolean;\n  signTransaction: (transaction: Transaction) => Promise<Transaction>;\n  signAllTransactions: (transactions: Transaction[]) => Promise<Transaction[]>;\n  connect: () => Promise<void>;\n  disconnect: () => Promise<void>;\n  on: (event: PhantomEvent, handler: (args: any) => void) => void;\n  request: (method: PhantomRequestMethod, params: any) => Promise<any>;\n  listeners: (event: PhantomEvent) => (() => void)[];\n}\n\nexport class PhantomWalletAdapter\n  extends EventEmitter\n  implements WalletAdapter {\n  constructor() {\n    super();\n    this.connect = this.connect.bind(this);\n  }\n\n  private get _provider(): PhantomProvider | undefined {\n    if ((window as any)?.solana?.isPhantom) {\n      return (window as any).solana;\n    }\n    return undefined;\n  }\n\n  private _handleConnect = (...args) => {\n    this.emit('connect', ...args);\n  }\n\n  private _handleDisconnect = (...args) => {\n    this.emit('disconnect', ...args);\n  }\n\n  get connected() {\n    return this._provider?.isConnected || false;\n  }\n\n  get autoApprove() {\n    return this._provider?.autoApprove || false;\n  }\n\n  async signAllTransactions(\n    transactions: Transaction[],\n  ): Promise<Transaction[]> {\n    if (!this._provider) {\n      return transactions;\n    }\n\n    return this._provider.signAllTransactions(transactions);\n  }\n\n  get publicKey() {\n    return this._provider?.publicKey || DEFAULT_PUBLIC_KEY;\n  }\n\n  async signTransaction(transaction: Transaction) {\n    if (!this._provider) {\n      return transaction;\n    }\n\n    return this._provider.signTransaction(transaction);\n  }\n\n  connect() {\n    if (!this._provider) {\n      window.open('https://phantom.app/', '_blank');\n      notify({\n        message: 'Connection Error',\n        description: 'Please install Phantom wallet',\n      });\n      return;\n    }\n    if (!this._provider.listeners('connect').length) {\n      this._provider?.on('connect', this._handleConnect);\n    }\n    if (!this._provider.listeners('disconnect').length) {\n      this._provider?.on('disconnect', this._handleDisconnect);\n    }\n    return this._provider?.connect();\n  }\n\n  disconnect() {\n    if (this._provider) {\n      this._provider.disconnect();\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}