{"ast":null,"code":"import _regeneratorRuntime from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{PublicKey}from'@solana/web3.js';var INS_GET_PUBKEY=0x05;var INS_SIGN_MESSAGE=0x06;var P1_NON_CONFIRM=0x00;var P1_CONFIRM=0x01;var P2_EXTEND=0x01;var P2_MORE=0x02;var MAX_PAYLOAD=255;var LEDGER_CLA=0xe0;/*\n * Helper for chunked send of large payloads\n */function ledgerSend(_x,_x2,_x3,_x4){return _ledgerSend.apply(this,arguments);}function _ledgerSend(){_ledgerSend=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(transport,instruction,p1,payload){var p2,payloadOffset,_chunk,_reply,chunk,reply;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:p2=0;payloadOffset=0;if(!(payload.length>MAX_PAYLOAD)){_context.next=15;break;}case 3:if(!(payload.length-payloadOffset>MAX_PAYLOAD)){_context.next=15;break;}_chunk=payload.slice(payloadOffset,payloadOffset+MAX_PAYLOAD);payloadOffset+=MAX_PAYLOAD;console.log('send',(p2|P2_MORE).toString(16),_chunk.length.toString(16),_chunk);_context.next=9;return transport.send(LEDGER_CLA,instruction,p1,p2|P2_MORE,_chunk);case 9:_reply=_context.sent;if(!(_reply.length!==2)){_context.next=12;break;}throw new Error('Received unexpected reply payload');case 12:p2|=P2_EXTEND;_context.next=3;break;case 15:chunk=payload.slice(payloadOffset);console.log('send',p2.toString(16),chunk.length.toString(16),chunk);_context.next=19;return transport.send(LEDGER_CLA,instruction,p1,p2,chunk);case 19:reply=_context.sent;return _context.abrupt(\"return\",reply.slice(0,reply.length-2));case 21:case\"end\":return _context.stop();}}},_callee);}));return _ledgerSend.apply(this,arguments);}var BIP32_HARDENED_BIT=1<<31>>>0;function harden(){var n=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;return(n|BIP32_HARDENED_BIT)>>>0;}export function getSolanaDerivationPath(account,change){var length;if(account!==undefined){if(change!==undefined){length=4;}else{length=3;}}else{length=2;}var derivationPath=Buffer.alloc(1+length*4);// eslint-disable-next-line\nvar offset=0;offset=derivationPath.writeUInt8(length,offset);offset=derivationPath.writeUInt32BE(harden(44),offset);// Using BIP44\noffset=derivationPath.writeUInt32BE(harden(501),offset);// Solana's BIP44 path\nif(length>2){offset=derivationPath.writeUInt32BE(harden(account),offset);if(length===4){// @FIXME: https://github.com/project-serum/spl-token-wallet/issues/59\noffset=derivationPath.writeUInt32BE(harden(change),offset);}}return derivationPath;}export function signTransaction(_x5,_x6){return _signTransaction.apply(this,arguments);}function _signTransaction(){_signTransaction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(transport,transaction){var derivationPath,messageBytes,_args2=arguments;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:derivationPath=_args2.length>2&&_args2[2]!==undefined?_args2[2]:getSolanaDerivationPath();messageBytes=transaction.serializeMessage();return _context2.abrupt(\"return\",signBytes(transport,messageBytes,derivationPath));case 3:case\"end\":return _context2.stop();}}},_callee2);}));return _signTransaction.apply(this,arguments);}export function signBytes(_x7,_x8){return _signBytes.apply(this,arguments);}function _signBytes(){_signBytes=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(transport,bytes){var derivationPath,numPaths,payload,_args3=arguments;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:derivationPath=_args3.length>2&&_args3[2]!==undefined?_args3[2]:getSolanaDerivationPath();numPaths=Buffer.alloc(1);numPaths.writeUInt8(1,0);payload=Buffer.concat([numPaths,derivationPath,bytes]);// @FIXME: must enable blind signing in Solana Ledger App per https://github.com/project-serum/spl-token-wallet/issues/71\n// See also https://github.com/project-serum/spl-token-wallet/pull/23#issuecomment-712317053\nreturn _context3.abrupt(\"return\",ledgerSend(transport,INS_SIGN_MESSAGE,P1_CONFIRM,payload));case 5:case\"end\":return _context3.stop();}}},_callee3);}));return _signBytes.apply(this,arguments);}export function getPublicKey(_x9){return _getPublicKey.apply(this,arguments);}function _getPublicKey(){_getPublicKey=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(transport){var derivationPath,publicKeyBytes,_args4=arguments;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:derivationPath=_args4.length>1&&_args4[1]!==undefined?_args4[1]:getSolanaDerivationPath();_context4.next=3;return ledgerSend(transport,INS_GET_PUBKEY,P1_NON_CONFIRM,derivationPath);case 3:publicKeyBytes=_context4.sent;return _context4.abrupt(\"return\",new PublicKey(publicKeyBytes));case 5:case\"end\":return _context4.stop();}}},_callee4);}));return _getPublicKey.apply(this,arguments);}","map":{"version":3,"sources":["/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/src/wallet-adapters/ledger/core.ts"],"names":["PublicKey","INS_GET_PUBKEY","INS_SIGN_MESSAGE","P1_NON_CONFIRM","P1_CONFIRM","P2_EXTEND","P2_MORE","MAX_PAYLOAD","LEDGER_CLA","ledgerSend","transport","instruction","p1","payload","p2","payloadOffset","length","chunk","slice","console","log","toString","send","reply","Error","BIP32_HARDENED_BIT","harden","n","getSolanaDerivationPath","account","change","undefined","derivationPath","Buffer","alloc","offset","writeUInt8","writeUInt32BE","signTransaction","transaction","messageBytes","serializeMessage","signBytes","bytes","numPaths","concat","getPublicKey","publicKeyBytes"],"mappings":"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","sourcesContent":["import type Transport from '@ledgerhq/hw-transport';\nimport type { Transaction } from '@solana/web3.js';\n\nimport { PublicKey } from '@solana/web3.js';\n\nconst INS_GET_PUBKEY = 0x05;\nconst INS_SIGN_MESSAGE = 0x06;\n\nconst P1_NON_CONFIRM = 0x00;\nconst P1_CONFIRM = 0x01;\n\nconst P2_EXTEND = 0x01;\nconst P2_MORE = 0x02;\n\nconst MAX_PAYLOAD = 255;\n\nconst LEDGER_CLA = 0xe0;\n\n/*\n * Helper for chunked send of large payloads\n */\nasync function ledgerSend(\n  transport: Transport,\n  instruction: number,\n  p1: number,\n  payload: Buffer,\n) {\n  let p2 = 0;\n  let payloadOffset = 0;\n\n  if (payload.length > MAX_PAYLOAD) {\n    while (payload.length - payloadOffset > MAX_PAYLOAD) {\n      const chunk = payload.slice(payloadOffset, payloadOffset + MAX_PAYLOAD);\n      payloadOffset += MAX_PAYLOAD;\n      console.log(\n        'send',\n        (p2 | P2_MORE).toString(16),\n        chunk.length.toString(16),\n        chunk,\n      );\n      const reply = await transport.send(\n        LEDGER_CLA,\n        instruction,\n        p1,\n        p2 | P2_MORE,\n        chunk,\n      );\n      if (reply.length !== 2) {\n        throw new Error('Received unexpected reply payload');\n      }\n      p2 |= P2_EXTEND;\n    }\n  }\n\n  const chunk = payload.slice(payloadOffset);\n  console.log('send', p2.toString(16), chunk.length.toString(16), chunk);\n  const reply = await transport.send(LEDGER_CLA, instruction, p1, p2, chunk);\n\n  return reply.slice(0, reply.length - 2);\n}\n\nconst BIP32_HARDENED_BIT = (1 << 31) >>> 0;\nfunction harden(n: number = 0) {\n  return (n | BIP32_HARDENED_BIT) >>> 0;\n}\n\nexport function getSolanaDerivationPath(account?: number, change?: number) {\n  var length;\n  if (account !== undefined) {\n    if (change !== undefined) {\n      length = 4;\n    } else {\n      length = 3;\n    }\n  } else {\n    length = 2;\n  }\n\n  var derivationPath = Buffer.alloc(1 + length * 4);\n  // eslint-disable-next-line\n  var offset = 0;\n  offset = derivationPath.writeUInt8(length, offset);\n  offset = derivationPath.writeUInt32BE(harden(44), offset); // Using BIP44\n  offset = derivationPath.writeUInt32BE(harden(501), offset); // Solana's BIP44 path\n\n  if (length > 2) {\n    offset = derivationPath.writeUInt32BE(harden(account), offset);\n    if (length === 4) {\n      // @FIXME: https://github.com/project-serum/spl-token-wallet/issues/59\n      offset = derivationPath.writeUInt32BE(harden(change), offset);\n    }\n  }\n\n  return derivationPath;\n}\n\nexport async function signTransaction(\n  transport: Transport,\n  transaction: Transaction,\n  derivationPath: Buffer = getSolanaDerivationPath(),\n) {\n  const messageBytes = transaction.serializeMessage();\n  return signBytes(transport, messageBytes, derivationPath);\n}\n\nexport async function signBytes(\n  transport: Transport,\n  bytes: Buffer,\n  derivationPath: Buffer = getSolanaDerivationPath(),\n) {\n  const numPaths = Buffer.alloc(1);\n  numPaths.writeUInt8(1, 0);\n\n  const payload = Buffer.concat([numPaths, derivationPath, bytes]);\n\n  // @FIXME: must enable blind signing in Solana Ledger App per https://github.com/project-serum/spl-token-wallet/issues/71\n  // See also https://github.com/project-serum/spl-token-wallet/pull/23#issuecomment-712317053\n  return ledgerSend(transport, INS_SIGN_MESSAGE, P1_CONFIRM, payload);\n}\n\nexport async function getPublicKey(\n  transport: Transport,\n  derivationPath: Buffer = getSolanaDerivationPath(),\n) {\n  const publicKeyBytes = await ledgerSend(\n    transport,\n    INS_GET_PUBKEY,\n    P1_NON_CONFIRM,\n    derivationPath,\n  );\n\n  return new PublicKey(publicKeyBytes);\n}\n"]},"metadata":{},"sourceType":"module"}