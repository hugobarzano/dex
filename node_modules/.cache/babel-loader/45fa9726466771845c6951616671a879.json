{"ast":null,"code":"import _toConsumableArray from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/fork/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _createForOfIteratorHelper from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/fork/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _slicedToArray from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/fork/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/fork/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/fork/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/fork/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{Market,MARKETS,OpenOrders,Orderbook,TOKEN_MINTS,TokenInstructions}from'@project-serum/serum';import{PublicKey}from'@solana/web3.js';import React,{useContext,useEffect,useState}from'react';import{divideBnToNumber,floorToDecimal,getTokenMultiplierFromDecimals,sleep,useLocalStorageState}from'./utils';import{refreshCache,useAsyncData}from'./fetch-loop';import{useAccountData,useAccountInfo,useConnection}from'./connection';import{useWallet}from'./wallet';import tuple from'immutable-tuple';import{notify}from'./notifications';import BN from'bn.js';import{getTokenAccountInfo,parseTokenAccountData,useMintInfos}from'./tokens';import{WRAPPED_SOL_MINT}from'@project-serum/serum/lib/token-instructions';import BonfidaApi from'./bonfidaConnector';// Used in debugging, should be false in production\nimport{jsx as _jsx}from\"react/jsx-runtime\";var _IGNORE_DEPRECATED=false;export var USE_MARKETS=_IGNORE_DEPRECATED?MARKETS.map(function(m){return _objectSpread(_objectSpread({},m),{},{deprecated:false});}):MARKETS;export function useMarketsList(){return USE_MARKETS.filter(function(_ref){var _process$env$REACT_AP;var name=_ref.name,deprecated=_ref.deprecated;return!deprecated&&!((_process$env$REACT_AP=process.env.REACT_APP_EXCLUDE_MARKETS)===null||_process$env$REACT_AP===void 0?void 0:_process$env$REACT_AP.includes(name));});}export function useAllMarkets(){var connection=useConnection();var _useCustomMarkets=useCustomMarkets(),customMarkets=_useCustomMarkets.customMarkets;var getAllMarkets=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var markets;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return Promise.all(getMarketInfos(customMarkets).map(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(marketInfo){var market;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return Market.load(connection,marketInfo.address,{},marketInfo.programId);case 3:market=_context.sent;return _context.abrupt(\"return\",{market:market,marketName:marketInfo.name,programId:marketInfo.programId});case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);notify({message:'Error loading all market',description:_context.t0.message,type:'error'});return _context.abrupt(\"return\",null);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function(_x){return _ref3.apply(this,arguments);};}()));case 2:markets=_context2.sent;return _context2.abrupt(\"return\",markets.filter(function(m){return!!m;}));case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function getAllMarkets(){return _ref2.apply(this,arguments);};}();return useAsyncData(getAllMarkets,tuple('getAllMarkets',customMarkets.length,connection),{refreshInterval:_VERY_SLOW_REFRESH_INTERVAL});}export function useUnmigratedOpenOrdersAccounts(){var _wallet$publicKey;var connection=useConnection();var _useWallet=useWallet(),wallet=_useWallet.wallet;function getUnmigratedOpenOrdersAccounts(){return _getUnmigratedOpenOrdersAccounts.apply(this,arguments);}function _getUnmigratedOpenOrdersAccounts(){_getUnmigratedOpenOrdersAccounts=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var deprecatedOpenOrdersAccounts,deprecatedProgramIds,programId,_iterator,_step,openOrdersAccounts,_programId;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!(!wallet||!connection||!wallet.publicKey)){_context3.next=2;break;}return _context3.abrupt(\"return\",[]);case 2:console.log('refreshing useUnmigratedOpenOrdersAccounts');deprecatedOpenOrdersAccounts=[];deprecatedProgramIds=Array.from(new Set(USE_MARKETS.filter(function(_ref4){var deprecated=_ref4.deprecated;return deprecated;}).map(function(_ref5){var programId=_ref5.programId;return programId.toBase58();}))).map(function(publicKeyStr){return new PublicKey(publicKeyStr);});_iterator=_createForOfIteratorHelper(deprecatedProgramIds);_context3.prev=6;_iterator.s();case 8:if((_step=_iterator.n()).done){_context3.next=22;break;}programId=_step.value;_context3.prev=10;_context3.next=13;return OpenOrders.findForOwner(connection,wallet.publicKey,programId);case 13:openOrdersAccounts=_context3.sent;deprecatedOpenOrdersAccounts=deprecatedOpenOrdersAccounts.concat(openOrdersAccounts.filter(function(openOrders){return openOrders.baseTokenTotal.toNumber()||openOrders.quoteTokenTotal.toNumber();}).filter(function(openOrders){return USE_MARKETS.some(function(market){return market.deprecated&&market.address.equals(openOrders.market);});}));_context3.next=20;break;case 17:_context3.prev=17;_context3.t0=_context3[\"catch\"](10);console.log('Error loading deprecated markets',(_programId=programId)===null||_programId===void 0?void 0:_programId.toBase58(),_context3.t0.message);case 20:_context3.next=8;break;case 22:_context3.next=27;break;case 24:_context3.prev=24;_context3.t1=_context3[\"catch\"](6);_iterator.e(_context3.t1);case 27:_context3.prev=27;_iterator.f();return _context3.finish(27);case 30:return _context3.abrupt(\"return\",deprecatedOpenOrdersAccounts);case 31:case\"end\":return _context3.stop();}}},_callee3,null,[[6,24,27,30],[10,17]]);}));return _getUnmigratedOpenOrdersAccounts.apply(this,arguments);}var cacheKey=tuple('getUnmigratedOpenOrdersAccounts',connection,wallet===null||wallet===void 0?void 0:(_wallet$publicKey=wallet.publicKey)===null||_wallet$publicKey===void 0?void 0:_wallet$publicKey.toBase58());var _useAsyncData=useAsyncData(getUnmigratedOpenOrdersAccounts,cacheKey,{refreshInterval:_VERY_SLOW_REFRESH_INTERVAL}),_useAsyncData2=_slicedToArray(_useAsyncData,1),accounts=_useAsyncData2[0];return{accounts:accounts,refresh:function refresh(clearCache){return refreshCache(cacheKey,clearCache);}};}var MarketContext=/*#__PURE__*/React.createContext(null);var _VERY_SLOW_REFRESH_INTERVAL=5000*1000;// For things that don't really change\nvar _SLOW_REFRESH_INTERVAL=5*1000;// For things that change frequently\nvar _FAST_REFRESH_INTERVAL=1000;export var DEFAULT_MARKET=USE_MARKETS.find(function(_ref6){var name=_ref6.name,deprecated=_ref6.deprecated;return name==='SRM/USDT'&&!deprecated;});export function getMarketDetails(market,customMarkets){var _TOKEN_MINTS$find,_TOKEN_MINTS$find2;if(!market){return{};}var marketInfos=getMarketInfos(customMarkets);var marketInfo=marketInfos.find(function(otherMarket){return otherMarket.address.equals(market.address);});var baseCurrency=(market===null||market===void 0?void 0:market.baseMintAddress)&&((_TOKEN_MINTS$find=TOKEN_MINTS.find(function(token){return token.address.equals(market.baseMintAddress);}))===null||_TOKEN_MINTS$find===void 0?void 0:_TOKEN_MINTS$find.name)||(marketInfo===null||marketInfo===void 0?void 0:marketInfo.baseLabel)&&\"\".concat(marketInfo===null||marketInfo===void 0?void 0:marketInfo.baseLabel,\"*\")||'UNKNOWN';var quoteCurrency=(market===null||market===void 0?void 0:market.quoteMintAddress)&&((_TOKEN_MINTS$find2=TOKEN_MINTS.find(function(token){return token.address.equals(market.quoteMintAddress);}))===null||_TOKEN_MINTS$find2===void 0?void 0:_TOKEN_MINTS$find2.name)||(marketInfo===null||marketInfo===void 0?void 0:marketInfo.quoteLabel)&&\"\".concat(marketInfo===null||marketInfo===void 0?void 0:marketInfo.quoteLabel,\"*\")||'UNKNOWN';return _objectSpread(_objectSpread({},marketInfo),{},{marketName:marketInfo===null||marketInfo===void 0?void 0:marketInfo.name,baseCurrency:baseCurrency,quoteCurrency:quoteCurrency,marketInfo:marketInfo});}export function useCustomMarkets(){var _useLocalStorageState=useLocalStorageState('customMarkets',[]),_useLocalStorageState2=_slicedToArray(_useLocalStorageState,2),customMarkets=_useLocalStorageState2[0],setCustomMarkets=_useLocalStorageState2[1];return{customMarkets:customMarkets,setCustomMarkets:setCustomMarkets};}export function MarketProvider(_ref7){var marketAddress=_ref7.marketAddress,setMarketAddress=_ref7.setMarketAddress,children=_ref7.children;var _useCustomMarkets2=useCustomMarkets(),customMarkets=_useCustomMarkets2.customMarkets,setCustomMarkets=_useCustomMarkets2.setCustomMarkets;var address=marketAddress&&new PublicKey(marketAddress);var connection=useConnection();var marketInfos=getMarketInfos(customMarkets);var marketInfo=address&&marketInfos.find(function(market){return market.address.equals(address);});// Replace existing market with a non-deprecated one on first load\nuseEffect(function(){if(marketInfo&&marketInfo.deprecated){console.log('Switching markets from deprecated',marketInfo);if(DEFAULT_MARKET){setMarketAddress(DEFAULT_MARKET.address.toBase58());}}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);var _useState=useState(),_useState2=_slicedToArray(_useState,2),market=_useState2[0],setMarket=_useState2[1];useEffect(function(){var _market$_decoded$ownA;if(market&&marketInfo&&(// @ts-ignore\n(_market$_decoded$ownA=market._decoded.ownAddress)===null||_market$_decoded$ownA===void 0?void 0:_market$_decoded$ownA.equals(marketInfo===null||marketInfo===void 0?void 0:marketInfo.address))){return;}setMarket(null);if(!marketInfo||!marketInfo.address){notify({message:'Error loading market',description:'Please select a market from the dropdown',type:'error'});return;}Market.load(connection,marketInfo.address,{},marketInfo.programId).then(setMarket).catch(function(e){return notify({message:'Error loading market',description:e.message,type:'error'});});// eslint-disable-next-line\n},[connection,marketInfo]);return/*#__PURE__*/_jsx(MarketContext.Provider,{value:_objectSpread(_objectSpread({market:market},getMarketDetails(market,customMarkets)),{},{setMarketAddress:setMarketAddress,customMarkets:customMarkets,setCustomMarkets:setCustomMarkets}),children:children});}export function getTradePageUrl(marketAddress){if(!marketAddress){var saved=localStorage.getItem('marketAddress');if(saved){marketAddress=JSON.parse(saved);}marketAddress=marketAddress||(DEFAULT_MARKET===null||DEFAULT_MARKET===void 0?void 0:DEFAULT_MARKET.address.toBase58())||'';}return\"/market/\".concat(marketAddress);}export function useSelectedTokenAccounts(){var _useLocalStorageState3=useLocalStorageState('selectedTokenAccounts',{}),_useLocalStorageState4=_slicedToArray(_useLocalStorageState3,2),selectedTokenAccounts=_useLocalStorageState4[0],setSelectedTokenAccounts=_useLocalStorageState4[1];return[selectedTokenAccounts,setSelectedTokenAccounts];}export function useMarket(){var context=useContext(MarketContext);if(!context){throw new Error('Missing market context');}return context;}export function useMarkPrice(){var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),markPrice=_useState4[0],setMarkPrice=_useState4[1];var _useOrderbook=useOrderbook(),_useOrderbook2=_slicedToArray(_useOrderbook,1),orderbook=_useOrderbook2[0];var trades=useTrades();useEffect(function(){var _orderbook$bids,_orderbook$asks;var bb=(orderbook===null||orderbook===void 0?void 0:(_orderbook$bids=orderbook.bids)===null||_orderbook$bids===void 0?void 0:_orderbook$bids.length)>0&&Number(orderbook.bids[0][0]);var ba=(orderbook===null||orderbook===void 0?void 0:(_orderbook$asks=orderbook.asks)===null||_orderbook$asks===void 0?void 0:_orderbook$asks.length)>0&&Number(orderbook.asks[0][0]);var last=trades&&trades.length>0&&trades[0].price;var markPrice=bb&&ba?last?[bb,ba,last].sort(function(a,b){return a-b;})[1]:(bb+ba)/2:null;setMarkPrice(markPrice);},[orderbook,trades]);return markPrice;}export function _useUnfilteredTrades(){var limit=arguments.length>0&&arguments[0]!==undefined?arguments[0]:10000;var _useMarket=useMarket(),market=_useMarket.market;var connection=useConnection();function getUnfilteredTrades(){return _getUnfilteredTrades.apply(this,arguments);}function _getUnfilteredTrades(){_getUnfilteredTrades=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(!(!market||!connection)){_context4.next=2;break;}return _context4.abrupt(\"return\",null);case 2:_context4.next=4;return market.loadFills(connection,limit);case 4:return _context4.abrupt(\"return\",_context4.sent);case 5:case\"end\":return _context4.stop();}}},_callee4);}));return _getUnfilteredTrades.apply(this,arguments);}var _useAsyncData3=useAsyncData(getUnfilteredTrades,tuple('getUnfilteredTrades',market,connection),{refreshInterval:_SLOW_REFRESH_INTERVAL}),_useAsyncData4=_slicedToArray(_useAsyncData3,1),trades=_useAsyncData4[0];return trades;// NOTE: For now, websocket is too expensive since the event queue is large\n// and updates very frequently\n// let data = useAccountData(market && market._decoded.eventQueue);\n// if (!data) {\n//   return null;\n// }\n// const events = decodeEventQueue(data, limit);\n// return events\n//   .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n//   .map(market.parseFillEvent.bind(market));\n}export function useBonfidaTrades(){var _useMarket2=useMarket(),market=_useMarket2.market;var marketAddress=market===null||market===void 0?void 0:market.address.toBase58();function getBonfidaTrades(){return _getBonfidaTrades.apply(this,arguments);}function _getBonfidaTrades(){_getBonfidaTrades=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:if(marketAddress){_context5.next=2;break;}return _context5.abrupt(\"return\",null);case 2:_context5.next=4;return BonfidaApi.getRecentTrades(marketAddress);case 4:return _context5.abrupt(\"return\",_context5.sent);case 5:case\"end\":return _context5.stop();}}},_callee5);}));return _getBonfidaTrades.apply(this,arguments);}return useAsyncData(getBonfidaTrades,tuple('getBonfidaTrades',marketAddress),{refreshInterval:_SLOW_REFRESH_INTERVAL},false);}export function useOrderbookAccounts(){var _useMarket3=useMarket(),market=_useMarket3.market;// @ts-ignore\nvar bidData=useAccountData(market&&market._decoded.bids);// @ts-ignore\nvar askData=useAccountData(market&&market._decoded.asks);return{bidOrderbook:market&&bidData?Orderbook.decode(market,bidData):null,askOrderbook:market&&askData?Orderbook.decode(market,askData):null};}export function useOrderbook(){var depth=arguments.length>0&&arguments[0]!==undefined?arguments[0]:20;var _useOrderbookAccounts=useOrderbookAccounts(),bidOrderbook=_useOrderbookAccounts.bidOrderbook,askOrderbook=_useOrderbookAccounts.askOrderbook;var _useMarket4=useMarket(),market=_useMarket4.market;var bids=!bidOrderbook||!market?[]:bidOrderbook.getL2(depth).map(function(_ref8){var _ref9=_slicedToArray(_ref8,2),price=_ref9[0],size=_ref9[1];return[price,size];});var asks=!askOrderbook||!market?[]:askOrderbook.getL2(depth).map(function(_ref10){var _ref11=_slicedToArray(_ref10,2),price=_ref11[0],size=_ref11[1];return[price,size];});return[{bids:bids,asks:asks},!!bids||!!asks];}// Want the balances table to be fast-updating, dont want open orders to flicker\n// TODO: Update to use websocket\nexport function useOpenOrdersAccounts(){var fast=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var _useMarket5=useMarket(),market=_useMarket5.market;var _useWallet2=useWallet(),connected=_useWallet2.connected,wallet=_useWallet2.wallet;var connection=useConnection();function getOpenOrdersAccounts(){return _getOpenOrdersAccounts.apply(this,arguments);}function _getOpenOrdersAccounts(){_getOpenOrdersAccounts=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:if(!(!connected||!wallet)){_context6.next=2;break;}return _context6.abrupt(\"return\",null);case 2:if(market){_context6.next=4;break;}return _context6.abrupt(\"return\",null);case 4:_context6.next=6;return market.findOpenOrdersAccountsForOwner(connection,wallet.publicKey);case 6:return _context6.abrupt(\"return\",_context6.sent);case 7:case\"end\":return _context6.stop();}}},_callee6);}));return _getOpenOrdersAccounts.apply(this,arguments);}return useAsyncData(getOpenOrdersAccounts,tuple('getOpenOrdersAccounts',wallet,market,connected),{refreshInterval:fast?_FAST_REFRESH_INTERVAL:_SLOW_REFRESH_INTERVAL});}export function useSelectedOpenOrdersAccount(){var fast=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var _useOpenOrdersAccount=useOpenOrdersAccounts(fast),_useOpenOrdersAccount2=_slicedToArray(_useOpenOrdersAccount,1),accounts=_useOpenOrdersAccount2[0];if(!accounts){return null;}return accounts[0];}export function useTokenAccounts(){var _useWallet3=useWallet(),connected=_useWallet3.connected,wallet=_useWallet3.wallet;var connection=useConnection();function getTokenAccounts(){return _getTokenAccounts.apply(this,arguments);}function _getTokenAccounts(){_getTokenAccounts=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(){return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:if(!(!connected||!wallet)){_context7.next=2;break;}return _context7.abrupt(\"return\",null);case 2:_context7.next=4;return getTokenAccountInfo(connection,wallet.publicKey);case 4:return _context7.abrupt(\"return\",_context7.sent);case 5:case\"end\":return _context7.stop();}}},_callee7);}));return _getTokenAccounts.apply(this,arguments);}return useAsyncData(getTokenAccounts,tuple('getTokenAccounts',wallet,connected),{refreshInterval:_SLOW_REFRESH_INTERVAL});}export function getSelectedTokenAccountForMint(accounts,mint,selectedPubKey){if(!accounts||!mint){return null;}var filtered=accounts.filter(function(_ref12){var effectiveMint=_ref12.effectiveMint,pubkey=_ref12.pubkey;return mint.equals(effectiveMint)&&(!selectedPubKey||(typeof selectedPubKey==='string'?selectedPubKey:selectedPubKey.toBase58())===pubkey.toBase58());});return filtered&&filtered[0];}export function useSelectedQuoteCurrencyAccount(){var _useTokenAccounts=useTokenAccounts(),_useTokenAccounts2=_slicedToArray(_useTokenAccounts,1),accounts=_useTokenAccounts2[0];var _useMarket6=useMarket(),market=_useMarket6.market;var _useSelectedTokenAcco=useSelectedTokenAccounts(),_useSelectedTokenAcco2=_slicedToArray(_useSelectedTokenAcco,1),selectedTokenAccounts=_useSelectedTokenAcco2[0];var mintAddress=market===null||market===void 0?void 0:market.quoteMintAddress;return getSelectedTokenAccountForMint(accounts,mintAddress,mintAddress&&selectedTokenAccounts[mintAddress.toBase58()]);}export function useSelectedBaseCurrencyAccount(){var _useTokenAccounts3=useTokenAccounts(),_useTokenAccounts4=_slicedToArray(_useTokenAccounts3,1),accounts=_useTokenAccounts4[0];var _useMarket7=useMarket(),market=_useMarket7.market;var _useSelectedTokenAcco3=useSelectedTokenAccounts(),_useSelectedTokenAcco4=_slicedToArray(_useSelectedTokenAcco3,1),selectedTokenAccounts=_useSelectedTokenAcco4[0];var mintAddress=market===null||market===void 0?void 0:market.baseMintAddress;return getSelectedTokenAccountForMint(accounts,mintAddress,mintAddress&&selectedTokenAccounts[mintAddress.toBase58()]);}// TODO: Update to use websocket\nexport function useSelectedQuoteCurrencyBalances(){var quoteCurrencyAccount=useSelectedQuoteCurrencyAccount();var _useMarket8=useMarket(),market=_useMarket8.market;var _useAccountInfo=useAccountInfo(quoteCurrencyAccount===null||quoteCurrencyAccount===void 0?void 0:quoteCurrencyAccount.pubkey),_useAccountInfo2=_slicedToArray(_useAccountInfo,2),accountInfo=_useAccountInfo2[0],loaded=_useAccountInfo2[1];if(!market||!quoteCurrencyAccount||!loaded||!accountInfo){return null;}if(market.quoteMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)){var _ref13;return(_ref13=(accountInfo===null||accountInfo===void 0?void 0:accountInfo.lamports)/1e9)!==null&&_ref13!==void 0?_ref13:0;}return market.quoteSplSizeToNumber(new BN(accountInfo.data.slice(64,72),10,'le'));}// TODO: Update to use websocket\nexport function useSelectedBaseCurrencyBalances(){var baseCurrencyAccount=useSelectedBaseCurrencyAccount();var _useMarket9=useMarket(),market=_useMarket9.market;var _useAccountInfo3=useAccountInfo(baseCurrencyAccount===null||baseCurrencyAccount===void 0?void 0:baseCurrencyAccount.pubkey),_useAccountInfo4=_slicedToArray(_useAccountInfo3,2),accountInfo=_useAccountInfo4[0],loaded=_useAccountInfo4[1];if(!market||!baseCurrencyAccount||!loaded||!accountInfo){return null;}if(market.baseMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)){var _ref14;return(_ref14=(accountInfo===null||accountInfo===void 0?void 0:accountInfo.lamports)/1e9)!==null&&_ref14!==void 0?_ref14:0;}return market.baseSplSizeToNumber(new BN(accountInfo.data.slice(64,72),10,'le'));}export function useOpenOrders(){var _useMarket10=useMarket(),market=_useMarket10.market,marketName=_useMarket10.marketName;var openOrdersAccount=useSelectedOpenOrdersAccount();var _useOrderbookAccounts2=useOrderbookAccounts(),bidOrderbook=_useOrderbookAccounts2.bidOrderbook,askOrderbook=_useOrderbookAccounts2.askOrderbook;if(!market||!openOrdersAccount||!bidOrderbook||!askOrderbook){return null;}return market.filterForOpenOrders(bidOrderbook,askOrderbook,[openOrdersAccount]).map(function(order){return _objectSpread(_objectSpread({},order),{},{marketName:marketName,market:market});});}export function useTrades(){var limit=arguments.length>0&&arguments[0]!==undefined?arguments[0]:100;var trades=_useUnfilteredTrades(limit);if(!trades){return null;}// Until partial fills are each given their own fill, use maker fills\nreturn trades.filter(function(_ref15){var eventFlags=_ref15.eventFlags;return eventFlags.maker;}).map(function(trade){return _objectSpread(_objectSpread({},trade),{},{side:trade.side==='buy'?'sell':'buy'});});}export function useLocallyStoredFeeDiscountKey(){var _useLocalStorageState5=useLocalStorageState(\"feeDiscountKey\",undefined),_useLocalStorageState6=_slicedToArray(_useLocalStorageState5,2),storedFeeDiscountKey=_useLocalStorageState6[0],setStoredFeeDiscountKey=_useLocalStorageState6[1];return{storedFeeDiscountKey:storedFeeDiscountKey?new PublicKey(storedFeeDiscountKey):undefined,setStoredFeeDiscountKey:setStoredFeeDiscountKey};}export function useFeeDiscountKeys(){var _useMarket11=useMarket(),market=_useMarket11.market;var _useWallet4=useWallet(),connected=_useWallet4.connected,wallet=_useWallet4.wallet;var connection=useConnection();var _useLocallyStoredFeeD=useLocallyStoredFeeDiscountKey(),setStoredFeeDiscountKey=_useLocallyStoredFeeD.setStoredFeeDiscountKey;var getFeeDiscountKeys=/*#__PURE__*/function(){var _ref16=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(){var feeDiscountKey;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:if(!(!connected||!wallet)){_context8.next=2;break;}return _context8.abrupt(\"return\",null);case 2:if(market){_context8.next=4;break;}return _context8.abrupt(\"return\",null);case 4:_context8.next=6;return market.findFeeDiscountKeys(connection,wallet.publicKey);case 6:feeDiscountKey=_context8.sent;if(feeDiscountKey){setStoredFeeDiscountKey(feeDiscountKey[0].pubkey.toBase58());}return _context8.abrupt(\"return\",feeDiscountKey);case 9:case\"end\":return _context8.stop();}}},_callee8);}));return function getFeeDiscountKeys(){return _ref16.apply(this,arguments);};}();return useAsyncData(getFeeDiscountKeys,tuple('getFeeDiscountKeys',wallet,market,connected),{refreshInterval:_SLOW_REFRESH_INTERVAL});}export function useFills(){var limit=arguments.length>0&&arguments[0]!==undefined?arguments[0]:100;var _useMarket12=useMarket(),marketName=_useMarket12.marketName;var fills=_useUnfilteredTrades(limit);var _useOpenOrdersAccount3=useOpenOrdersAccounts(),_useOpenOrdersAccount4=_slicedToArray(_useOpenOrdersAccount3,1),openOrdersAccounts=_useOpenOrdersAccount4[0];if(!openOrdersAccounts||openOrdersAccounts.length===0){return null;}if(!fills){return null;}return fills.filter(function(fill){return openOrdersAccounts.some(function(openOrdersAccount){return fill.openOrders.equals(openOrdersAccount.publicKey);});}).map(function(fill){return _objectSpread(_objectSpread({},fill),{},{marketName:marketName});});}export function useAllOpenOrdersAccounts(){var _wallet$publicKey2;var _useWallet5=useWallet(),wallet=_useWallet5.wallet,connected=_useWallet5.connected;var connection=useConnection();var marketInfos=useMarketInfos();var programIds=_toConsumableArray(new Set(marketInfos.map(function(info){return info.programId.toBase58();}))).map(function(stringProgramId){return new PublicKey(stringProgramId);});var getAllOpenOrdersAccounts=/*#__PURE__*/function(){var _ref17=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(){return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:if(!(!connected||!wallet)){_context9.next=2;break;}return _context9.abrupt(\"return\",[]);case 2:_context9.next=4;return Promise.all(programIds.map(function(programId){return OpenOrders.findForOwner(connection,wallet.publicKey,programId);}));case 4:return _context9.abrupt(\"return\",_context9.sent.flat());case 5:case\"end\":return _context9.stop();}}},_callee9);}));return function getAllOpenOrdersAccounts(){return _ref17.apply(this,arguments);};}();return useAsyncData(getAllOpenOrdersAccounts,tuple('getAllOpenOrdersAccounts',connection,connected,wallet===null||wallet===void 0?void 0:(_wallet$publicKey2=wallet.publicKey)===null||_wallet$publicKey2===void 0?void 0:_wallet$publicKey2.toBase58(),marketInfos.length,(programIds||[]).length),{refreshInterval:_SLOW_REFRESH_INTERVAL});}export function useAllOpenOrdersBalances(){var _useAllOpenOrdersAcco=useAllOpenOrdersAccounts(),_useAllOpenOrdersAcco2=_slicedToArray(_useAllOpenOrdersAcco,2),openOrdersAccounts=_useAllOpenOrdersAcco2[0],loadedOpenOrdersAccounts=_useAllOpenOrdersAcco2[1];var _useMintInfos=useMintInfos(),_useMintInfos2=_slicedToArray(_useMintInfos,2),mintInfos=_useMintInfos2[0],mintInfosConnected=_useMintInfos2[1];var _useAllMarkets=useAllMarkets(),_useAllMarkets2=_slicedToArray(_useAllMarkets,1),allMarkets=_useAllMarkets2[0];if(!loadedOpenOrdersAccounts||!mintInfosConnected){return{};}var marketsByAddress=Object.fromEntries((allMarkets||[]).map(function(m){return[m.market.address.toBase58(),m];}));var openOrdersBalances={};var _iterator2=_createForOfIteratorHelper(openOrdersAccounts||[]),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var account=_step2.value;var marketInfo=marketsByAddress[account.market.toBase58()];var baseMint=marketInfo===null||marketInfo===void 0?void 0:marketInfo.market.baseMintAddress.toBase58();var quoteMint=marketInfo===null||marketInfo===void 0?void 0:marketInfo.market.quoteMintAddress.toBase58();if(!(baseMint in openOrdersBalances)){openOrdersBalances[baseMint]=[];}if(!(quoteMint in openOrdersBalances)){openOrdersBalances[quoteMint]=[];}var baseMintInfo=mintInfos&&mintInfos[baseMint];var baseFree=divideBnToNumber(new BN(account.baseTokenFree),getTokenMultiplierFromDecimals((baseMintInfo===null||baseMintInfo===void 0?void 0:baseMintInfo.decimals)||0));var baseTotal=divideBnToNumber(new BN(account.baseTokenTotal),getTokenMultiplierFromDecimals((baseMintInfo===null||baseMintInfo===void 0?void 0:baseMintInfo.decimals)||0));var quoteMintInfo=mintInfos&&mintInfos[quoteMint];var quoteFree=divideBnToNumber(new BN(account.quoteTokenFree),getTokenMultiplierFromDecimals((quoteMintInfo===null||quoteMintInfo===void 0?void 0:quoteMintInfo.decimals)||0));var quoteTotal=divideBnToNumber(new BN(account.quoteTokenTotal),getTokenMultiplierFromDecimals((quoteMintInfo===null||quoteMintInfo===void 0?void 0:quoteMintInfo.decimals)||0));openOrdersBalances[baseMint].push({market:account.market,free:baseFree,total:baseTotal});openOrdersBalances[quoteMint].push({market:account.market,free:quoteFree,total:quoteTotal});}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}return openOrdersBalances;}export var useAllOpenOrders=function useAllOpenOrders(){var connection=useConnection();var _useWallet6=useWallet(),connected=_useWallet6.connected,wallet=_useWallet6.wallet;var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),loaded=_useState6[0],setLoaded=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),refresh=_useState8[0],setRefresh=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),openOrders=_useState10[0],setOpenOrders=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),lastRefresh=_useState12[0],setLastRefresh=_useState12[1];var refreshOpenOrders=function refreshOpenOrders(){if(new Date().getTime()-lastRefresh>10*1000){setRefresh(function(prev){return prev+1;});}else{console.log('not refreshing');}};useEffect(function(){if(connected&&wallet){var getAllOpenOrders=/*#__PURE__*/function(){var _ref18=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee11(){var _openOrders,getOpenOrdersForMarket;return _regeneratorRuntime.wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:setLoaded(false);_openOrders=[];getOpenOrdersForMarket=/*#__PURE__*/function(){var _ref19=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(marketInfo){var market,orders;return _regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:_context10.next=2;return sleep(1000*Math.random());case 2:_context10.prev=2;_context10.next=5;return Market.load(connection,marketInfo.address,undefined,marketInfo.programId);case 5:market=_context10.sent;_context10.next=8;return market.loadOrdersForOwner(connection,wallet===null||wallet===void 0?void 0:wallet.publicKey,30000);case 8:orders=_context10.sent;_openOrders.push({orders:orders,marketAddress:marketInfo.address.toBase58()});_context10.next=15;break;case 12:_context10.prev=12;_context10.t0=_context10[\"catch\"](2);console.warn(\"Error loading open order \".concat(marketInfo.name,\" - \").concat(_context10.t0));case 15:case\"end\":return _context10.stop();}}},_callee10,null,[[2,12]]);}));return function getOpenOrdersForMarket(_x2){return _ref19.apply(this,arguments);};}();_context11.next=5;return Promise.all(USE_MARKETS.map(function(m){return getOpenOrdersForMarket(m);}));case 5:setOpenOrders(_openOrders);setLastRefresh(new Date().getTime());setLoaded(true);case 8:case\"end\":return _context11.stop();}}},_callee11);}));return function getAllOpenOrders(){return _ref18.apply(this,arguments);};}();getAllOpenOrders();}},[connection,connected,wallet,refresh]);return{openOrders:openOrders,loaded:loaded,refreshOpenOrders:refreshOpenOrders};};export function useBalances(){var baseCurrencyBalances=useSelectedBaseCurrencyBalances();var quoteCurrencyBalances=useSelectedQuoteCurrencyBalances();var openOrders=useSelectedOpenOrdersAccount(true);var _useMarket13=useMarket(),baseCurrency=_useMarket13.baseCurrency,quoteCurrency=_useMarket13.quoteCurrency,market=_useMarket13.market;var baseExists=openOrders&&openOrders.baseTokenTotal&&openOrders.baseTokenFree;var quoteExists=openOrders&&openOrders.quoteTokenTotal&&openOrders.quoteTokenFree;if(baseCurrency==='UNKNOWN'||quoteCurrency==='UNKNOWN'||!baseCurrency||!quoteCurrency){return[];}return[{market:market,key:\"\".concat(baseCurrency).concat(quoteCurrency).concat(baseCurrency),coin:baseCurrency,wallet:baseCurrencyBalances,orders:baseExists&&market&&openOrders?market.baseSplSizeToNumber(openOrders.baseTokenTotal.sub(openOrders.baseTokenFree)):null,openOrders:openOrders,unsettled:baseExists&&market&&openOrders?market.baseSplSizeToNumber(openOrders.baseTokenFree):null},{market:market,key:\"\".concat(quoteCurrency).concat(baseCurrency).concat(quoteCurrency),coin:quoteCurrency,wallet:quoteCurrencyBalances,openOrders:openOrders,orders:quoteExists&&market&&openOrders?market.quoteSplSizeToNumber(openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree)):null,unsettled:quoteExists&&market&&openOrders?market.quoteSplSizeToNumber(openOrders.quoteTokenFree):null}];}export function useWalletBalancesForAllMarkets(){var _useTokenAccounts5=useTokenAccounts(),_useTokenAccounts6=_slicedToArray(_useTokenAccounts5,1),tokenAccounts=_useTokenAccounts6[0];var _useWallet7=useWallet(),connected=_useWallet7.connected;var _useMintInfos3=useMintInfos(),_useMintInfos4=_slicedToArray(_useMintInfos3,2),mintInfos=_useMintInfos4[0],mintInfosConnected=_useMintInfos4[1];if(!connected||!mintInfosConnected){return[];}var balances={};var _iterator3=_createForOfIteratorHelper(tokenAccounts||[]),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var account=_step3.value;if(!account.account){continue;}var parsedAccount=void 0;if(account.effectiveMint.equals(WRAPPED_SOL_MINT)){parsedAccount={mint:WRAPPED_SOL_MINT,owner:account.pubkey,amount:account.account.lamports};}else{parsedAccount=parseTokenAccountData(account.account.data);}if(!(parsedAccount.mint.toBase58()in balances)){balances[parsedAccount.mint.toBase58()]=0;}var mintInfo=mintInfos&&mintInfos[parsedAccount.mint.toBase58()];var additionalAmount=divideBnToNumber(new BN(parsedAccount.amount),getTokenMultiplierFromDecimals((mintInfo===null||mintInfo===void 0?void 0:mintInfo.decimals)||0));balances[parsedAccount.mint.toBase58()]+=additionalAmount;}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}return Object.entries(balances).map(function(_ref20){var _ref21=_slicedToArray(_ref20,2),mint=_ref21[0],balance=_ref21[1];return{mint:mint,balance:balance};});}export function useUnmigratedDeprecatedMarkets(){var connection=useConnection();var _useUnmigratedOpenOrd=useUnmigratedOpenOrdersAccounts(),accounts=_useUnmigratedOpenOrd.accounts;var marketsList=accounts&&Array.from(new Set(accounts.map(function(openOrders){return openOrders.market;})));var deps=marketsList&&marketsList.map(function(m){return m.toBase58();});var useUnmigratedDeprecatedMarketsInner=/*#__PURE__*/function(){var _ref22=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee13(){var getMarket;return _regeneratorRuntime.wrap(function _callee13$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:if(marketsList){_context13.next=2;break;}return _context13.abrupt(\"return\",null);case 2:getMarket=/*#__PURE__*/function(){var _ref23=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee12(address){var marketInfo;return _regeneratorRuntime.wrap(function _callee12$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:marketInfo=USE_MARKETS.find(function(market){return market.address.equals(address);});if(marketInfo){_context12.next=5;break;}console.log('Failed loading market');notify({message:'Error loading market',type:'error'});return _context12.abrupt(\"return\",null);case 5:_context12.prev=5;console.log('Loading market',marketInfo.name);// NOTE: Should this just be cached by (connection, marketInfo.address, marketInfo.programId)?\n_context12.next=9;return Market.load(connection,marketInfo.address,{},marketInfo.programId);case 9:return _context12.abrupt(\"return\",_context12.sent);case 12:_context12.prev=12;_context12.t0=_context12[\"catch\"](5);console.log('Failed loading market',marketInfo.name,_context12.t0);notify({message:'Error loading market',description:_context12.t0.message,type:'error'});return _context12.abrupt(\"return\",null);case 17:case\"end\":return _context12.stop();}}},_callee12,null,[[5,12]]);}));return function getMarket(_x3){return _ref23.apply(this,arguments);};}();_context13.next=5;return Promise.all(marketsList.map(getMarket));case 5:return _context13.abrupt(\"return\",_context13.sent.filter(function(x){return x;}));case 6:case\"end\":return _context13.stop();}}},_callee13);}));return function useUnmigratedDeprecatedMarketsInner(){return _ref22.apply(this,arguments);};}();var _useAsyncData5=useAsyncData(useUnmigratedDeprecatedMarketsInner,tuple('useUnmigratedDeprecatedMarketsInner',connection,deps&&deps.toString()),{refreshInterval:_VERY_SLOW_REFRESH_INTERVAL}),_useAsyncData6=_slicedToArray(_useAsyncData5,1),markets=_useAsyncData6[0];if(!markets){return null;}return markets.map(function(market){return{market:market,openOrdersList:accounts===null||accounts===void 0?void 0:accounts.filter(function(openOrders){return market&&openOrders.market.equals(market.address);})};});}export function useGetOpenOrdersForDeprecatedMarkets(){var _useWallet8=useWallet(),connected=_useWallet8.connected,wallet=_useWallet8.wallet;var _useCustomMarkets3=useCustomMarkets(),customMarkets=_useCustomMarkets3.customMarkets;var connection=useConnection();var marketsAndOrders=useUnmigratedDeprecatedMarkets();var marketsList=marketsAndOrders&&marketsAndOrders.map(function(_ref24){var market=_ref24.market;return market;});// This isn't quite right: open order balances could change\nvar deps=marketsList&&marketsList.filter(function(market){return!!market;}).map(function(market){return market.address.toBase58();});function getOpenOrdersForDeprecatedMarkets(){return _getOpenOrdersForDeprecatedMarkets.apply(this,arguments);}function _getOpenOrdersForDeprecatedMarkets(){_getOpenOrdersForDeprecatedMarkets=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee15(){var getOrders;return _regeneratorRuntime.wrap(function _callee15$(_context15){while(1){switch(_context15.prev=_context15.next){case 0:if(!(!connected||!wallet)){_context15.next=2;break;}return _context15.abrupt(\"return\",null);case 2:if(marketsList){_context15.next=4;break;}return _context15.abrupt(\"return\",null);case 4:console.log('refreshing getOpenOrdersForDeprecatedMarkets');getOrders=/*#__PURE__*/function(){var _ref25=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee14(market){var _getMarketDetails,marketName;return _regeneratorRuntime.wrap(function _callee14$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:if(market){_context14.next=2;break;}return _context14.abrupt(\"return\",null);case 2:_getMarketDetails=getMarketDetails(market,customMarkets),marketName=_getMarketDetails.marketName;_context14.prev=3;console.log('Fetching open orders for',marketName);// Can do better than this, we have the open orders accounts already\n_context14.next=7;return market.loadOrdersForOwner(connection,wallet.publicKey);case 7:return _context14.abrupt(\"return\",_context14.sent.map(function(order){return _objectSpread({marketName:marketName,market:market},order);}));case 10:_context14.prev=10;_context14.t0=_context14[\"catch\"](3);console.log('Failed loading open orders',market.address.toBase58(),_context14.t0);notify({message:\"Error loading open orders for deprecated \".concat(marketName),description:_context14.t0.message,type:'error'});return _context14.abrupt(\"return\",null);case 15:case\"end\":return _context14.stop();}}},_callee14,null,[[3,10]]);}));return function getOrders(_x4){return _ref25.apply(this,arguments);};}();_context15.next=8;return Promise.all(marketsList.map(getOrders));case 8:return _context15.abrupt(\"return\",_context15.sent.filter(function(x){return!!x;}).flat());case 9:case\"end\":return _context15.stop();}}},_callee15);}));return _getOpenOrdersForDeprecatedMarkets.apply(this,arguments);}var cacheKey=tuple('getOpenOrdersForDeprecatedMarkets',connected,connection,wallet,deps&&deps.toString());var _useAsyncData7=useAsyncData(getOpenOrdersForDeprecatedMarkets,cacheKey,{refreshInterval:_VERY_SLOW_REFRESH_INTERVAL}),_useAsyncData8=_slicedToArray(_useAsyncData7,2),openOrders=_useAsyncData8[0],loaded=_useAsyncData8[1];console.log('openOrders',openOrders);return{openOrders:openOrders,loaded:loaded,refreshOpenOrders:function refreshOpenOrders(){return refreshCache(cacheKey);}};}export function useBalancesForDeprecatedMarkets(){var markets=useUnmigratedDeprecatedMarkets();var _useLocalStorageState7=useLocalStorageState('customMarkets',[]),_useLocalStorageState8=_slicedToArray(_useLocalStorageState7,1),customMarkets=_useLocalStorageState8[0];if(!markets){return null;}var openOrderAccountBalances=[];markets.forEach(function(_ref26){var market=_ref26.market,openOrdersList=_ref26.openOrdersList;var _getMarketDetails2=getMarketDetails(market,customMarkets),baseCurrency=_getMarketDetails2.baseCurrency,quoteCurrency=_getMarketDetails2.quoteCurrency,marketName=_getMarketDetails2.marketName;if(!baseCurrency||!quoteCurrency||!market){return;}(openOrdersList||[]).forEach(function(openOrders){var inOrdersBase=(openOrders===null||openOrders===void 0?void 0:openOrders.baseTokenTotal)&&(openOrders===null||openOrders===void 0?void 0:openOrders.baseTokenFree)&&market.baseSplSizeToNumber(openOrders.baseTokenTotal.sub(openOrders.baseTokenFree));var inOrdersQuote=(openOrders===null||openOrders===void 0?void 0:openOrders.quoteTokenTotal)&&(openOrders===null||openOrders===void 0?void 0:openOrders.quoteTokenFree)&&market.baseSplSizeToNumber(openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree));var unsettledBase=(openOrders===null||openOrders===void 0?void 0:openOrders.baseTokenFree)&&market.baseSplSizeToNumber(openOrders.baseTokenFree);var unsettledQuote=(openOrders===null||openOrders===void 0?void 0:openOrders.quoteTokenFree)&&market.baseSplSizeToNumber(openOrders.quoteTokenFree);openOrderAccountBalances.push({marketName:marketName,market:market,coin:baseCurrency,key:\"\".concat(marketName).concat(baseCurrency),orders:inOrdersBase,unsettled:unsettledBase,openOrders:openOrders});openOrderAccountBalances.push({marketName:marketName,market:market,coin:quoteCurrency,key:\"\".concat(marketName).concat(quoteCurrency),orders:inOrdersQuote,unsettled:unsettledQuote,openOrders:openOrders});});});return openOrderAccountBalances;}export function getMarketInfos(customMarkets){var customMarketsInfo=customMarkets.map(function(m){return _objectSpread(_objectSpread({},m),{},{address:new PublicKey(m.address),programId:new PublicKey(m.programId),deprecated:false});});return[].concat(_toConsumableArray(customMarketsInfo),_toConsumableArray(USE_MARKETS));}export function useMarketInfos(){var _useCustomMarkets4=useCustomMarkets(),customMarkets=_useCustomMarkets4.customMarkets;return getMarketInfos(customMarkets);}/**\n * If selling, choose min tick size. If buying choose a price\n * s.t. given the state of the orderbook, the order will spend\n * `cost` cost currency.\n *\n * @param orderbook serum Orderbook object\n * @param cost quantity to spend. Base currency if selling,\n *  quote currency if buying.\n * @param tickSizeDecimals size of price increment of the market\n */export function getMarketOrderPrice(orderbook,cost,tickSizeDecimals){if(orderbook.isBids){return orderbook.market.tickSize;}var spentCost=0;var price,sizeAtLevel,costAtLevel;var asks=orderbook.getL2(1000);var _iterator4=_createForOfIteratorHelper(asks),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var _step4$value=_slicedToArray(_step4.value,2);price=_step4$value[0];sizeAtLevel=_step4$value[1];costAtLevel=price*sizeAtLevel;if(spentCost+costAtLevel>cost){break;}spentCost+=costAtLevel;}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}var sendPrice=Math.min(price*1.02,asks[0][0]*1.05);var formattedPrice;if(tickSizeDecimals){formattedPrice=floorToDecimal(sendPrice,tickSizeDecimals);}else{formattedPrice=sendPrice;}return formattedPrice;}export function getExpectedFillPrice(orderbook,cost,tickSizeDecimals){var spentCost=0;var avgPrice=0;var price,sizeAtLevel,costAtLevel;var _iterator5=_createForOfIteratorHelper(orderbook.getL2(1000)),_step5;try{for(_iterator5.s();!(_step5=_iterator5.n()).done;){var _step5$value=_slicedToArray(_step5.value,2);price=_step5$value[0];sizeAtLevel=_step5$value[1];costAtLevel=(orderbook.isBids?1:price)*sizeAtLevel;if(spentCost+costAtLevel>cost){avgPrice+=(cost-spentCost)*price;spentCost=cost;break;}avgPrice+=costAtLevel*price;spentCost+=costAtLevel;}}catch(err){_iterator5.e(err);}finally{_iterator5.f();}var totalAvgPrice=avgPrice/Math.min(cost,spentCost);var formattedPrice;if(tickSizeDecimals){formattedPrice=floorToDecimal(totalAvgPrice,tickSizeDecimals);}else{formattedPrice=totalAvgPrice;}return formattedPrice;}export function useCurrentlyAutoSettling(){var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),currentlyAutoSettling=_useState14[0],setCurrentlyAutosettling=_useState14[1];return[currentlyAutoSettling,setCurrentlyAutosettling];}","map":{"version":3,"sources":["/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/fork/serum-dex-ui/src/utils/markets.tsx"],"names":["Market","MARKETS","OpenOrders","Orderbook","TOKEN_MINTS","TokenInstructions","PublicKey","React","useContext","useEffect","useState","divideBnToNumber","floorToDecimal","getTokenMultiplierFromDecimals","sleep","useLocalStorageState","refreshCache","useAsyncData","useAccountData","useAccountInfo","useConnection","useWallet","tuple","notify","BN","getTokenAccountInfo","parseTokenAccountData","useMintInfos","WRAPPED_SOL_MINT","BonfidaApi","_IGNORE_DEPRECATED","USE_MARKETS","map","m","deprecated","useMarketsList","filter","name","process","env","REACT_APP_EXCLUDE_MARKETS","includes","useAllMarkets","connection","useCustomMarkets","customMarkets","getAllMarkets","Promise","all","getMarketInfos","marketInfo","load","address","programId","market","marketName","message","description","type","markets","length","refreshInterval","_VERY_SLOW_REFRESH_INTERVAL","useUnmigratedOpenOrdersAccounts","wallet","getUnmigratedOpenOrdersAccounts","publicKey","console","log","deprecatedOpenOrdersAccounts","deprecatedProgramIds","Array","from","Set","toBase58","publicKeyStr","findForOwner","openOrdersAccounts","concat","openOrders","baseTokenTotal","toNumber","quoteTokenTotal","some","equals","cacheKey","accounts","refresh","clearCache","MarketContext","createContext","_SLOW_REFRESH_INTERVAL","_FAST_REFRESH_INTERVAL","DEFAULT_MARKET","find","getMarketDetails","marketInfos","otherMarket","baseCurrency","baseMintAddress","token","baseLabel","quoteCurrency","quoteMintAddress","quoteLabel","setCustomMarkets","MarketProvider","marketAddress","setMarketAddress","children","setMarket","_decoded","ownAddress","then","catch","e","getTradePageUrl","saved","localStorage","getItem","JSON","parse","useSelectedTokenAccounts","selectedTokenAccounts","setSelectedTokenAccounts","useMarket","context","Error","useMarkPrice","markPrice","setMarkPrice","useOrderbook","orderbook","trades","useTrades","bb","bids","Number","ba","asks","last","price","sort","a","b","_useUnfilteredTrades","limit","getUnfilteredTrades","loadFills","useBonfidaTrades","getBonfidaTrades","getRecentTrades","useOrderbookAccounts","bidData","askData","bidOrderbook","decode","askOrderbook","depth","getL2","size","useOpenOrdersAccounts","fast","connected","getOpenOrdersAccounts","findOpenOrdersAccountsForOwner","useSelectedOpenOrdersAccount","useTokenAccounts","getTokenAccounts","getSelectedTokenAccountForMint","mint","selectedPubKey","filtered","effectiveMint","pubkey","useSelectedQuoteCurrencyAccount","mintAddress","useSelectedBaseCurrencyAccount","useSelectedQuoteCurrencyBalances","quoteCurrencyAccount","accountInfo","loaded","lamports","quoteSplSizeToNumber","data","slice","useSelectedBaseCurrencyBalances","baseCurrencyAccount","baseSplSizeToNumber","useOpenOrders","openOrdersAccount","filterForOpenOrders","order","eventFlags","maker","trade","side","useLocallyStoredFeeDiscountKey","undefined","storedFeeDiscountKey","setStoredFeeDiscountKey","useFeeDiscountKeys","getFeeDiscountKeys","findFeeDiscountKeys","feeDiscountKey","useFills","fills","fill","useAllOpenOrdersAccounts","useMarketInfos","programIds","info","stringProgramId","getAllOpenOrdersAccounts","flat","useAllOpenOrdersBalances","loadedOpenOrdersAccounts","mintInfos","mintInfosConnected","allMarkets","marketsByAddress","Object","fromEntries","openOrdersBalances","account","baseMint","quoteMint","baseMintInfo","baseFree","baseTokenFree","decimals","baseTotal","quoteMintInfo","quoteFree","quoteTokenFree","quoteTotal","push","free","total","useAllOpenOrders","setLoaded","setRefresh","setOpenOrders","lastRefresh","setLastRefresh","refreshOpenOrders","Date","getTime","prev","getAllOpenOrders","_openOrders","getOpenOrdersForMarket","Math","random","loadOrdersForOwner","orders","warn","useBalances","baseCurrencyBalances","quoteCurrencyBalances","baseExists","quoteExists","key","coin","sub","unsettled","useWalletBalancesForAllMarkets","tokenAccounts","balances","parsedAccount","owner","amount","mintInfo","additionalAmount","entries","balance","useUnmigratedDeprecatedMarkets","marketsList","deps","useUnmigratedDeprecatedMarketsInner","getMarket","x","toString","openOrdersList","useGetOpenOrdersForDeprecatedMarkets","marketsAndOrders","getOpenOrdersForDeprecatedMarkets","getOrders","useBalancesForDeprecatedMarkets","openOrderAccountBalances","forEach","inOrdersBase","inOrdersQuote","unsettledBase","unsettledQuote","customMarketsInfo","getMarketOrderPrice","cost","tickSizeDecimals","isBids","tickSize","spentCost","sizeAtLevel","costAtLevel","sendPrice","min","formattedPrice","getExpectedFillPrice","avgPrice","totalAvgPrice","useCurrentlyAutoSettling","currentlyAutoSettling","setCurrentlyAutosettling"],"mappings":"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","sourcesContent":["import {Market, MARKETS, OpenOrders, Orderbook, TOKEN_MINTS, TokenInstructions,} from '@project-serum/serum';\nimport {PublicKey} from '@solana/web3.js';\nimport React, {useContext, useEffect, useState} from 'react';\nimport {divideBnToNumber, floorToDecimal, getTokenMultiplierFromDecimals, sleep, useLocalStorageState,} from './utils';\nimport {refreshCache, useAsyncData} from './fetch-loop';\nimport {useAccountData, useAccountInfo, useConnection} from './connection';\nimport {useWallet} from './wallet';\nimport tuple from 'immutable-tuple';\nimport {notify} from './notifications';\nimport BN from 'bn.js';\nimport {getTokenAccountInfo, parseTokenAccountData, useMintInfos,} from './tokens';\nimport {\n  Balances,\n  CustomMarketInfo,\n  DeprecatedOpenOrdersBalances,\n  FullMarketInfo,\n  MarketContextValues,\n  MarketInfo,\n  OrderWithMarketAndMarketName,\n  SelectedTokenAccounts,\n  TokenAccount,\n} from './types';\nimport {WRAPPED_SOL_MINT} from '@project-serum/serum/lib/token-instructions';\nimport {Order} from '@project-serum/serum/lib/market';\nimport BonfidaApi from './bonfidaConnector';\n\n// Used in debugging, should be false in production\nconst _IGNORE_DEPRECATED = false;\n\nexport const USE_MARKETS: MarketInfo[] = _IGNORE_DEPRECATED\n  ? MARKETS.map((m) => ({ ...m, deprecated: false }))\n  : MARKETS;\n\nexport function useMarketsList() {\n  return USE_MARKETS.filter(({ name, deprecated }) => !deprecated && !process.env.REACT_APP_EXCLUDE_MARKETS?.includes(name));\n}\n\nexport function useAllMarkets() {\n  const connection = useConnection();\n  const { customMarkets } = useCustomMarkets();\n\n  const getAllMarkets = async () => {\n    const markets: Array<{\n      market: Market;\n      marketName: string;\n      programId: PublicKey;\n    } | null> = await Promise.all(\n      getMarketInfos(customMarkets).map(async (marketInfo) => {\n        try {\n          const market = await Market.load(\n            connection,\n            marketInfo.address,\n            {},\n            marketInfo.programId,\n          );\n          return {\n            market,\n            marketName: marketInfo.name,\n            programId: marketInfo.programId,\n          };\n        } catch (e) {\n          notify({\n            message: 'Error loading all market',\n            description: e.message,\n            type: 'error',\n          });\n          return null;\n        }\n      }),\n    );\n    return markets.filter(\n      (m): m is { market: Market; marketName: string; programId: PublicKey } =>\n        !!m,\n    );\n  };\n  return useAsyncData(\n    getAllMarkets,\n    tuple('getAllMarkets', customMarkets.length, connection),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useUnmigratedOpenOrdersAccounts() {\n  const connection = useConnection();\n  const { wallet } = useWallet();\n\n  async function getUnmigratedOpenOrdersAccounts(): Promise<OpenOrders[]> {\n    if (!wallet || !connection || !wallet.publicKey) {\n      return [];\n    }\n    console.log('refreshing useUnmigratedOpenOrdersAccounts');\n    let deprecatedOpenOrdersAccounts: OpenOrders[] = [];\n    const deprecatedProgramIds = Array.from(\n      new Set(\n        USE_MARKETS.filter(\n          ({ deprecated }) => deprecated,\n        ).map(({ programId }) => programId.toBase58()),\n      ),\n    ).map((publicKeyStr) => new PublicKey(publicKeyStr));\n    let programId: PublicKey;\n    for (programId of deprecatedProgramIds) {\n      try {\n        const openOrdersAccounts = await OpenOrders.findForOwner(\n          connection,\n          wallet.publicKey,\n          programId,\n        );\n        deprecatedOpenOrdersAccounts = deprecatedOpenOrdersAccounts.concat(\n          openOrdersAccounts\n            .filter(\n              (openOrders) =>\n                openOrders.baseTokenTotal.toNumber() ||\n                openOrders.quoteTokenTotal.toNumber(),\n            )\n            .filter((openOrders) =>\n              USE_MARKETS.some(\n                (market) =>\n                  market.deprecated && market.address.equals(openOrders.market),\n              ),\n            ),\n        );\n      } catch (e) {\n        console.log(\n          'Error loading deprecated markets',\n          programId?.toBase58(),\n          e.message,\n        );\n      }\n    }\n    // Maybe sort\n    return deprecatedOpenOrdersAccounts;\n  }\n\n  const cacheKey = tuple(\n    'getUnmigratedOpenOrdersAccounts',\n    connection,\n    wallet?.publicKey?.toBase58(),\n  );\n  const [accounts] = useAsyncData(getUnmigratedOpenOrdersAccounts, cacheKey, {\n    refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n  });\n\n  return {\n    accounts,\n    refresh: (clearCache: boolean) => refreshCache(cacheKey, clearCache),\n  };\n}\n\nconst MarketContext: React.Context<null | MarketContextValues> = React.createContext<null | MarketContextValues>(\n  null,\n);\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\n// For things that don't really change\nconst _SLOW_REFRESH_INTERVAL = 5 * 1000;\n\n// For things that change frequently\nconst _FAST_REFRESH_INTERVAL = 1000;\n\nexport const DEFAULT_MARKET = USE_MARKETS.find(\n  ({ name, deprecated }) => name === 'SRM/USDT' && !deprecated,\n);\n\nexport function getMarketDetails(\n  market: Market | undefined | null,\n  customMarkets: CustomMarketInfo[],\n): FullMarketInfo {\n  if (!market) {\n    return {};\n  }\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo = marketInfos.find((otherMarket) =>\n    otherMarket.address.equals(market.address),\n  );\n  const baseCurrency =\n    (market?.baseMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n        ?.name) ||\n    (marketInfo?.baseLabel && `${marketInfo?.baseLabel}*`) ||\n    'UNKNOWN';\n  const quoteCurrency =\n    (market?.quoteMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n        ?.name) ||\n    (marketInfo?.quoteLabel && `${marketInfo?.quoteLabel}*`) ||\n    'UNKNOWN';\n\n  return {\n    ...marketInfo,\n    marketName: marketInfo?.name,\n    baseCurrency,\n    quoteCurrency,\n    marketInfo,\n  };\n}\n\nexport function useCustomMarkets() {\n  const [customMarkets, setCustomMarkets] = useLocalStorageState<\n    CustomMarketInfo[]\n  >('customMarkets', []);\n  return { customMarkets, setCustomMarkets };\n}\n\nexport function MarketProvider({ marketAddress, setMarketAddress, children }) {\n  const { customMarkets, setCustomMarkets } = useCustomMarkets();\n\n  const address = marketAddress && new PublicKey(marketAddress);\n  const connection = useConnection();\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo =\n    address && marketInfos.find((market) => market.address.equals(address));\n\n  // Replace existing market with a non-deprecated one on first load\n  useEffect(() => {\n    if (marketInfo && marketInfo.deprecated) {\n      console.log('Switching markets from deprecated', marketInfo);\n      if (DEFAULT_MARKET) {\n        setMarketAddress(DEFAULT_MARKET.address.toBase58());\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [market, setMarket] = useState<Market | null>();\n  useEffect(() => {\n    if (\n      market &&\n      marketInfo &&\n      // @ts-ignore\n      market._decoded.ownAddress?.equals(marketInfo?.address)\n    ) {\n      return;\n    }\n    setMarket(null);\n    if (!marketInfo || !marketInfo.address) {\n      notify({\n        message: 'Error loading market',\n        description: 'Please select a market from the dropdown',\n        type: 'error',\n      });\n      return;\n    }\n    Market.load(connection, marketInfo.address, {}, marketInfo.programId)\n      .then(setMarket)\n      .catch((e) =>\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        }),\n      );\n    // eslint-disable-next-line\n  }, [connection, marketInfo]);\n\n  return (\n    <MarketContext.Provider\n      value={{\n        market,\n        ...getMarketDetails(market, customMarkets),\n        setMarketAddress,\n        customMarkets,\n        setCustomMarkets,\n      }}\n    >\n      {children}\n    </MarketContext.Provider>\n  );\n}\n\nexport function getTradePageUrl(marketAddress?: string) {\n  if (!marketAddress) {\n    const saved = localStorage.getItem('marketAddress');\n    if (saved) {\n      marketAddress = JSON.parse(saved);\n    }\n    marketAddress = marketAddress || DEFAULT_MARKET?.address.toBase58() || '';\n  }\n  return `/market/${marketAddress}`;\n}\n\nexport function useSelectedTokenAccounts(): [\n  SelectedTokenAccounts,\n  (newSelectedTokenAccounts: SelectedTokenAccounts) => void,\n] {\n  const [\n    selectedTokenAccounts,\n    setSelectedTokenAccounts,\n  ] = useLocalStorageState<SelectedTokenAccounts>('selectedTokenAccounts', {});\n  return [selectedTokenAccounts, setSelectedTokenAccounts];\n}\n\nexport function useMarket() {\n  const context = useContext(MarketContext);\n  if (!context) {\n    throw new Error('Missing market context');\n  }\n  return context;\n}\n\nexport function useMarkPrice() {\n  const [markPrice, setMarkPrice] = useState<null | number>(null);\n\n  const [orderbook] = useOrderbook();\n  const trades = useTrades();\n\n  useEffect(() => {\n    let bb = orderbook?.bids?.length > 0 && Number(orderbook.bids[0][0]);\n    let ba = orderbook?.asks?.length > 0 && Number(orderbook.asks[0][0]);\n    let last = trades && trades.length > 0 && trades[0].price;\n\n    let markPrice =\n      bb && ba\n        ? last\n          ? [bb, ba, last].sort((a, b) => a - b)[1]\n          : (bb + ba) / 2\n        : null;\n\n    setMarkPrice(markPrice);\n  }, [orderbook, trades]);\n\n  return markPrice;\n}\n\nexport function _useUnfilteredTrades(limit = 10000) {\n  const { market } = useMarket();\n  const connection = useConnection();\n  async function getUnfilteredTrades(): Promise<any[] | null> {\n    if (!market || !connection) {\n      return null;\n    }\n    return await market.loadFills(connection, limit);\n  }\n  const [trades] = useAsyncData(\n    getUnfilteredTrades,\n    tuple('getUnfilteredTrades', market, connection),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n  return trades;\n  // NOTE: For now, websocket is too expensive since the event queue is large\n  // and updates very frequently\n\n  // let data = useAccountData(market && market._decoded.eventQueue);\n  // if (!data) {\n  //   return null;\n  // }\n  // const events = decodeEventQueue(data, limit);\n  // return events\n  //   .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n  //   .map(market.parseFillEvent.bind(market));\n}\n\nexport function useBonfidaTrades() {\n  const { market } = useMarket();\n  const marketAddress = market?.address.toBase58();\n\n  async function getBonfidaTrades() {\n    if (!marketAddress) {\n      return null;\n    }\n    return await BonfidaApi.getRecentTrades(marketAddress);\n  }\n\n  return useAsyncData(\n    getBonfidaTrades,\n    tuple('getBonfidaTrades', marketAddress),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n    false,\n  );\n}\n\nexport function useOrderbookAccounts() {\n  const { market } = useMarket();\n  // @ts-ignore\n  let bidData = useAccountData(market && market._decoded.bids);\n  // @ts-ignore\n  let askData = useAccountData(market && market._decoded.asks);\n  return {\n    bidOrderbook: market && bidData ? Orderbook.decode(market, bidData) : null,\n    askOrderbook: market && askData ? Orderbook.decode(market, askData) : null,\n  };\n}\n\nexport function useOrderbook(\n  depth = 20,\n): [{ bids: number[][]; asks: number[][] }, boolean] {\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  const { market } = useMarket();\n  const bids =\n    !bidOrderbook || !market\n      ? []\n      : bidOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  const asks =\n    !askOrderbook || !market\n      ? []\n      : askOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  return [{ bids, asks }, !!bids || !!asks];\n}\n\n// Want the balances table to be fast-updating, dont want open orders to flicker\n// TODO: Update to use websocket\nexport function useOpenOrdersAccounts(fast = false) {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getOpenOrdersAccounts() {\n    if (!connected || !wallet) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findOpenOrdersAccountsForOwner(\n      connection,\n      wallet.publicKey,\n    );\n  }\n  return useAsyncData<OpenOrders[] | null>(\n    getOpenOrdersAccounts,\n    tuple('getOpenOrdersAccounts', wallet, market, connected),\n    { refreshInterval: fast ? _FAST_REFRESH_INTERVAL : _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useSelectedOpenOrdersAccount(fast = false) {\n  const [accounts] = useOpenOrdersAccounts(fast);\n  if (!accounts) {\n    return null;\n  }\n  return accounts[0];\n}\n\nexport function useTokenAccounts(): [\n  TokenAccount[] | null | undefined,\n  boolean,\n] {\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getTokenAccounts() {\n    if (!connected || !wallet) {\n      return null;\n    }\n    return await getTokenAccountInfo(connection, wallet.publicKey);\n  }\n  return useAsyncData(\n    getTokenAccounts,\n    tuple('getTokenAccounts', wallet, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function getSelectedTokenAccountForMint(\n  accounts: TokenAccount[] | undefined | null,\n  mint: PublicKey | undefined,\n  selectedPubKey?: string | PublicKey | null,\n) {\n  if (!accounts || !mint) {\n    return null;\n  }\n  const filtered = accounts.filter(\n    ({ effectiveMint, pubkey }) =>\n      mint.equals(effectiveMint) &&\n      (!selectedPubKey ||\n        (typeof selectedPubKey === 'string'\n          ? selectedPubKey\n          : selectedPubKey.toBase58()) === pubkey.toBase58()),\n  );\n  return filtered && filtered[0];\n}\n\nexport function useSelectedQuoteCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const mintAddress = market?.quoteMintAddress;\n  return getSelectedTokenAccountForMint(\n    accounts,\n    mintAddress,\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\n  );\n}\n\nexport function useSelectedBaseCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const mintAddress = market?.baseMintAddress;\n  return getSelectedTokenAccountForMint(\n    accounts,\n    mintAddress,\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\n  );\n}\n\n// TODO: Update to use websocket\nexport function useSelectedQuoteCurrencyBalances() {\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(quoteCurrencyAccount?.pubkey);\n  if (!market || !quoteCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.quoteMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.quoteSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\n// TODO: Update to use websocket\nexport function useSelectedBaseCurrencyBalances() {\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(baseCurrencyAccount?.pubkey);\n  if (!market || !baseCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.baseMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.baseSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\nexport function useOpenOrders() {\n  const { market, marketName } = useMarket();\n  const openOrdersAccount = useSelectedOpenOrdersAccount();\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  if (!market || !openOrdersAccount || !bidOrderbook || !askOrderbook) {\n    return null;\n  }\n  return market\n    .filterForOpenOrders(bidOrderbook, askOrderbook, [openOrdersAccount])\n    .map((order) => ({ ...order, marketName, market }));\n}\n\nexport function useTrades(limit = 100) {\n  const trades = _useUnfilteredTrades(limit);\n  if (!trades) {\n    return null;\n  }\n  // Until partial fills are each given their own fill, use maker fills\n  return trades\n    .filter(({ eventFlags }) => eventFlags.maker)\n    .map((trade) => ({\n      ...trade,\n      side: trade.side === 'buy' ? 'sell' : 'buy',\n    }));\n}\n\nexport function useLocallyStoredFeeDiscountKey(): {\n  storedFeeDiscountKey: PublicKey | undefined;\n  setStoredFeeDiscountKey: (key: string) => void;\n} {\n  const [\n    storedFeeDiscountKey,\n    setStoredFeeDiscountKey,\n  ] = useLocalStorageState<string>(`feeDiscountKey`, undefined);\n  return {\n    storedFeeDiscountKey: storedFeeDiscountKey\n      ? new PublicKey(storedFeeDiscountKey)\n      : undefined,\n    setStoredFeeDiscountKey,\n  };\n}\n\nexport function useFeeDiscountKeys(): [\n  (\n    | {\n        pubkey: PublicKey;\n        feeTier: number;\n        balance: number;\n        mint: PublicKey;\n      }[]\n    | null\n    | undefined\n  ),\n  boolean,\n] {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  const { setStoredFeeDiscountKey } = useLocallyStoredFeeDiscountKey();\n  let getFeeDiscountKeys = async () => {\n    if (!connected || !wallet) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    const feeDiscountKey = await market.findFeeDiscountKeys(\n      connection,\n      wallet.publicKey,\n    );\n    if (feeDiscountKey) {\n      setStoredFeeDiscountKey(feeDiscountKey[0].pubkey.toBase58());\n    }\n    return feeDiscountKey;\n  };\n  return useAsyncData(\n    getFeeDiscountKeys,\n    tuple('getFeeDiscountKeys', wallet, market, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useFills(limit = 100) {\n  const { marketName } = useMarket();\n  const fills = _useUnfilteredTrades(limit);\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\n  if (!openOrdersAccounts || openOrdersAccounts.length === 0) {\n    return null;\n  }\n  if (!fills) {\n    return null;\n  }\n  return fills\n    .filter((fill) =>\n      openOrdersAccounts.some((openOrdersAccount) =>\n        fill.openOrders.equals(openOrdersAccount.publicKey),\n      ),\n    )\n    .map((fill) => ({ ...fill, marketName }));\n}\n\nexport function useAllOpenOrdersAccounts() {\n  const { wallet, connected } = useWallet();\n  const connection = useConnection();\n  const marketInfos = useMarketInfos();\n  const programIds = [\n    ...new Set(marketInfos.map((info) => info.programId.toBase58())),\n  ].map((stringProgramId) => new PublicKey(stringProgramId));\n\n  const getAllOpenOrdersAccounts = async () => {\n    if (!connected || !wallet) {\n      return [];\n    }\n    return (\n      await Promise.all(\n        programIds.map((programId) =>\n          OpenOrders.findForOwner(connection, wallet.publicKey, programId),\n        ),\n      )\n    ).flat();\n  };\n  return useAsyncData(\n    getAllOpenOrdersAccounts,\n    tuple(\n      'getAllOpenOrdersAccounts',\n      connection,\n      connected,\n      wallet?.publicKey?.toBase58(),\n      marketInfos.length,\n      (programIds || []).length,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useAllOpenOrdersBalances() {\n  const [\n    openOrdersAccounts,\n    loadedOpenOrdersAccounts,\n  ] = useAllOpenOrdersAccounts();\n  const [mintInfos, mintInfosConnected] = useMintInfos();\n  const [allMarkets] = useAllMarkets();\n  if (!loadedOpenOrdersAccounts || !mintInfosConnected) {\n    return {};\n  }\n\n  const marketsByAddress = Object.fromEntries(\n    (allMarkets || []).map((m) => [m.market.address.toBase58(), m]),\n  );\n  const openOrdersBalances: {\n    [mint: string]: { market: PublicKey; free: number; total: number }[];\n  } = {};\n  for (let account of openOrdersAccounts || []) {\n    const marketInfo = marketsByAddress[account.market.toBase58()];\n    const baseMint = marketInfo?.market.baseMintAddress.toBase58();\n    const quoteMint = marketInfo?.market.quoteMintAddress.toBase58();\n    if (!(baseMint in openOrdersBalances)) {\n      openOrdersBalances[baseMint] = [];\n    }\n    if (!(quoteMint in openOrdersBalances)) {\n      openOrdersBalances[quoteMint] = [];\n    }\n\n    const baseMintInfo = mintInfos && mintInfos[baseMint];\n    const baseFree = divideBnToNumber(\n      new BN(account.baseTokenFree),\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\n    );\n    const baseTotal = divideBnToNumber(\n      new BN(account.baseTokenTotal),\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\n    );\n    const quoteMintInfo = mintInfos && mintInfos[quoteMint];\n    const quoteFree = divideBnToNumber(\n      new BN(account.quoteTokenFree),\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\n    );\n    const quoteTotal = divideBnToNumber(\n      new BN(account.quoteTokenTotal),\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\n    );\n\n    openOrdersBalances[baseMint].push({\n      market: account.market,\n      free: baseFree,\n      total: baseTotal,\n    });\n    openOrdersBalances[quoteMint].push({\n      market: account.market,\n      free: quoteFree,\n      total: quoteTotal,\n    });\n  }\n  return openOrdersBalances;\n}\n\nexport const useAllOpenOrders = (): {\n  openOrders: { orders: Order[]; marketAddress: string }[] | null | undefined;\n  loaded: boolean;\n  refreshOpenOrders: () => void;\n} => {\n  const connection = useConnection();\n  const { connected, wallet } = useWallet();\n  const [loaded, setLoaded] = useState(false);\n  const [refresh, setRefresh] = useState(0);\n  const [openOrders, setOpenOrders] = useState<\n    { orders: Order[]; marketAddress: string }[] | null | undefined\n  >(null);\n  const [lastRefresh, setLastRefresh] = useState(0);\n\n  const refreshOpenOrders = () => {\n    if (new Date().getTime() - lastRefresh > 10 * 1000) {\n      setRefresh((prev) => prev + 1);\n    } else {\n      console.log('not refreshing');\n    }\n  };\n\n  useEffect(() => {\n    if (connected && wallet) {\n      const getAllOpenOrders = async () => {\n        setLoaded(false);\n        const _openOrders: { orders: Order[]; marketAddress: string }[] = [];\n        const getOpenOrdersForMarket = async (marketInfo: MarketInfo) => {\n          await sleep(1000 * Math.random()); // Try not to hit rate limit\n          try {\n            const market = await Market.load(\n              connection,\n              marketInfo.address,\n              undefined,\n              marketInfo.programId,\n            );\n            const orders = await market.loadOrdersForOwner(\n              connection,\n              wallet?.publicKey,\n              30000,\n            );\n            _openOrders.push({\n              orders: orders,\n              marketAddress: marketInfo.address.toBase58(),\n            });\n          } catch (e) {\n            console.warn(`Error loading open order ${marketInfo.name} - ${e}`);\n          }\n        };\n        await Promise.all(USE_MARKETS.map((m) => getOpenOrdersForMarket(m)));\n        setOpenOrders(_openOrders);\n        setLastRefresh(new Date().getTime());\n        setLoaded(true);\n      };\n      getAllOpenOrders();\n    }\n  }, [connection, connected, wallet, refresh]);\n  return {\n    openOrders: openOrders,\n    loaded: loaded,\n    refreshOpenOrders: refreshOpenOrders,\n  };\n};\n\nexport function useBalances(): Balances[] {\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const openOrders = useSelectedOpenOrdersAccount(true);\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseExists =\n    openOrders && openOrders.baseTokenTotal && openOrders.baseTokenFree;\n  const quoteExists =\n    openOrders && openOrders.quoteTokenTotal && openOrders.quoteTokenFree;\n  if (\n    baseCurrency === 'UNKNOWN' ||\n    quoteCurrency === 'UNKNOWN' ||\n    !baseCurrency ||\n    !quoteCurrency\n  ) {\n    return [];\n  }\n  return [\n    {\n      market,\n      key: `${baseCurrency}${quoteCurrency}${baseCurrency}`,\n      coin: baseCurrency,\n      wallet: baseCurrencyBalances,\n      orders:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(\n              openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n            )\n          : null,\n      openOrders,\n      unsettled:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(openOrders.baseTokenFree)\n          : null,\n    },\n    {\n      market,\n      key: `${quoteCurrency}${baseCurrency}${quoteCurrency}`,\n      coin: quoteCurrency,\n      wallet: quoteCurrencyBalances,\n      openOrders,\n      orders:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(\n              openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n            )\n          : null,\n      unsettled:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(openOrders.quoteTokenFree)\n          : null,\n    },\n  ];\n}\n\nexport function useWalletBalancesForAllMarkets(): {\n  mint: string;\n  balance: number;\n}[] {\n  const [tokenAccounts] = useTokenAccounts();\n  const { connected } = useWallet();\n  const [mintInfos, mintInfosConnected] = useMintInfos();\n\n  if (!connected || !mintInfosConnected) {\n    return [];\n  }\n\n  let balances: { [mint: string]: number } = {};\n  for (let account of tokenAccounts || []) {\n    if (!account.account) {\n      continue;\n    }\n    let parsedAccount;\n    if (account.effectiveMint.equals(WRAPPED_SOL_MINT)) {\n      parsedAccount = {\n        mint: WRAPPED_SOL_MINT,\n        owner: account.pubkey,\n        amount: account.account.lamports,\n      };\n    } else {\n      parsedAccount = parseTokenAccountData(account.account.data);\n    }\n    if (!(parsedAccount.mint.toBase58() in balances)) {\n      balances[parsedAccount.mint.toBase58()] = 0;\n    }\n    const mintInfo = mintInfos && mintInfos[parsedAccount.mint.toBase58()];\n    const additionalAmount = divideBnToNumber(\n      new BN(parsedAccount.amount),\n      getTokenMultiplierFromDecimals(mintInfo?.decimals || 0),\n    );\n    balances[parsedAccount.mint.toBase58()] += additionalAmount;\n  }\n  return Object.entries(balances).map(([mint, balance]) => {\n    return { mint, balance };\n  });\n}\n\nexport function useUnmigratedDeprecatedMarkets() {\n  const connection = useConnection();\n  const { accounts } = useUnmigratedOpenOrdersAccounts();\n  const marketsList =\n    accounts &&\n    Array.from(new Set(accounts.map((openOrders) => openOrders.market)));\n  const deps = marketsList && marketsList.map((m) => m.toBase58());\n\n  const useUnmigratedDeprecatedMarketsInner = async () => {\n    if (!marketsList) {\n      return null;\n    }\n    const getMarket = async (address) => {\n      const marketInfo = USE_MARKETS.find((market) =>\n        market.address.equals(address),\n      );\n      if (!marketInfo) {\n        console.log('Failed loading market');\n        notify({\n          message: 'Error loading market',\n          type: 'error',\n        });\n        return null;\n      }\n      try {\n        console.log('Loading market', marketInfo.name);\n        // NOTE: Should this just be cached by (connection, marketInfo.address, marketInfo.programId)?\n        return await Market.load(\n          connection,\n          marketInfo.address,\n          {},\n          marketInfo.programId,\n        );\n      } catch (e) {\n        console.log('Failed loading market', marketInfo.name, e);\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getMarket))).filter((x) => x);\n  };\n  const [markets] = useAsyncData(\n    useUnmigratedDeprecatedMarketsInner,\n    tuple(\n      'useUnmigratedDeprecatedMarketsInner',\n      connection,\n      deps && deps.toString(),\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n  if (!markets) {\n    return null;\n  }\n  return markets.map((market) => ({\n    market,\n    openOrdersList: accounts?.filter(\n      (openOrders) => market && openOrders.market.equals(market.address),\n    ),\n  }));\n}\n\nexport function useGetOpenOrdersForDeprecatedMarkets(): {\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\n  loaded: boolean;\n  refreshOpenOrders: () => void;\n} {\n  const { connected, wallet } = useWallet();\n  const { customMarkets } = useCustomMarkets();\n  const connection = useConnection();\n  const marketsAndOrders = useUnmigratedDeprecatedMarkets();\n  const marketsList =\n    marketsAndOrders && marketsAndOrders.map(({ market }) => market);\n\n  // This isn't quite right: open order balances could change\n  const deps =\n    marketsList &&\n    marketsList\n      .filter((market): market is Market => !!market)\n      .map((market) => market.address.toBase58());\n\n  async function getOpenOrdersForDeprecatedMarkets() {\n    if (!connected || !wallet) {\n      return null;\n    }\n    if (!marketsList) {\n      return null;\n    }\n    console.log('refreshing getOpenOrdersForDeprecatedMarkets');\n    const getOrders = async (market: Market | null) => {\n      if (!market) {\n        return null;\n      }\n      const { marketName } = getMarketDetails(market, customMarkets);\n      try {\n        console.log('Fetching open orders for', marketName);\n        // Can do better than this, we have the open orders accounts already\n        return (\n          await market.loadOrdersForOwner(connection, wallet.publicKey)\n        ).map((order) => ({ marketName, market, ...order }));\n      } catch (e) {\n        console.log('Failed loading open orders', market.address.toBase58(), e);\n        notify({\n          message: `Error loading open orders for deprecated ${marketName}`,\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getOrders)))\n      .filter((x): x is OrderWithMarketAndMarketName[] => !!x)\n      .flat();\n  }\n\n  const cacheKey = tuple(\n    'getOpenOrdersForDeprecatedMarkets',\n    connected,\n    connection,\n    wallet,\n    deps && deps.toString(),\n  );\n  const [openOrders, loaded] = useAsyncData(\n    getOpenOrdersForDeprecatedMarkets,\n    cacheKey,\n    {\n      refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n    },\n  );\n  console.log('openOrders', openOrders);\n  return {\n    openOrders,\n    loaded,\n    refreshOpenOrders: () => refreshCache(cacheKey),\n  };\n}\n\nexport function useBalancesForDeprecatedMarkets() {\n  const markets = useUnmigratedDeprecatedMarkets();\n  const [customMarkets] = useLocalStorageState<CustomMarketInfo[]>(\n    'customMarkets',\n    [],\n  );\n  if (!markets) {\n    return null;\n  }\n\n  const openOrderAccountBalances: DeprecatedOpenOrdersBalances[] = [];\n  markets.forEach(({ market, openOrdersList }) => {\n    const { baseCurrency, quoteCurrency, marketName } = getMarketDetails(\n      market,\n      customMarkets,\n    );\n    if (!baseCurrency || !quoteCurrency || !market) {\n      return;\n    }\n    (openOrdersList || []).forEach((openOrders) => {\n      const inOrdersBase =\n        openOrders?.baseTokenTotal &&\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n        );\n      const inOrdersQuote =\n        openOrders?.quoteTokenTotal &&\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n        );\n      const unsettledBase =\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(openOrders.baseTokenFree);\n      const unsettledQuote =\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(openOrders.quoteTokenFree);\n\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: baseCurrency,\n        key: `${marketName}${baseCurrency}`,\n        orders: inOrdersBase,\n        unsettled: unsettledBase,\n        openOrders,\n      });\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: quoteCurrency,\n        key: `${marketName}${quoteCurrency}`,\n        orders: inOrdersQuote,\n        unsettled: unsettledQuote,\n        openOrders,\n      });\n    });\n  });\n  return openOrderAccountBalances;\n}\n\nexport function getMarketInfos(\n  customMarkets: CustomMarketInfo[],\n): MarketInfo[] {\n  const customMarketsInfo = customMarkets.map((m) => ({\n    ...m,\n    address: new PublicKey(m.address),\n    programId: new PublicKey(m.programId),\n    deprecated: false,\n  }));\n\n  return [...customMarketsInfo, ...USE_MARKETS];\n}\n\nexport function useMarketInfos() {\n  const { customMarkets } = useCustomMarkets();\n  return getMarketInfos(customMarkets);\n}\n\n/**\n * If selling, choose min tick size. If buying choose a price\n * s.t. given the state of the orderbook, the order will spend\n * `cost` cost currency.\n *\n * @param orderbook serum Orderbook object\n * @param cost quantity to spend. Base currency if selling,\n *  quote currency if buying.\n * @param tickSizeDecimals size of price increment of the market\n */\nexport function getMarketOrderPrice(\n  orderbook: Orderbook,\n  cost: number,\n  tickSizeDecimals?: number,\n) {\n  if (orderbook.isBids) {\n    return orderbook.market.tickSize;\n  }\n  let spentCost = 0;\n  let price, sizeAtLevel, costAtLevel: number;\n  const asks = orderbook.getL2(1000);\n  for ([price, sizeAtLevel] of asks) {\n    costAtLevel = price * sizeAtLevel;\n    if (spentCost + costAtLevel > cost) {\n      break;\n    }\n    spentCost += costAtLevel;\n  }\n  const sendPrice = Math.min(price * 1.02, asks[0][0] * 1.05);\n  let formattedPrice;\n  if (tickSizeDecimals) {\n    formattedPrice = floorToDecimal(sendPrice, tickSizeDecimals);\n  } else {\n    formattedPrice = sendPrice;\n  }\n  return formattedPrice;\n}\n\nexport function getExpectedFillPrice(\n  orderbook: Orderbook,\n  cost: number,\n  tickSizeDecimals?: number,\n) {\n  let spentCost = 0;\n  let avgPrice = 0;\n  let price, sizeAtLevel, costAtLevel: number;\n  for ([price, sizeAtLevel] of orderbook.getL2(1000)) {\n    costAtLevel = (orderbook.isBids ? 1 : price) * sizeAtLevel;\n    if (spentCost + costAtLevel > cost) {\n      avgPrice += (cost - spentCost) * price;\n      spentCost = cost;\n      break;\n    }\n    avgPrice += costAtLevel * price;\n    spentCost += costAtLevel;\n  }\n  const totalAvgPrice = avgPrice / Math.min(cost, spentCost);\n  let formattedPrice;\n  if (tickSizeDecimals) {\n    formattedPrice = floorToDecimal(totalAvgPrice, tickSizeDecimals);\n  } else {\n    formattedPrice = totalAvgPrice;\n  }\n  return formattedPrice;\n}\n\nexport function useCurrentlyAutoSettling(): [boolean, (currentlyAutoSettling: boolean) => void] {\n  const [currentlyAutoSettling, setCurrentlyAutosettling] = useState<boolean>(false);\n  return [currentlyAutoSettling, setCurrentlyAutosettling];\n}\n"]},"metadata":{},"sourceType":"module"}