{"ast":null,"code":"import{Button,Divider,Spin,Typography}from'antd';import React from'react';import{useGetOpenOrdersForDeprecatedMarkets,useBalancesForDeprecatedMarkets,useUnmigratedOpenOrdersAccounts}from'../utils/markets';import FloatingElement from'./layout/FloatingElement';import CheckOutlined from'@ant-design/icons/lib/icons/CheckOutlined';import BalancesTable from'./UserInfoTable/BalancesTable';import OpenOrderTable from'./UserInfoTable/OpenOrderTable';import SyncOutlined from'@ant-design/icons/lib/icons/SyncOutlined';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Title=Typography.Title;export default function DeprecatedMarketsInstructions(_ref){var switchToLiveMarkets=_ref.switchToLiveMarkets;var balances=useBalancesForDeprecatedMarkets();var _useGetOpenOrdersForD=useGetOpenOrdersForDeprecatedMarkets(),openOrders=_useGetOpenOrdersForD.openOrders,loaded=_useGetOpenOrdersForD.loaded,refreshOpenOrders=_useGetOpenOrdersForD.refreshOpenOrders;var _useUnmigratedOpenOrd=useUnmigratedOpenOrdersAccounts(),refresh=_useUnmigratedOpenOrd.refresh;var needToCancelOrders=!openOrders||openOrders.length>0;var filteredBalances=balances&&balances.filter(function(_ref2){var orders=_ref2.orders,unsettled=_ref2.unsettled;return orders>0||unsettled>0;});var needToSettleFunds=filteredBalances&&filteredBalances.length>0;return/*#__PURE__*/_jsxs(FloatingElement,{children:[/*#__PURE__*/_jsx(Title,{level:4,style:{color:'rgba(255, 255, 255, 1)'},children:\"Migrate new markets\"}),/*#__PURE__*/_jsx(Typography,{children:\"Markets on older versions of the DEX or using Wrapped USDT are now deprecated. To migrate over to the new markets, please cancel your orders and settle your funds on old markets. To convert from Wrapped USDT to Native USDT use sollet.io.\"}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:20,display:'flex',justifyContent:'center'},children:/*#__PURE__*/_jsxs(Button,{onClick:function onClick(){return refresh(true);},children:[/*#__PURE__*/_jsx(SyncOutlined,{}),\" Refresh data\"]})}),!balances?/*#__PURE__*/_jsx(Spin,{size:\"large\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Divider,{children:[!needToCancelOrders&&/*#__PURE__*/_jsx(CheckOutlined,{}),\" Cancel your orders\"]}),needToCancelOrders?loaded?/*#__PURE__*/_jsx(OpenOrderTable,{openOrders:openOrders,onCancelSuccess:function onCancelSuccess(){setTimeout(function(){refresh();refreshOpenOrders();},1000);// Wait so that on-chain account state reflects the update\n}}):/*#__PURE__*/_jsx(Spin,{size:\"large\"}):null,/*#__PURE__*/_jsxs(Divider,{children:[!needToSettleFunds&&/*#__PURE__*/_jsx(CheckOutlined,{}),\" Settle your funds\"]}),needToSettleFunds&&/*#__PURE__*/_jsx(BalancesTable,{balances:filteredBalances,hideWalletBalance:true,showMarket:true,onSettleSuccess:function onSettleSuccess(){setTimeout(refresh,1000);// Wait so that on-chain account state reflects the update\n}}),/*#__PURE__*/_jsx(Divider,{children:\"Switch to upgraded markets\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center'},children:/*#__PURE__*/_jsx(Button,{onClick:switchToLiveMarkets,disabled:needToSettleFunds||needToCancelOrders,children:\"Switch to new markets\"})})]})]});}","map":{"version":3,"sources":["/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/src/components/DeprecatedMarketsInstructions.js"],"names":["Button","Divider","Spin","Typography","React","useGetOpenOrdersForDeprecatedMarkets","useBalancesForDeprecatedMarkets","useUnmigratedOpenOrdersAccounts","FloatingElement","CheckOutlined","BalancesTable","OpenOrderTable","SyncOutlined","Title","DeprecatedMarketsInstructions","switchToLiveMarkets","balances","openOrders","loaded","refreshOpenOrders","refresh","needToCancelOrders","length","filteredBalances","filter","orders","unsettled","needToSettleFunds","color","marginTop","display","justifyContent","setTimeout"],"mappings":"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","sourcesContent":["import { Button, Divider, Spin, Typography } from 'antd';\nimport React from 'react';\nimport {\n  useGetOpenOrdersForDeprecatedMarkets,\n  useBalancesForDeprecatedMarkets,\n  useUnmigratedOpenOrdersAccounts,\n} from '../utils/markets';\nimport FloatingElement from './layout/FloatingElement';\nimport CheckOutlined from '@ant-design/icons/lib/icons/CheckOutlined';\nimport BalancesTable from './UserInfoTable/BalancesTable';\nimport OpenOrderTable from './UserInfoTable/OpenOrderTable';\nimport SyncOutlined from '@ant-design/icons/lib/icons/SyncOutlined';\n\nconst { Title } = Typography;\n\nexport default function DeprecatedMarketsInstructions({ switchToLiveMarkets }) {\n  const balances = useBalancesForDeprecatedMarkets();\n  const {\n    openOrders,\n    loaded,\n    refreshOpenOrders,\n  } = useGetOpenOrdersForDeprecatedMarkets();\n\n  const { refresh } = useUnmigratedOpenOrdersAccounts();\n  const needToCancelOrders = !openOrders || openOrders.length > 0;\n  const filteredBalances =\n    balances &&\n    balances.filter(({ orders, unsettled }) => orders > 0 || unsettled > 0);\n  const needToSettleFunds = filteredBalances && filteredBalances.length > 0;\n  return (\n    <FloatingElement>\n      <Title level={4} style={{ color: 'rgba(255, 255, 255, 1)' }}>\n        Migrate new markets\n      </Title>\n      <Typography>\n        Markets on older versions of the DEX or using Wrapped USDT are now deprecated. To migrate over\n        to the new markets, please cancel your orders and settle your funds on old markets. To convert\n        from Wrapped USDT to Native USDT use sollet.io.\n      </Typography>\n      <div style={{ marginTop: 20, display: 'flex', justifyContent: 'center' }}>\n        <Button onClick={() => refresh(true)}>\n          <SyncOutlined /> Refresh data\n        </Button>\n      </div>\n      {!balances ? (\n        <Spin size=\"large\" />\n      ) : (\n        <>\n          <Divider>\n            {!needToCancelOrders && <CheckOutlined />} Cancel your orders\n          </Divider>\n          {needToCancelOrders ? (\n            loaded ? (\n              <OpenOrderTable\n                openOrders={openOrders}\n                onCancelSuccess={() => {\n                  setTimeout(() => {\n                    refresh();\n                    refreshOpenOrders();\n                  }, 1000); // Wait so that on-chain account state reflects the update\n                }}\n              />\n            ) : (\n              <Spin size=\"large\" />\n            )\n          ) : null}\n          <Divider>\n            {!needToSettleFunds && <CheckOutlined />} Settle your funds\n          </Divider>\n          {needToSettleFunds && (\n            <BalancesTable\n              balances={filteredBalances}\n              hideWalletBalance\n              showMarket\n              onSettleSuccess={() => {\n                setTimeout(refresh, 1000); // Wait so that on-chain account state reflects the update\n              }}\n            />\n          )}\n          <Divider>Switch to upgraded markets</Divider>\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Button\n              onClick={switchToLiveMarkets}\n              disabled={needToSettleFunds || needToCancelOrders}\n            >\n              Switch to new markets\n            </Button>\n          </div>\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}