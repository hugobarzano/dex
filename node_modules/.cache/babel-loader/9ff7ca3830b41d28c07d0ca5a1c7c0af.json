{"ast":null,"code":"import _objectSpread from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/fork/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/fork/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{useSelectedTokenAccounts}from'../utils/markets';import{Button,Col,Select,Typography}from'antd';import{CopyOutlined}from'@ant-design/icons';import{abbreviateAddress}from'../utils/utils';import{notify}from'../utils/notifications';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function StandaloneTokenAccountsSelect(_ref){var accounts=_ref.accounts,mint=_ref.mint,label=_ref.label;var _useSelectedTokenAcco=useSelectedTokenAccounts(),_useSelectedTokenAcco2=_slicedToArray(_useSelectedTokenAcco,2),selectedTokenAccounts=_useSelectedTokenAcco2[0],setSelectedTokenAccounts=_useSelectedTokenAcco2[1];var selectedValue;if(mint&&mint in selectedTokenAccounts){selectedValue=selectedTokenAccounts[mint];}else if(accounts&&(accounts===null||accounts===void 0?void 0:accounts.length)>0){selectedValue=accounts[0].pubkey.toBase58();}else{selectedValue=undefined;}var setTokenAccountForCoin=function setTokenAccountForCoin(value){if(!mint){notify({message:'Error selecting token account',description:'Mint is undefined',type:'error'});return;}var newSelectedTokenAccounts=_objectSpread({},selectedTokenAccounts);newSelectedTokenAccounts[mint]=value;setSelectedTokenAccounts(newSelectedTokenAccounts);};return/*#__PURE__*/_jsxs(React.Fragment,{children:[label&&/*#__PURE__*/_jsx(Col,{span:8,children:\"Token account:\"}),/*#__PURE__*/_jsx(Col,{span:label?13:21,children:/*#__PURE__*/_jsx(Select,{style:{width:'100%'},value:selectedValue,onSelect:setTokenAccountForCoin,children:accounts===null||accounts===void 0?void 0:accounts.map(function(account){return/*#__PURE__*/_jsx(Select.Option,{value:account.pubkey.toBase58(),children:/*#__PURE__*/_jsx(Typography.Text,{code:true,children:label?abbreviateAddress(account.pubkey,8):account.pubkey.toBase58()})},account.pubkey.toBase58());})})}),/*#__PURE__*/_jsx(Col,{span:2,offset:1,children:/*#__PURE__*/_jsx(Button,{shape:\"round\",icon:/*#__PURE__*/_jsx(CopyOutlined,{}),size:'small',onClick:function onClick(){return selectedValue&&navigator.clipboard.writeText(selectedValue);}})})]});}","map":{"version":3,"sources":["/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/fork/serum-dex-ui/src/components/StandaloneTokenAccountSelect.tsx"],"names":["React","useSelectedTokenAccounts","Button","Col","Select","Typography","CopyOutlined","abbreviateAddress","notify","StandaloneTokenAccountsSelect","accounts","mint","label","selectedTokenAccounts","setSelectedTokenAccounts","selectedValue","length","pubkey","toBase58","undefined","setTokenAccountForCoin","value","message","description","type","newSelectedTokenAccounts","width","map","account","navigator","clipboard","writeText"],"mappings":"iXAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,wBAAT,KAAyC,kBAAzC,CACA,OAASC,MAAT,CAAiBC,GAAjB,CAAsBC,MAAtB,CAA8BC,UAA9B,KAAgD,MAAhD,CACA,OAASC,YAAT,KAA6B,mBAA7B,CACA,OAASC,iBAAT,KAAkC,gBAAlC,CACA,OAASC,MAAT,KAAuB,wBAAvB,C,wFAEA,cAAe,SAASC,CAAAA,6BAAT,MAQZ,IAPDC,CAAAA,QAOC,MAPDA,QAOC,CANDC,IAMC,MANDA,IAMC,CALDC,KAKC,MALDA,KAKC,CACD,0BAGIX,wBAAwB,EAH5B,gEACEY,qBADF,2BAEEC,wBAFF,2BAKA,GAAIC,CAAAA,aAAJ,CACA,GAAIJ,IAAI,EAAIA,IAAI,GAAIE,CAAAA,qBAApB,CAA2C,CACzCE,aAAa,CAAGF,qBAAqB,CAACF,IAAD,CAArC,CACD,CAFD,IAEO,IAAID,QAAQ,EAAI,CAAAA,QAAQ,OAAR,EAAAA,QAAQ,SAAR,QAAAA,QAAQ,CAAEM,MAAV,EAAmB,CAAnC,CAAsC,CAC3CD,aAAa,CAAGL,QAAQ,CAAC,CAAD,CAAR,CAAYO,MAAZ,CAAmBC,QAAnB,EAAhB,CACD,CAFM,IAEA,CACLH,aAAa,CAAGI,SAAhB,CACD,CAED,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,KAAD,CAAW,CACxC,GAAI,CAACV,IAAL,CAAW,CACTH,MAAM,CAAC,CACLc,OAAO,CAAE,+BADJ,CAELC,WAAW,CAAE,mBAFR,CAGLC,IAAI,CAAE,OAHD,CAAD,CAAN,CAKA,OACD,CACD,GAAMC,CAAAA,wBAAwB,kBAAQZ,qBAAR,CAA9B,CACAY,wBAAwB,CAACd,IAAD,CAAxB,CAAiCU,KAAjC,CACAP,wBAAwB,CAACW,wBAAD,CAAxB,CACD,CAZD,CAcA,mBACE,MAAC,KAAD,CAAO,QAAP,YACGb,KAAK,eAAI,KAAC,GAAD,EAAK,IAAI,CAAE,CAAX,4BADZ,cAEE,KAAC,GAAD,EAAK,IAAI,CAAEA,KAAK,CAAG,EAAH,CAAQ,EAAxB,uBACE,KAAC,MAAD,EACE,KAAK,CAAE,CAAEc,KAAK,CAAE,MAAT,CADT,CAEE,KAAK,CAAEX,aAFT,CAGE,QAAQ,CAAEK,sBAHZ,UAKGV,QALH,SAKGA,QALH,iBAKGA,QAAQ,CAAEiB,GAAV,CAAc,SAACC,OAAD,qBACb,KAAC,MAAD,CAAQ,MAAR,EAEE,KAAK,CAAEA,OAAO,CAACX,MAAR,CAAeC,QAAf,EAFT,uBAIE,KAAC,UAAD,CAAY,IAAZ,EAAiB,IAAI,KAArB,UACGN,KAAK,CACFL,iBAAiB,CAACqB,OAAO,CAACX,MAAT,CAAiB,CAAjB,CADf,CAEFW,OAAO,CAACX,MAAR,CAAeC,QAAf,EAHN,EAJF,EACOU,OAAO,CAACX,MAAR,CAAeC,QAAf,EADP,CADa,EAAd,CALH,EADF,EAFF,cAsBE,KAAC,GAAD,EAAK,IAAI,CAAE,CAAX,CAAc,MAAM,CAAE,CAAtB,uBACE,KAAC,MAAD,EACE,KAAK,CAAC,OADR,CAEE,IAAI,cAAE,KAAC,YAAD,IAFR,CAGE,IAAI,CAAE,OAHR,CAIE,OAAO,CAAE,yBACPH,CAAAA,aAAa,EAAIc,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BhB,aAA9B,CADV,EAJX,EADF,EAtBF,GADF,CAmCD","sourcesContent":["import React from 'react';\nimport { TokenAccount } from '../utils/types';\nimport { useSelectedTokenAccounts } from '../utils/markets';\nimport { Button, Col, Select, Typography } from 'antd';\nimport { CopyOutlined } from '@ant-design/icons';\nimport { abbreviateAddress } from '../utils/utils';\nimport { notify } from '../utils/notifications';\n\nexport default function StandaloneTokenAccountsSelect({\n  accounts,\n  mint,\n  label,\n}: {\n  accounts: TokenAccount[] | null | undefined;\n  mint: string | undefined;\n  label?: boolean;\n}) {\n  const [\n    selectedTokenAccounts,\n    setSelectedTokenAccounts,\n  ] = useSelectedTokenAccounts();\n\n  let selectedValue: string | undefined;\n  if (mint && mint in selectedTokenAccounts) {\n    selectedValue = selectedTokenAccounts[mint];\n  } else if (accounts && accounts?.length > 0) {\n    selectedValue = accounts[0].pubkey.toBase58();\n  } else {\n    selectedValue = undefined;\n  }\n\n  const setTokenAccountForCoin = (value) => {\n    if (!mint) {\n      notify({\n        message: 'Error selecting token account',\n        description: 'Mint is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    const newSelectedTokenAccounts = { ...selectedTokenAccounts };\n    newSelectedTokenAccounts[mint] = value;\n    setSelectedTokenAccounts(newSelectedTokenAccounts);\n  };\n\n  return (\n    <React.Fragment>\n      {label && <Col span={8}>Token account:</Col>}\n      <Col span={label ? 13 : 21}>\n        <Select\n          style={{ width: '100%' }}\n          value={selectedValue}\n          onSelect={setTokenAccountForCoin}\n        >\n          {accounts?.map((account) => (\n            <Select.Option\n              key={account.pubkey.toBase58()}\n              value={account.pubkey.toBase58()}\n            >\n              <Typography.Text code>\n                {label\n                  ? abbreviateAddress(account.pubkey, 8)\n                  : account.pubkey.toBase58()}\n              </Typography.Text>\n            </Select.Option>\n          ))}\n        </Select>\n      </Col>\n      <Col span={2} offset={1}>\n        <Button\n          shape=\"round\"\n          icon={<CopyOutlined />}\n          size={'small'}\n          onClick={() =>\n            selectedValue && navigator.clipboard.writeText(selectedValue)\n          }\n        />\n      </Col>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}