{"ast":null,"code":"import _objectSpread from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/fork/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as React from'react';import'./index.css';import{widget}from'../../charting_library';import{useMarket,USE_MARKETS}from'../../utils/markets';import*as saveLoadAdapter from'./saveLoadAdapter';import{flatten}from'../../utils/utils';import{BONFIDA_DATA_FEED}from'../../utils/bonfidaConnector';import{jsx as _jsx}from\"react/jsx-runtime\";export var TVChartContainer=function TVChartContainer(){// let datafeed = useTvDataFeed();\nvar defaultProps={symbol:'BTC/USDC',// @ts-ignore\ninterval:'60',auto_save_delay:5,theme:'Dark',containerId:'tv_chart_container',// datafeed: datafeed,\nlibraryPath:'/charting_library/',chartsStorageApiVersion:'1.1',clientId:'tradingview.com',userId:'public_user_id',fullscreen:false,autosize:true,datafeedUrl:BONFIDA_DATA_FEED,studiesOverrides:{}};var tvWidgetRef=React.useRef(null);var _useMarket=useMarket(),market=_useMarket.market;var chartProperties=JSON.parse(localStorage.getItem('chartproperties')||'{}');React.useEffect(function(){var _USE_MARKETS$find;var savedProperties=flatten(chartProperties,{restrictTo:['scalesProperties','paneProperties','tradingProperties']});var widgetOptions={symbol:((_USE_MARKETS$find=USE_MARKETS.find(function(m){return m.address.toBase58()===(market===null||market===void 0?void 0:market.publicKey.toBase58());}))===null||_USE_MARKETS$find===void 0?void 0:_USE_MARKETS$find.name)||'SRM/USDC',// BEWARE: no trailing slash is expected in feed URL\n// tslint:disable-next-line:no-any\n// @ts-ignore\n// datafeed: datafeed,\n// @ts-ignore\ndatafeed:new window.Datafeeds.UDFCompatibleDatafeed(defaultProps.datafeedUrl),interval:defaultProps.interval,container_id:defaultProps.containerId,library_path:defaultProps.libraryPath,auto_save_delay:5,locale:'en',disabled_features:['use_localstorage_for_settings'],enabled_features:['study_templates'],load_last_chart:true,client_id:defaultProps.clientId,user_id:defaultProps.userId,fullscreen:defaultProps.fullscreen,autosize:defaultProps.autosize,studies_overrides:defaultProps.studiesOverrides,theme:defaultProps.theme==='Dark'?'Dark':'Light',overrides:_objectSpread(_objectSpread({},savedProperties),{},{'mainSeriesProperties.candleStyle.upColor':'#41C77A','mainSeriesProperties.candleStyle.downColor':'#F23B69','mainSeriesProperties.candleStyle.borderUpColor':'#41C77A','mainSeriesProperties.candleStyle.borderDownColor':'#F23B69','mainSeriesProperties.candleStyle.wickUpColor':'#41C77A','mainSeriesProperties.candleStyle.wickDownColor':'#F23B69'}),// @ts-ignore\nsave_load_adapter:saveLoadAdapter,settings_adapter:{initialSettings:{'trading.orderPanelSettingsBroker':JSON.stringify({showRelativePriceControl:false,showCurrencyRiskInQty:false,showPercentRiskInQty:false,showBracketsInCurrency:false,showBracketsInPercent:false}),// \"proterty\"\n'trading.chart.proterty':localStorage.getItem('trading.chart.proterty')||JSON.stringify({hideFloatingPanel:1}),'chart.favoriteDrawings':localStorage.getItem('chart.favoriteDrawings')||JSON.stringify([]),'chart.favoriteDrawingsPosition':localStorage.getItem('chart.favoriteDrawingsPosition')||JSON.stringify({})},setValue:function setValue(key,value){localStorage.setItem(key,value);},removeValue:function removeValue(key){localStorage.removeItem(key);}}};var tvWidget=new widget(widgetOptions);tvWidget.onChartReady(function(){tvWidgetRef.current=tvWidget;tvWidget// @ts-ignore\n.subscribe('onAutoSaveNeeded',function(){return tvWidget.saveChartToServer();});});// eslint-disable-next-line react-hooks/exhaustive-deps\n},[market,tvWidgetRef.current]);return/*#__PURE__*/_jsx(\"div\",{id:defaultProps.containerId,className:'TVChartContainer'});};","map":{"version":3,"sources":["/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/fork/serum-dex-ui/src/components/TradingView/index.tsx"],"names":["React","widget","useMarket","USE_MARKETS","saveLoadAdapter","flatten","BONFIDA_DATA_FEED","TVChartContainer","defaultProps","symbol","interval","auto_save_delay","theme","containerId","libraryPath","chartsStorageApiVersion","clientId","userId","fullscreen","autosize","datafeedUrl","studiesOverrides","tvWidgetRef","useRef","market","chartProperties","JSON","parse","localStorage","getItem","useEffect","savedProperties","restrictTo","widgetOptions","find","m","address","toBase58","publicKey","name","datafeed","window","Datafeeds","UDFCompatibleDatafeed","container_id","library_path","locale","disabled_features","enabled_features","load_last_chart","client_id","user_id","studies_overrides","overrides","save_load_adapter","settings_adapter","initialSettings","stringify","showRelativePriceControl","showCurrencyRiskInQty","showPercentRiskInQty","showBracketsInCurrency","showBracketsInPercent","hideFloatingPanel","setValue","key","value","setItem","removeValue","removeItem","tvWidget","onChartReady","current","subscribe","saveChartToServer"],"mappings":"wLAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAO,aAAP,CACA,OACEC,MADF,KAIO,wBAJP,CAKA,OAASC,SAAT,CAAoBC,WAApB,KAAuC,qBAAvC,CACA,MAAO,GAAKC,CAAAA,eAAZ,KAAiC,mBAAjC,CACA,OAASC,OAAT,KAAwB,mBAAxB,CACA,OAASC,iBAAT,KAAkC,8BAAlC,C,2CAwBA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CACpC;AACA,GAAMC,CAAAA,YAAiC,CAAG,CACxCC,MAAM,CAAE,UADgC,CAExC;AACAC,QAAQ,CAAE,IAH8B,CAIxCC,eAAe,CAAE,CAJuB,CAKxCC,KAAK,CAAE,MALiC,CAMxCC,WAAW,CAAE,oBAN2B,CAOxC;AACAC,WAAW,CAAE,oBAR2B,CASxCC,uBAAuB,CAAE,KATe,CAUxCC,QAAQ,CAAE,iBAV8B,CAWxCC,MAAM,CAAE,gBAXgC,CAYxCC,UAAU,CAAE,KAZ4B,CAaxCC,QAAQ,CAAE,IAb8B,CAcxCC,WAAW,CAAEd,iBAd2B,CAexCe,gBAAgB,CAAE,EAfsB,CAA1C,CAkBA,GAAMC,CAAAA,WAAW,CAAGtB,KAAK,CAACuB,MAAN,CAA4C,IAA5C,CAApB,CACA,eAAmBrB,SAAS,EAA5B,CAAQsB,MAAR,YAAQA,MAAR,CAEA,GAAMC,CAAAA,eAAe,CAAGC,IAAI,CAACC,KAAL,CACtBC,YAAY,CAACC,OAAb,CAAqB,iBAArB,GAA2C,IADrB,CAAxB,CAIA7B,KAAK,CAAC8B,SAAN,CAAgB,UAAM,uBACpB,GAAMC,CAAAA,eAAe,CAAG1B,OAAO,CAACoB,eAAD,CAAkB,CAC/CO,UAAU,CAAE,CAAC,kBAAD,CAAqB,gBAArB,CAAuC,mBAAvC,CADmC,CAAlB,CAA/B,CAIA,GAAMC,CAAAA,aAA2C,CAAG,CAClDxB,MAAM,CACJ,oBAAAN,WAAW,CAAC+B,IAAZ,CACE,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,OAAF,CAAUC,QAAV,MAAyBb,MAAzB,SAAyBA,MAAzB,iBAAyBA,MAAM,CAAEc,SAAR,CAAkBD,QAAlB,EAAzB,CAAP,EADF,+DAEGE,IAFH,GAEW,UAJqC,CAKlD;AACA;AACA;AACA;AACA;AACAC,QAAQ,CAAE,GAAKC,CAAAA,MAAD,CAAgBC,SAAhB,CAA0BC,qBAA9B,CACRnC,YAAY,CAACY,WADL,CAVwC,CAalDV,QAAQ,CAAEF,YAAY,CAACE,QAb2B,CAclDkC,YAAY,CAAEpC,YAAY,CAACK,WAduB,CAelDgC,YAAY,CAAErC,YAAY,CAACM,WAfuB,CAgBlDH,eAAe,CAAE,CAhBiC,CAkBlDmC,MAAM,CAAE,IAlB0C,CAmBlDC,iBAAiB,CAAE,CAAC,+BAAD,CAnB+B,CAoBlDC,gBAAgB,CAAE,CAAC,iBAAD,CApBgC,CAqBlDC,eAAe,CAAE,IArBiC,CAsBlDC,SAAS,CAAE1C,YAAY,CAACQ,QAtB0B,CAuBlDmC,OAAO,CAAE3C,YAAY,CAACS,MAvB4B,CAwBlDC,UAAU,CAAEV,YAAY,CAACU,UAxByB,CAyBlDC,QAAQ,CAAEX,YAAY,CAACW,QAzB2B,CA0BlDiC,iBAAiB,CAAE5C,YAAY,CAACa,gBA1BkB,CA2BlDT,KAAK,CAAEJ,YAAY,CAACI,KAAb,GAAuB,MAAvB,CAAgC,MAAhC,CAAyC,OA3BE,CA4BlDyC,SAAS,gCACJtB,eADI,MAEP,2CAA4C,SAFrC,CAGP,6CAA8C,SAHvC,CAIP,iDAAkD,SAJ3C,CAKP,mDAAoD,SAL7C,CAMP,+CAAgD,SANzC,CAOP,iDAAkD,SAP3C,EA5ByC,CAqClD;AACAuB,iBAAiB,CAAElD,eAtC+B,CAuClDmD,gBAAgB,CAAE,CAChBC,eAAe,CAAE,CACf,mCAAoC9B,IAAI,CAAC+B,SAAL,CAAe,CACjDC,wBAAwB,CAAE,KADuB,CAEjDC,qBAAqB,CAAE,KAF0B,CAGjDC,oBAAoB,CAAE,KAH2B,CAIjDC,sBAAsB,CAAE,KAJyB,CAKjDC,qBAAqB,CAAE,KAL0B,CAAf,CADrB,CAQf;AACA,yBACElC,YAAY,CAACC,OAAb,CAAqB,wBAArB,GACAH,IAAI,CAAC+B,SAAL,CAAe,CACbM,iBAAiB,CAAE,CADN,CAAf,CAXa,CAcf,yBACEnC,YAAY,CAACC,OAAb,CAAqB,wBAArB,GACAH,IAAI,CAAC+B,SAAL,CAAe,EAAf,CAhBa,CAiBf,iCACE7B,YAAY,CAACC,OAAb,CAAqB,gCAArB,GACAH,IAAI,CAAC+B,SAAL,CAAe,EAAf,CAnBa,CADD,CAsBhBO,QAAQ,CAAE,kBAACC,GAAD,CAAMC,KAAN,CAAgB,CACxBtC,YAAY,CAACuC,OAAb,CAAqBF,GAArB,CAA0BC,KAA1B,EACD,CAxBe,CAyBhBE,WAAW,CAAE,qBAACH,GAAD,CAAS,CACpBrC,YAAY,CAACyC,UAAb,CAAwBJ,GAAxB,EACD,CA3Be,CAvCgC,CAApD,CAsEA,GAAMK,CAAAA,QAAQ,CAAG,GAAIrE,CAAAA,MAAJ,CAAWgC,aAAX,CAAjB,CAEAqC,QAAQ,CAACC,YAAT,CAAsB,UAAM,CAC1BjD,WAAW,CAACkD,OAAZ,CAAsBF,QAAtB,CACAA,QACE;AADM,CAELG,SAFH,CAEa,kBAFb,CAEiC,iBAAMH,CAAAA,QAAQ,CAACI,iBAAT,EAAN,EAFjC,EAGD,CALD,EAMA;AACD,CApFD,CAoFG,CAAClD,MAAD,CAASF,WAAW,CAACkD,OAArB,CApFH,EAsFA,mBAAO,YAAK,EAAE,CAAEhE,YAAY,CAACK,WAAtB,CAAmC,SAAS,CAAE,kBAA9C,EAAP,CACD,CAlHM","sourcesContent":["import * as React from 'react';\nimport './index.css';\nimport {\n  widget,\n  ChartingLibraryWidgetOptions,\n  IChartingLibraryWidget,\n} from '../../charting_library';\nimport { useMarket, USE_MARKETS } from '../../utils/markets';\nimport * as saveLoadAdapter from './saveLoadAdapter';\nimport { flatten } from '../../utils/utils';\nimport { BONFIDA_DATA_FEED } from '../../utils/bonfidaConnector';\n\nexport interface ChartContainerProps {\n  symbol: ChartingLibraryWidgetOptions['symbol'];\n  interval: ChartingLibraryWidgetOptions['interval'];\n  auto_save_delay: ChartingLibraryWidgetOptions['auto_save_delay'];\n\n  // BEWARE: no trailing slash is expected in feed URL\n  // datafeed: any;\n  datafeedUrl: string;\n  libraryPath: ChartingLibraryWidgetOptions['library_path'];\n  chartsStorageUrl: ChartingLibraryWidgetOptions['charts_storage_url'];\n  chartsStorageApiVersion: ChartingLibraryWidgetOptions['charts_storage_api_version'];\n  clientId: ChartingLibraryWidgetOptions['client_id'];\n  userId: ChartingLibraryWidgetOptions['user_id'];\n  fullscreen: ChartingLibraryWidgetOptions['fullscreen'];\n  autosize: ChartingLibraryWidgetOptions['autosize'];\n  studiesOverrides: ChartingLibraryWidgetOptions['studies_overrides'];\n  containerId: ChartingLibraryWidgetOptions['container_id'];\n  theme: string;\n}\n\nexport interface ChartContainerState {}\n\nexport const TVChartContainer = () => {\n  // let datafeed = useTvDataFeed();\n  const defaultProps: ChartContainerProps = {\n    symbol: 'BTC/USDC',\n    // @ts-ignore\n    interval: '60',\n    auto_save_delay: 5,\n    theme: 'Dark',\n    containerId: 'tv_chart_container',\n    // datafeed: datafeed,\n    libraryPath: '/charting_library/',\n    chartsStorageApiVersion: '1.1',\n    clientId: 'tradingview.com',\n    userId: 'public_user_id',\n    fullscreen: false,\n    autosize: true,\n    datafeedUrl: BONFIDA_DATA_FEED,\n    studiesOverrides: {},\n  };\n\n  const tvWidgetRef = React.useRef<IChartingLibraryWidget | null>(null);\n  const { market } = useMarket();\n\n  const chartProperties = JSON.parse(\n    localStorage.getItem('chartproperties') || '{}',\n  );\n\n  React.useEffect(() => {\n    const savedProperties = flatten(chartProperties, {\n      restrictTo: ['scalesProperties', 'paneProperties', 'tradingProperties'],\n    });\n\n    const widgetOptions: ChartingLibraryWidgetOptions = {\n      symbol:\n        USE_MARKETS.find(\n          (m) => m.address.toBase58() === market?.publicKey.toBase58(),\n        )?.name || 'SRM/USDC',\n      // BEWARE: no trailing slash is expected in feed URL\n      // tslint:disable-next-line:no-any\n      // @ts-ignore\n      // datafeed: datafeed,\n      // @ts-ignore\n      datafeed: new (window as any).Datafeeds.UDFCompatibleDatafeed(\n        defaultProps.datafeedUrl,\n      ),\n      interval: defaultProps.interval as ChartingLibraryWidgetOptions['interval'],\n      container_id: defaultProps.containerId as ChartingLibraryWidgetOptions['container_id'],\n      library_path: defaultProps.libraryPath as string,\n      auto_save_delay: 5,\n\n      locale: 'en',\n      disabled_features: ['use_localstorage_for_settings'],\n      enabled_features: ['study_templates'],\n      load_last_chart: true,\n      client_id: defaultProps.clientId,\n      user_id: defaultProps.userId,\n      fullscreen: defaultProps.fullscreen,\n      autosize: defaultProps.autosize,\n      studies_overrides: defaultProps.studiesOverrides,\n      theme: defaultProps.theme === 'Dark' ? 'Dark' : 'Light',\n      overrides: {\n        ...savedProperties,\n        'mainSeriesProperties.candleStyle.upColor': '#41C77A',\n        'mainSeriesProperties.candleStyle.downColor': '#F23B69',\n        'mainSeriesProperties.candleStyle.borderUpColor': '#41C77A',\n        'mainSeriesProperties.candleStyle.borderDownColor': '#F23B69',\n        'mainSeriesProperties.candleStyle.wickUpColor': '#41C77A',\n        'mainSeriesProperties.candleStyle.wickDownColor': '#F23B69',\n      },\n      // @ts-ignore\n      save_load_adapter: saveLoadAdapter,\n      settings_adapter: {\n        initialSettings: {\n          'trading.orderPanelSettingsBroker': JSON.stringify({\n            showRelativePriceControl: false,\n            showCurrencyRiskInQty: false,\n            showPercentRiskInQty: false,\n            showBracketsInCurrency: false,\n            showBracketsInPercent: false,\n          }),\n          // \"proterty\"\n          'trading.chart.proterty':\n            localStorage.getItem('trading.chart.proterty') ||\n            JSON.stringify({\n              hideFloatingPanel: 1,\n            }),\n          'chart.favoriteDrawings':\n            localStorage.getItem('chart.favoriteDrawings') ||\n            JSON.stringify([]),\n          'chart.favoriteDrawingsPosition':\n            localStorage.getItem('chart.favoriteDrawingsPosition') ||\n            JSON.stringify({}),\n        },\n        setValue: (key, value) => {\n          localStorage.setItem(key, value);\n        },\n        removeValue: (key) => {\n          localStorage.removeItem(key);\n        },\n      },\n    };\n\n    const tvWidget = new widget(widgetOptions);\n\n    tvWidget.onChartReady(() => {\n      tvWidgetRef.current = tvWidget;\n      tvWidget\n        // @ts-ignore\n        .subscribe('onAutoSaveNeeded', () => tvWidget.saveChartToServer());\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [market, tvWidgetRef.current]);\n\n  return <div id={defaultProps.containerId} className={'TVChartContainer'} />;\n};\n"]},"metadata":{},"sourceType":"module"}