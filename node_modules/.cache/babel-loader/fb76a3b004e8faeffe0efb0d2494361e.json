{"ast":null,"code":"import _regeneratorRuntime from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/fork/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/fork/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/fork/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Button}from'antd';import React from'react';import{useTokenAccounts,getSelectedTokenAccountForMint}from'../../utils/markets';import DataTable from'../layout/DataTable';import{useSendConnection}from'../../utils/connection';import{useWallet}from'../../utils/wallet';import{settleFunds}from'../../utils/send';import{notify}from'../../utils/notifications';import{useReferrer}from'../../utils/referrer';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function BalancesTable(_ref){var balances=_ref.balances,showMarket=_ref.showMarket,hideWalletBalance=_ref.hideWalletBalance,onSettleSuccess=_ref.onSettleSuccess;var _useTokenAccounts=useTokenAccounts(),_useTokenAccounts2=_slicedToArray(_useTokenAccounts,1),accounts=_useTokenAccounts2[0];var connection=useSendConnection();var _useWallet=useWallet(),wallet=_useWallet.wallet;var _useReferrer=useReferrer(),usdcRef=_useReferrer.usdcRef,usdtRef=_useReferrer.usdtRef;function onSettleFunds(_x,_x2){return _onSettleFunds.apply(this,arguments);}function _onSettleFunds(){_onSettleFunds=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(market,openOrders){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return settleFunds({market:market,openOrders:openOrders,connection:connection,wallet:wallet,baseCurrencyAccount:getSelectedTokenAccountForMint(accounts,market===null||market===void 0?void 0:market.baseMintAddress),quoteCurrencyAccount:getSelectedTokenAccountForMint(accounts,market===null||market===void 0?void 0:market.quoteMintAddress),usdcRef:usdcRef,usdtRef:usdtRef});case 3:_context.next=9;break;case 5:_context.prev=5;_context.t0=_context[\"catch\"](0);notify({message:'Error settling funds',description:_context.t0.message,type:'error'});return _context.abrupt(\"return\");case 9:onSettleSuccess&&onSettleSuccess();case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,5]]);}));return _onSettleFunds.apply(this,arguments);}var columns=[showMarket?{title:'Market',dataIndex:'marketName',key:'marketName'}:null,{title:'Coin',dataIndex:'coin',key:'coin'},hideWalletBalance?null:{title:'Wallet Balance',dataIndex:'wallet',key:'wallet'},{title:'Orders',dataIndex:'orders',key:'orders'},{title:'Unsettled',dataIndex:'unsettled',key:'unsettled'},{key:'action',render:function render(_ref2){var market=_ref2.market,openOrders=_ref2.openOrders,marketName=_ref2.marketName;return/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'right'},children:/*#__PURE__*/_jsxs(Button,{ghost:true,style:{marginRight:12},onClick:function onClick(){return onSettleFunds(market,openOrders);},children:[\"Settle \",marketName]})});}}].filter(function(x){return x;});return/*#__PURE__*/_jsx(DataTable,{emptyLabel:\"No balances\",dataSource:balances,columns:columns,pagination:false});}","map":{"version":3,"sources":["/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/fork/serum-dex-ui/src/components/UserInfoTable/BalancesTable.jsx"],"names":["Button","React","useTokenAccounts","getSelectedTokenAccountForMint","DataTable","useSendConnection","useWallet","settleFunds","notify","useReferrer","BalancesTable","balances","showMarket","hideWalletBalance","onSettleSuccess","accounts","connection","wallet","usdcRef","usdtRef","onSettleFunds","market","openOrders","baseCurrencyAccount","baseMintAddress","quoteCurrencyAccount","quoteMintAddress","message","description","type","columns","title","dataIndex","key","render","marketName","textAlign","marginRight","filter","x"],"mappings":"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","sourcesContent":["import { Button } from 'antd';\nimport React from 'react';\nimport {\n  useTokenAccounts,\n  getSelectedTokenAccountForMint,\n} from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { useSendConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\nimport { useReferrer } from '../../utils/referrer';\n\nexport default function BalancesTable({\n  balances,\n  showMarket,\n  hideWalletBalance,\n  onSettleSuccess,\n}) {\n  const [accounts] = useTokenAccounts();\n  const connection = useSendConnection();\n  const { wallet } = useWallet();\n  const { usdcRef, usdtRef } = useReferrer();\n\n  async function onSettleFunds(market, openOrders) {\n    try {\n      await settleFunds({\n        market,\n        openOrders,\n        connection,\n        wallet,\n        baseCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.baseMintAddress,\n        ),\n        quoteCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.quoteMintAddress,\n        ),\n        usdcRef,\n        usdtRef,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n    onSettleSuccess && onSettleSuccess();\n  }\n\n  const columns = [\n    showMarket\n      ? {\n          title: 'Market',\n          dataIndex: 'marketName',\n          key: 'marketName',\n        }\n      : null,\n    {\n      title: 'Coin',\n      dataIndex: 'coin',\n      key: 'coin',\n    },\n    hideWalletBalance\n      ? null\n      : {\n          title: 'Wallet Balance',\n          dataIndex: 'wallet',\n          key: 'wallet',\n        },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: ({ market, openOrders, marketName }) => (\n        <div style={{ textAlign: 'right' }}>\n          <Button\n            ghost\n            style={{ marginRight: 12 }}\n            onClick={() => onSettleFunds(market, openOrders)}\n          >\n            Settle {marketName}\n          </Button>\n        </div>\n      ),\n    },\n  ].filter((x) => x);\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={balances}\n      columns={columns}\n      pagination={false}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}