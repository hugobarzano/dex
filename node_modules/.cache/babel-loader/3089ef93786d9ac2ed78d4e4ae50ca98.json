{"ast":null,"code":"import _regeneratorRuntime from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _createForOfIteratorHelper from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _asyncToGenerator from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React,{useEffect,useState}from'react';import{AutoComplete,Button,Form,Input,Switch,Tooltip,Typography}from'antd';import{PublicKey}from'@solana/web3.js';import{useConnection}from'../../utils/connection';import FloatingElement from'../../components/layout/FloatingElement';import styled from'styled-components';import{useWallet}from'../../utils/wallet';import{sendSignedTransaction,signTransactions}from'../../utils/send';import{useMintInput}from'../../components/useMintInput';import{PoolTransactions}from'@project-serum/pool';import{useTokenAccounts}from'../../utils/markets';import BN from'bn.js';import{notify}from'../../utils/notifications';import Link from'../../components/Link';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Text=Typography.Text,Title=Typography.Title;var Wrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  max-width: 800px;\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 24px;\\n  margin-bottom: 24px;\\n\"])));var AddRemoveTokenButtons=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin-top: 16px;\\n  margin-bottom: 16px;\\n\"])));var SIMPLE_POOL_PROGRAM_ID='71JS8f7y7ASMbuuSMCVG7a3qDdcVco2qYD6bMJeZqUCm';var ADMIN_CONTROLLED_POOL_PROGRAM_ID='WvmTNLpGMVbwJVYztYL4Hnsy82cJhQorxjnnXcRm3b6';var DEFAULT_PROGRAM_ID=ADMIN_CONTROLLED_POOL_PROGRAM_ID;var PROGRAM_ID_OPTIONS=[{label:\"Simple Pool (\".concat(SIMPLE_POOL_PROGRAM_ID,\")\"),value:SIMPLE_POOL_PROGRAM_ID},{label:\"Admin-Controlled Pool (\".concat(ADMIN_CONTROLLED_POOL_PROGRAM_ID,\")\"),value:ADMIN_CONTROLLED_POOL_PROGRAM_ID}];export default function NewPoolPage(){var connection=useConnection();var _useWallet=useWallet(),wallet=_useWallet.wallet,connected=_useWallet.connected;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),poolName=_useState2[0],setPoolName=_useState2[1];var _useState3=useState(DEFAULT_PROGRAM_ID),_useState4=_slicedToArray(_useState3,2),programId=_useState4[0],setProgramId=_useState4[1];var _useState5=useState('1'),_useState6=_slicedToArray(_useState5,2),initialSupply=_useState6[0],setInitialSupply=_useState6[1];var _useState7=useState([{valid:false},{valid:false}]),_useState8=_slicedToArray(_useState7,2),initialAssets=_useState8[0],setInitialAssets=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),adminControlled=_useState10[0],setAdminControlled=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),adminAddress=_useState12[0],setAdminAddress=_useState12[1];var _useTokenAccounts=useTokenAccounts(),_useTokenAccounts2=_slicedToArray(_useTokenAccounts,1),tokenAccounts=_useTokenAccounts2[0];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),submitting=_useState14[0],setSubmitting=_useState14[1];var _useState15=useState(null),_useState16=_slicedToArray(_useState15,2),newPoolAddress=_useState16[0],setNewPoolAddress=_useState16[1];useEffect(function(){if(programId===SIMPLE_POOL_PROGRAM_ID){setAdminControlled(false);}else if(programId===ADMIN_CONTROLLED_POOL_PROGRAM_ID){setAdminControlled(true);}},[programId]);useEffect(function(){if(connected&&wallet){setAdminAddress(wallet.publicKey.toBase58());}},[wallet,connected]);var canSubmit=connected&&poolName.trim()&&programId&&parseFloat(initialSupply)>0&&initialAssets.every(function(asset){return asset.valid;})&&tokenAccounts&&(adminAddress||!adminControlled);function onSubmit(){return _onSubmit.apply(this,arguments);}function _onSubmit(){_onSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var assets,_yield$PoolTransactio,_yield$PoolTransactio2,poolAddress,transactionsAndSigners,signed,_iterator,_step,signedTransaction;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(!canSubmit||!wallet)){_context.next=2;break;}return _context.abrupt(\"return\");case 2:setSubmitting(true);_context.prev=3;assets=initialAssets;_context.next=7;return PoolTransactions.initializeSimplePool({connection:connection,programId:new PublicKey(programId),poolName:poolName,poolStateSpace:1024,poolMintDecimals:6,initialPoolMintSupply:new BN(Math.round(Math.pow(10,6)*parseFloat(initialSupply))),assetMints:assets.map(function(asset){return asset.mint;}),initialAssetQuantities:assets.map(function(asset){return new BN(asset.quantity);}),creator:wallet.publicKey,creatorAssets:assets.map(function(asset){var found=tokenAccounts===null||tokenAccounts===void 0?void 0:tokenAccounts.find(function(tokenAccount){return tokenAccount.effectiveMint.equals(asset.mint);});if(!found){throw new Error('No token account for '+asset.mint.toBase58());}return found.pubkey;}),additionalAccounts:adminControlled?[{pubkey:new PublicKey(adminAddress),isSigner:false,isWritable:false}]:[]});case 7:_yield$PoolTransactio=_context.sent;_yield$PoolTransactio2=_slicedToArray(_yield$PoolTransactio,2);poolAddress=_yield$PoolTransactio2[0];transactionsAndSigners=_yield$PoolTransactio2[1];_context.next=13;return signTransactions({transactionsAndSigners:transactionsAndSigners,wallet:wallet,connection:connection});case 13:signed=_context.sent;_iterator=_createForOfIteratorHelper(signed);_context.prev=15;_iterator.s();case 17:if((_step=_iterator.n()).done){_context.next=23;break;}signedTransaction=_step.value;_context.next=21;return sendSignedTransaction({signedTransaction:signedTransaction,connection:connection});case 21:_context.next=17;break;case 23:_context.next=28;break;case 25:_context.prev=25;_context.t0=_context[\"catch\"](15);_iterator.e(_context.t0);case 28:_context.prev=28;_iterator.f();return _context.finish(28);case 31:setNewPoolAddress(poolAddress);_context.next=38;break;case 34:_context.prev=34;_context.t1=_context[\"catch\"](3);console.warn(_context.t1);notify({message:'Error creating new pool',description:_context.t1.message,type:'error'});case 38:_context.prev=38;setSubmitting(false);return _context.finish(38);case 41:case\"end\":return _context.stop();}}},_callee,null,[[3,34,38,41],[15,25,28,31]]);}));return _onSubmit.apply(this,arguments);}return/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsxs(FloatingElement,{children:[/*#__PURE__*/_jsx(Title,{level:4,children:\"Create new pool\"}),/*#__PURE__*/_jsxs(Form,{layout:\"vertical\",onFinish:onSubmit,children:[/*#__PURE__*/_jsx(Form.Item,{label:/*#__PURE__*/_jsx(Tooltip,{title:\"Public name of the pool.\",children:\"Pool Name\"}),name:\"name\",children:/*#__PURE__*/_jsx(Input,{value:poolName,onChange:function onChange(e){return setPoolName(e.target.value);}})}),/*#__PURE__*/_jsx(Form.Item,{label:/*#__PURE__*/_jsxs(Tooltip,{title:\"Address of the pool program.\",children:[\"Program ID\",' ',/*#__PURE__*/_jsxs(Text,{type:\"secondary\",children:[\"(e.g. \",DEFAULT_PROGRAM_ID,\")\"]})]}),name:\"programId\",initialValue:DEFAULT_PROGRAM_ID,children:/*#__PURE__*/_jsx(AutoComplete,{value:programId,onChange:function onChange(value){return setProgramId(value);},options:PROGRAM_ID_OPTIONS})}),/*#__PURE__*/_jsx(Form.Item,{label:/*#__PURE__*/_jsx(Tooltip,{title:\"Initial number of pool tokens to mint to your account.\",children:\"Initial Pool Token Supply\"}),name:\"initialSupply\",initialValue:\"1\",children:/*#__PURE__*/_jsx(Input,{value:initialSupply,onChange:function onChange(e){return setInitialSupply(e.target.value.trim());},type:\"number\",min:\"0\",step:\"any\"})}),/*#__PURE__*/_jsxs(AddRemoveTokenButtons,{children:[/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return setInitialAssets(function(assets){return assets.concat({valid:false});});},children:\"Add token\"}),' ',/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return setInitialAssets(function(assets){return assets.slice(0,assets.length-1);});},disabled:initialAssets.length<=1,children:\"Remove token\"})]}),initialAssets.map(function(asset,i){return/*#__PURE__*/_jsx(AssetInput,{setInitialAssets:setInitialAssets,index:i},i);}),/*#__PURE__*/_jsx(Form.Item,{label:/*#__PURE__*/_jsx(Tooltip,{title:\"Whether the assets in the pool can be controlled by the pool admin.\",children:\"Admin Controlled\"}),name:\"adminControlled\",children:/*#__PURE__*/_jsx(Switch,{checked:adminControlled,onChange:function onChange(checked){return setAdminControlled(checked);},disabled:programId===SIMPLE_POOL_PROGRAM_ID||programId===ADMIN_CONTROLLED_POOL_PROGRAM_ID})}),adminControlled?/*#__PURE__*/_jsx(Form.Item,{label:/*#__PURE__*/_jsx(Tooltip,{title:\"Address of the pool admin account.\",children:\"Admin Address\"}),children:/*#__PURE__*/_jsx(Input,{value:adminAddress,onChange:function onChange(e){return setAdminAddress(e.target.value.trim());}})}):null,/*#__PURE__*/_jsx(Form.Item,{label:\" \",colon:false,children:/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",disabled:!canSubmit,loading:submitting,children:connected?'Submit':'Not connected to wallet'})})]})]}),newPoolAddress?/*#__PURE__*/_jsx(FloatingElement,{children:/*#__PURE__*/_jsxs(Text,{children:[\"New pool address:\",' ',/*#__PURE__*/_jsx(Link,{to:\"/pools/\".concat(newPoolAddress.toBase58()),children:newPoolAddress.toBase58()})]})}):null]});}function AssetInput(_ref){var setInitialAssets=_ref.setInitialAssets,index=_ref.index;var _useMintInput=useMintInput(\"mint\".concat(index),/*#__PURE__*/_jsxs(Text,{children:[\"Token \",index+1,\" Mint Address\"]}),/*#__PURE__*/_jsxs(_Fragment,{children:[\"Token mint address for token \",index+1,\".\"]})),_useMintInput2=_slicedToArray(_useMintInput,2),mintInput=_useMintInput2[0],mintInfo=_useMintInput2[1];var _useState17=useState(''),_useState18=_slicedToArray(_useState17,2),quantity=_useState18[0],setQuantity=_useState18[1];useEffect(function(){var change;if(mintInfo&&parseFloat(quantity)>=0){var parsedQuantity=Math.round(Math.pow(10,mintInfo.decimals)*parseFloat(quantity));change={mint:mintInfo.address,quantity:parsedQuantity,valid:true};}else{change={valid:false};}setInitialAssets(function(assets){return assets.map(function(old,i){return i===index?change:old;});});},[setInitialAssets,index,mintInfo,quantity]);return/*#__PURE__*/_jsxs(_Fragment,{children:[mintInput,/*#__PURE__*/_jsx(Form.Item,{label:/*#__PURE__*/_jsxs(Tooltip,{title:/*#__PURE__*/_jsxs(_Fragment,{children:[\"Initial quantity of token \",index+1,\" to deposit into the pool.\"]}),children:[\"Token \",index+1,\" Initial Quantity\"]}),name:\"quantity\".concat(index),validateStatus:'success',children:/*#__PURE__*/_jsx(Input,{value:quantity,onChange:function onChange(e){return setQuantity(e.target.value.trim());},type:\"number\",min:\"0\",step:\"any\"})})]});}","map":{"version":3,"sources":["/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/src/pages/pools/NewPoolPage.tsx"],"names":["React","useEffect","useState","AutoComplete","Button","Form","Input","Switch","Tooltip","Typography","PublicKey","useConnection","FloatingElement","styled","useWallet","sendSignedTransaction","signTransactions","useMintInput","PoolTransactions","useTokenAccounts","BN","notify","Link","Text","Title","Wrapper","div","AddRemoveTokenButtons","SIMPLE_POOL_PROGRAM_ID","ADMIN_CONTROLLED_POOL_PROGRAM_ID","DEFAULT_PROGRAM_ID","PROGRAM_ID_OPTIONS","label","value","NewPoolPage","connection","wallet","connected","poolName","setPoolName","programId","setProgramId","initialSupply","setInitialSupply","valid","initialAssets","setInitialAssets","adminControlled","setAdminControlled","adminAddress","setAdminAddress","tokenAccounts","submitting","setSubmitting","newPoolAddress","setNewPoolAddress","publicKey","toBase58","canSubmit","trim","parseFloat","every","asset","onSubmit","assets","initializeSimplePool","poolStateSpace","poolMintDecimals","initialPoolMintSupply","Math","round","assetMints","map","mint","initialAssetQuantities","quantity","creator","creatorAssets","found","find","tokenAccount","effectiveMint","equals","Error","pubkey","additionalAccounts","isSigner","isWritable","poolAddress","transactionsAndSigners","signed","signedTransaction","console","warn","message","description","type","e","target","concat","slice","length","i","checked","AssetInput","index","mintInput","mintInfo","setQuantity","change","parsedQuantity","decimals","address","old"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  AutoComplete,\n  Button,\n  Form,\n  Input,\n  Switch,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport { PublicKey } from '@solana/web3.js';\nimport { useConnection } from '../../utils/connection';\nimport FloatingElement from '../../components/layout/FloatingElement';\nimport styled from 'styled-components';\nimport { useWallet } from '../../utils/wallet';\nimport { sendSignedTransaction, signTransactions } from '../../utils/send';\nimport { useMintInput } from '../../components/useMintInput';\nimport { PoolTransactions } from '@project-serum/pool';\nimport { useTokenAccounts } from '../../utils/markets';\nimport BN from 'bn.js';\nimport { notify } from '../../utils/notifications';\nimport Link from '../../components/Link';\n\nconst { Text, Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nconst AddRemoveTokenButtons = styled.div`\n  margin-top: 16px;\n  margin-bottom: 16px;\n`;\n\nconst SIMPLE_POOL_PROGRAM_ID = '71JS8f7y7ASMbuuSMCVG7a3qDdcVco2qYD6bMJeZqUCm';\nconst ADMIN_CONTROLLED_POOL_PROGRAM_ID =\n  'WvmTNLpGMVbwJVYztYL4Hnsy82cJhQorxjnnXcRm3b6';\nconst DEFAULT_PROGRAM_ID = ADMIN_CONTROLLED_POOL_PROGRAM_ID;\nconst PROGRAM_ID_OPTIONS = [\n  {\n    label: `Simple Pool (${SIMPLE_POOL_PROGRAM_ID})`,\n    value: SIMPLE_POOL_PROGRAM_ID,\n  },\n  {\n    label: `Admin-Controlled Pool (${ADMIN_CONTROLLED_POOL_PROGRAM_ID})`,\n    value: ADMIN_CONTROLLED_POOL_PROGRAM_ID,\n  },\n];\n\nexport default function NewPoolPage() {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [poolName, setPoolName] = useState('');\n  const [programId, setProgramId] = useState(DEFAULT_PROGRAM_ID);\n  const [initialSupply, setInitialSupply] = useState('1');\n  const [initialAssets, setInitialAssets] = useState<InitialAsset[]>([\n    { valid: false },\n    { valid: false },\n  ]);\n  const [adminControlled, setAdminControlled] = useState(false);\n  const [adminAddress, setAdminAddress] = useState('');\n  const [tokenAccounts] = useTokenAccounts();\n  const [submitting, setSubmitting] = useState(false);\n  const [newPoolAddress, setNewPoolAddress] = useState<PublicKey | null>(null);\n\n  useEffect(() => {\n    if (programId === SIMPLE_POOL_PROGRAM_ID) {\n      setAdminControlled(false);\n    } else if (programId === ADMIN_CONTROLLED_POOL_PROGRAM_ID) {\n      setAdminControlled(true);\n    }\n  }, [programId]);\n\n  useEffect(() => {\n    if (connected && wallet) {\n      setAdminAddress(wallet.publicKey.toBase58());\n    }\n  }, [wallet, connected]);\n\n  const canSubmit =\n    connected &&\n    poolName.trim() &&\n    programId &&\n    parseFloat(initialSupply) > 0 &&\n    initialAssets.every((asset) => asset.valid) &&\n    tokenAccounts &&\n    (adminAddress || !adminControlled);\n\n  async function onSubmit() {\n    if (!canSubmit || !wallet) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const assets = initialAssets as ValidInitialAsset[];\n      const [\n        poolAddress,\n        transactionsAndSigners,\n      ] = await PoolTransactions.initializeSimplePool({\n        connection,\n        programId: new PublicKey(programId),\n        poolName,\n        poolStateSpace: 1024,\n        poolMintDecimals: 6,\n        initialPoolMintSupply: new BN(\n          Math.round(10 ** 6 * parseFloat(initialSupply)),\n        ),\n        assetMints: assets.map((asset) => asset.mint),\n        initialAssetQuantities: assets.map((asset) => new BN(asset.quantity)),\n        creator: wallet.publicKey,\n        creatorAssets: assets.map((asset) => {\n          const found = tokenAccounts?.find((tokenAccount) =>\n            tokenAccount.effectiveMint.equals(asset.mint),\n          );\n          if (!found) {\n            throw new Error('No token account for ' + asset.mint.toBase58());\n          }\n          return found.pubkey;\n        }),\n        additionalAccounts: adminControlled\n          ? [\n              {\n                pubkey: new PublicKey(adminAddress),\n                isSigner: false,\n                isWritable: false,\n              },\n            ]\n          : [],\n      });\n      const signed = await signTransactions({\n        transactionsAndSigners,\n        wallet,\n        connection,\n      });\n      for (let signedTransaction of signed) {\n        await sendSignedTransaction({ signedTransaction, connection });\n      }\n      setNewPoolAddress(poolAddress);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error creating new pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={4}>Create new pool</Title>\n        <Form layout=\"vertical\" onFinish={onSubmit}>\n          <Form.Item\n            label={\n              <Tooltip title=\"Public name of the pool.\">Pool Name</Tooltip>\n            }\n            name=\"name\"\n          >\n            <Input\n              value={poolName}\n              onChange={(e) => setPoolName(e.target.value)}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Address of the pool program.\">\n                Program ID{' '}\n                <Text type=\"secondary\">(e.g. {DEFAULT_PROGRAM_ID})</Text>\n              </Tooltip>\n            }\n            name=\"programId\"\n            initialValue={DEFAULT_PROGRAM_ID}\n          >\n            <AutoComplete\n              value={programId}\n              onChange={(value) => setProgramId(value)}\n              options={PROGRAM_ID_OPTIONS}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Initial number of pool tokens to mint to your account.\">\n                Initial Pool Token Supply\n              </Tooltip>\n            }\n            name=\"initialSupply\"\n            initialValue=\"1\"\n          >\n            <Input\n              value={initialSupply}\n              onChange={(e) => setInitialSupply(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <AddRemoveTokenButtons>\n            <Button\n              onClick={() =>\n                setInitialAssets((assets) => assets.concat({ valid: false }))\n              }\n            >\n              Add token\n            </Button>{' '}\n            <Button\n              onClick={() =>\n                setInitialAssets((assets) => assets.slice(0, assets.length - 1))\n              }\n              disabled={initialAssets.length <= 1}\n            >\n              Remove token\n            </Button>\n          </AddRemoveTokenButtons>\n          {initialAssets.map((asset, i) => (\n            <AssetInput setInitialAssets={setInitialAssets} index={i} key={i} />\n          ))}\n          <Form.Item\n            label={\n              <Tooltip title=\"Whether the assets in the pool can be controlled by the pool admin.\">\n                Admin Controlled\n              </Tooltip>\n            }\n            name=\"adminControlled\"\n          >\n            <Switch\n              checked={adminControlled}\n              onChange={(checked) => setAdminControlled(checked)}\n              disabled={\n                programId === SIMPLE_POOL_PROGRAM_ID ||\n                programId === ADMIN_CONTROLLED_POOL_PROGRAM_ID\n              }\n            />\n          </Form.Item>\n          {adminControlled ? (\n            <Form.Item\n              label={\n                <Tooltip title=\"Address of the pool admin account.\">\n                  Admin Address\n                </Tooltip>\n              }\n            >\n              <Input\n                value={adminAddress}\n                onChange={(e) => setAdminAddress(e.target.value.trim())}\n              />\n            </Form.Item>\n          ) : null}\n          <Form.Item label=\" \" colon={false}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!canSubmit}\n              loading={submitting}\n            >\n              {connected ? 'Submit' : 'Not connected to wallet'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </FloatingElement>\n      {newPoolAddress ? (\n        <FloatingElement>\n          <Text>\n            New pool address:{' '}\n            <Link to={`/pools/${newPoolAddress.toBase58()}`}>\n              {newPoolAddress.toBase58()}\n            </Link>\n          </Text>\n        </FloatingElement>\n      ) : null}\n    </Wrapper>\n  );\n}\n\ntype InitialAsset = { valid: false } | ValidInitialAsset;\ninterface ValidInitialAsset {\n  valid: true;\n  mint: PublicKey;\n  quantity: number;\n}\n\nfunction AssetInput({ setInitialAssets, index }) {\n  const [mintInput, mintInfo] = useMintInput(\n    `mint${index}`,\n    <Text>Token {index + 1} Mint Address</Text>,\n    <>Token mint address for token {index + 1}.</>,\n  );\n  const [quantity, setQuantity] = useState('');\n\n  useEffect(() => {\n    let change: InitialAsset;\n    if (mintInfo && parseFloat(quantity) >= 0) {\n      let parsedQuantity = Math.round(\n        10 ** mintInfo.decimals * parseFloat(quantity),\n      );\n      change = {\n        mint: mintInfo.address,\n        quantity: parsedQuantity,\n        valid: true,\n      };\n    } else {\n      change = { valid: false };\n    }\n    setInitialAssets((assets: InitialAsset[]) =>\n      assets.map((old, i) => (i === index ? change : old)),\n    );\n  }, [setInitialAssets, index, mintInfo, quantity]);\n\n  return (\n    <>\n      {mintInput}\n      <Form.Item\n        label={\n          <Tooltip\n            title={\n              <>\n                Initial quantity of token {index + 1} to deposit into the pool.\n              </>\n            }\n          >\n            Token {index + 1} Initial Quantity\n          </Tooltip>\n        }\n        name={`quantity${index}`}\n        validateStatus={'success'}\n      >\n        <Input\n          value={quantity}\n          onChange={(e) => setQuantity(e.target.value.trim())}\n          type=\"number\"\n          min=\"0\"\n          step=\"any\"\n        />\n      </Form.Item>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}