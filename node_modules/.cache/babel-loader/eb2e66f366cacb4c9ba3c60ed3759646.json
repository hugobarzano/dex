{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _slicedToArray from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _createClass from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _classCallCheck from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import{useEffect,useReducer}from'react';import assert from'assert';var pageLoadTime=new Date();var globalCache=new Map();var FetchLoopListener=function FetchLoopListener(cacheKey,fn,refreshInterval,refreshIntervalOnError,callback,cacheNullValues){_classCallCheck(this,FetchLoopListener);this.cacheKey=void 0;this.fn=void 0;this.refreshInterval=void 0;this.refreshIntervalOnError=void 0;this.callback=void 0;this.cacheNullValues=true;this.cacheKey=cacheKey;this.fn=fn;this.refreshInterval=refreshInterval;this.refreshIntervalOnError=refreshIntervalOnError;this.callback=callback;this.cacheNullValues=cacheNullValues;};var FetchLoopInternal=/*#__PURE__*/function(){function FetchLoopInternal(cacheKey,fn,cacheNullValues){var _this=this;_classCallCheck(this,FetchLoopInternal);this.cacheKey=void 0;this.fn=void 0;this.timeoutId=void 0;this.listeners=void 0;this.errors=void 0;this.cacheNullValues=true;this.refresh=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var errored,data,waitTime,timeSincePageLoad;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(_this.timeoutId){clearTimeout(_this.timeoutId);_this.timeoutId=null;}if(!_this.stopped){_context.next=3;break;}return _context.abrupt(\"return\");case 3:errored=false;_context.prev=4;_context.next=7;return _this.fn();case 7:data=_context.sent;if(!(!_this.cacheNullValues&&data===null)){_context.next=14;break;}console.log(\"Not caching null value for \".concat(_this.cacheKey));// cached data has not changed so no need to re-render\n_this.errors=0;return _context.abrupt(\"return\",data);case 14:globalCache.set(_this.cacheKey,data);_this.errors=0;_this.notifyListeners();return _context.abrupt(\"return\",data);case 18:_context.next=25;break;case 20:_context.prev=20;_context.t0=_context[\"catch\"](4);++_this.errors;console.warn(_context.t0);errored=true;case 25:_context.prev=25;if(!_this.timeoutId&&!_this.stopped){waitTime=_this.refreshInterval;if(errored&&_this.refreshIntervalOnError&&_this.refreshIntervalOnError>0){waitTime=_this.refreshIntervalOnError;}// Back off on errors.\nif(_this.errors>0){waitTime=Math.min(1000*Math.pow(2,_this.errors-1),60000);}// Don't do any refreshing for the first five seconds, to make way for other things to load.\ntimeSincePageLoad=+new Date()-+pageLoadTime;if(timeSincePageLoad<5000){waitTime+=5000-timeSincePageLoad/2;}// Refresh background pages slowly.\nif(document.visibilityState==='hidden'){waitTime=60000;}else if(!document.hasFocus()){waitTime*=1.5;}// Add jitter so we don't send all requests at the same time.\nwaitTime*=0.8+0.4*Math.random();_this.timeoutId=setTimeout(_this.refresh,waitTime);}return _context.finish(25);case 28:case\"end\":return _context.stop();}}},_callee,null,[[4,20,25,28]]);}));this.cacheKey=cacheKey;this.fn=fn;this.timeoutId=null;this.listeners=new Set();this.errors=0;this.cacheNullValues=cacheNullValues;}_createClass(FetchLoopInternal,[{key:\"refreshInterval\",get:function get(){return Math.min.apply(Math,_toConsumableArray(_toConsumableArray(this.listeners).map(function(listener){return listener.refreshInterval;})));}},{key:\"refreshIntervalOnError\",get:function get(){var refreshIntervalsOnError=_toConsumableArray(this.listeners).map(function(listener){return listener.refreshIntervalOnError;}).filter(function(x){return x!==null;});if(refreshIntervalsOnError.length===0){return null;}return Math.min.apply(Math,_toConsumableArray(refreshIntervalsOnError));}},{key:\"stopped\",get:function get(){return this.listeners.size===0;}},{key:\"addListener\",value:function addListener(listener){var previousRefreshInterval=this.refreshInterval;this.listeners.add(listener);if(this.refreshInterval<previousRefreshInterval){this.refresh();}}},{key:\"removeListener\",value:function removeListener(listener){assert(this.listeners.delete(listener));if(this.stopped){if(this.timeoutId){clearTimeout(this.timeoutId);this.timeoutId=null;}}}},{key:\"notifyListeners\",value:function notifyListeners(){this.listeners.forEach(function(listener){return listener.callback();});}}]);return FetchLoopInternal;}();var FetchLoops=/*#__PURE__*/function(){function FetchLoops(){_classCallCheck(this,FetchLoops);this.loops=new Map();}_createClass(FetchLoops,[{key:\"addListener\",value:function addListener(listener){if(!this.loops.has(listener.cacheKey)){this.loops.set(listener.cacheKey,new FetchLoopInternal(listener.cacheKey,listener.fn,listener.cacheNullValues));}this.loops.get(listener.cacheKey).addListener(listener);}},{key:\"removeListener\",value:function removeListener(listener){var loop=this.loops.get(listener.cacheKey);loop.removeListener(listener);if(loop.stopped){this.loops.delete(listener.cacheKey);globalCache.delete(listener.cacheKey);}}},{key:\"refresh\",value:function refresh(cacheKey){if(this.loops.has(cacheKey)){this.loops.get(cacheKey).refresh();}}},{key:\"refreshAll\",value:function refreshAll(){return Promise.all(_toConsumableArray(this.loops.values()).map(function(loop){return loop.refresh();}));}}]);return FetchLoops;}();var globalLoops=new FetchLoops();export function useAsyncData(asyncFn,cacheKey){var _ref2=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{},_ref2$refreshInterval=_ref2.refreshInterval,refreshInterval=_ref2$refreshInterval===void 0?60000:_ref2$refreshInterval,_ref2$refreshInterval2=_ref2.refreshIntervalOnError,refreshIntervalOnError=_ref2$refreshInterval2===void 0?null:_ref2$refreshInterval2;var cacheNullValues=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;var _useReducer=useReducer(function(i){return i+1;},0),_useReducer2=_slicedToArray(_useReducer,2),rerender=_useReducer2[1];useEffect(function(){if(!cacheKey){// eslint-disable-next-line @typescript-eslint/no-empty-function\nreturn function(){};}var listener=new FetchLoopListener(cacheKey,asyncFn,refreshInterval,refreshIntervalOnError,rerender,cacheNullValues);globalLoops.addListener(listener);return function(){return globalLoops.removeListener(listener);};// eslint-disable-next-line react-hooks/exhaustive-deps\n},[cacheKey,refreshInterval]);if(!cacheKey){return[null,false];}var loaded=globalCache.has(cacheKey);var data=loaded?globalCache.get(cacheKey):undefined;return[data,loaded];}export function refreshCache(cacheKey){var clearCache=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(clearCache){globalCache.delete(cacheKey);}var loop=globalLoops.loops.get(cacheKey);if(loop){loop.refresh();if(clearCache){loop.notifyListeners();}}}export function refreshAllCaches(){var _iterator=_createForOfIteratorHelper(globalLoops.loops.values()),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var loop=_step.value;loop.refresh();}}catch(err){_iterator.e(err);}finally{_iterator.f();}}export function setCache(cacheKey,value){var _ref3=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{},_ref3$initializeOnly=_ref3.initializeOnly,initializeOnly=_ref3$initializeOnly===void 0?false:_ref3$initializeOnly;if(initializeOnly&&globalCache.has(cacheKey)){return;}globalCache.set(cacheKey,value);var loop=globalLoops.loops.get(cacheKey);if(loop){loop.notifyListeners();}}export function getCache(cacheKey){return globalCache.get(cacheKey);}","map":{"version":3,"sources":["/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/src/utils/fetch-loop.tsx"],"names":["useEffect","useReducer","assert","pageLoadTime","Date","globalCache","Map","FetchLoopListener","cacheKey","fn","refreshInterval","refreshIntervalOnError","callback","cacheNullValues","FetchLoopInternal","timeoutId","listeners","errors","refresh","clearTimeout","stopped","errored","data","console","log","set","notifyListeners","warn","waitTime","Math","min","timeSincePageLoad","document","visibilityState","hasFocus","random","setTimeout","Set","map","listener","refreshIntervalsOnError","filter","x","length","size","previousRefreshInterval","add","delete","forEach","FetchLoops","loops","has","get","addListener","loop","removeListener","Promise","all","values","globalLoops","useAsyncData","asyncFn","i","rerender","loaded","undefined","refreshCache","clearCache","refreshAllCaches","setCache","value","initializeOnly","getCache"],"mappings":"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","sourcesContent":["import { useEffect, useReducer } from 'react';\n\nimport assert from 'assert';\n\nconst pageLoadTime = new Date();\n\nconst globalCache: Map<any, any> = new Map();\n\nclass FetchLoopListener<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  refreshInterval: number;\n  refreshIntervalOnError: number | null;\n  callback: () => void;\n  cacheNullValues: Boolean = true;\n\n  constructor(\n    cacheKey: any,\n    fn: () => Promise<T>,\n    refreshInterval: number,\n    refreshIntervalOnError: number | null,\n    callback: () => void,\n    cacheNullValues: Boolean,\n  ) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.refreshInterval = refreshInterval;\n    this.refreshIntervalOnError = refreshIntervalOnError;\n    this.callback = callback;\n    this.cacheNullValues = cacheNullValues;\n  }\n}\n\nclass FetchLoopInternal<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  timeoutId: null | any;\n  listeners: Set<FetchLoopListener<T>>;\n  errors: number;\n  cacheNullValues: Boolean = true;\n\n  constructor(cacheKey: any, fn: () => Promise<T>, cacheNullValues: Boolean) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.timeoutId = null;\n    this.listeners = new Set();\n    this.errors = 0;\n    this.cacheNullValues = cacheNullValues;\n  }\n\n  get refreshInterval(): number {\n    return Math.min(\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\n    );\n  }\n\n  get refreshIntervalOnError(): number | null {\n    const refreshIntervalsOnError: number[] = [...this.listeners]\n      .map((listener) => listener.refreshIntervalOnError)\n      .filter((x): x is number => x !== null);\n    if (refreshIntervalsOnError.length === 0) {\n      return null;\n    }\n    return Math.min(...refreshIntervalsOnError);\n  }\n\n  get stopped(): boolean {\n    return this.listeners.size === 0;\n  }\n\n  addListener(listener: FetchLoopListener<T>): void {\n    const previousRefreshInterval = this.refreshInterval;\n    this.listeners.add(listener);\n    if (this.refreshInterval < previousRefreshInterval) {\n      this.refresh();\n    }\n  }\n\n  removeListener(listener: FetchLoopListener<T>): void {\n    assert(this.listeners.delete(listener));\n    if (this.stopped) {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n      }\n    }\n  }\n\n  notifyListeners(): void {\n    this.listeners.forEach((listener) => listener.callback());\n  }\n\n  refresh = async () => {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n    if (this.stopped) {\n      return;\n    }\n\n    let errored = false;\n    try {\n      const data = await this.fn();\n      if (!this.cacheNullValues && data === null) {\n        console.log(`Not caching null value for ${this.cacheKey}`);\n        // cached data has not changed so no need to re-render\n        this.errors = 0;\n        return data;\n      } else {\n        globalCache.set(this.cacheKey, data);\n        this.errors = 0;\n        this.notifyListeners();\n        return data;\n      }\n    } catch (error) {\n      ++this.errors;\n      console.warn(error);\n      errored = true;\n    } finally {\n      if (!this.timeoutId && !this.stopped) {\n        let waitTime = this.refreshInterval;\n        if (\n          errored &&\n          this.refreshIntervalOnError &&\n          this.refreshIntervalOnError > 0\n        ) {\n          waitTime = this.refreshIntervalOnError;\n        }\n\n        // Back off on errors.\n        if (this.errors > 0) {\n          waitTime = Math.min(1000 * 2 ** (this.errors - 1), 60000);\n        }\n\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\n        const timeSincePageLoad = +new Date() - +pageLoadTime;\n        if (timeSincePageLoad < 5000) {\n          waitTime += 5000 - timeSincePageLoad / 2;\n        }\n\n        // Refresh background pages slowly.\n        if (document.visibilityState === 'hidden') {\n          waitTime = 60000;\n        } else if (!document.hasFocus()) {\n          waitTime *= 1.5;\n        }\n\n        // Add jitter so we don't send all requests at the same time.\n        waitTime *= 0.8 + 0.4 * Math.random();\n\n        this.timeoutId = setTimeout(this.refresh, waitTime);\n      }\n    }\n  };\n}\n\nclass FetchLoops {\n  loops = new Map();\n\n  addListener<T>(listener: FetchLoopListener<T>) {\n    if (!this.loops.has(listener.cacheKey)) {\n      this.loops.set(\n        listener.cacheKey,\n        new FetchLoopInternal<T>(\n          listener.cacheKey,\n          listener.fn,\n          listener.cacheNullValues,\n        ),\n      );\n    }\n    this.loops.get(listener.cacheKey).addListener(listener);\n  }\n\n  removeListener<T>(listener: FetchLoopListener<T>) {\n    const loop = this.loops.get(listener.cacheKey);\n    loop.removeListener(listener);\n    if (loop.stopped) {\n      this.loops.delete(listener.cacheKey);\n      globalCache.delete(listener.cacheKey);\n    }\n  }\n\n  refresh(cacheKey) {\n    if (this.loops.has(cacheKey)) {\n      this.loops.get(cacheKey).refresh();\n    }\n  }\n\n  refreshAll() {\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\n  }\n}\nconst globalLoops = new FetchLoops();\n\nexport function useAsyncData<T = any>(\n  asyncFn: () => Promise<T>,\n  cacheKey: any,\n  { refreshInterval = 60000, refreshIntervalOnError = null } = {},\n  cacheNullValues: Boolean = true,\n): [null | undefined | T, boolean] {\n  const [, rerender] = useReducer((i) => i + 1, 0);\n\n  useEffect(() => {\n    if (!cacheKey) {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      return () => {};\n    }\n    const listener = new FetchLoopListener<T>(\n      cacheKey,\n      asyncFn,\n      refreshInterval,\n      refreshIntervalOnError,\n      rerender,\n      cacheNullValues,\n    );\n    globalLoops.addListener(listener);\n    return () => globalLoops.removeListener(listener);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey, refreshInterval]);\n\n  if (!cacheKey) {\n    return [null, false];\n  }\n\n  const loaded = globalCache.has(cacheKey);\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\n  return [data, loaded];\n}\n\nexport function refreshCache(cacheKey: any, clearCache = false): void {\n  if (clearCache) {\n    globalCache.delete(cacheKey);\n  }\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.refresh();\n    if (clearCache) {\n      loop.notifyListeners();\n    }\n  }\n}\n\nexport function refreshAllCaches(): void {\n  for (const loop of globalLoops.loops.values()) {\n    loop.refresh();\n  }\n}\n\nexport function setCache(\n  cacheKey: any,\n  value: any,\n  { initializeOnly = false } = {},\n): void {\n  if (initializeOnly && globalCache.has(cacheKey)) {\n    return;\n  }\n  globalCache.set(cacheKey, value);\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.notifyListeners();\n  }\n}\n\nexport function getCache(\n  cacheKey: any\n) {\n  return globalCache.get(cacheKey);\n}\n"]},"metadata":{},"sourceType":"module"}