{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import React from'react';import{Tabs}from'antd';import{useAllOpenOrdersBalances,useWalletBalancesForAllMarkets}from'../utils/markets';import FloatingElement from'../components/layout/FloatingElement';import WalletBalancesTable from'../components/UserInfoTable/WalletBalancesTable';import{useMintToTickers}from'../utils/tokens';import{jsx as _jsx}from\"react/jsx-runtime\";var TabPane=Tabs.TabPane;export default function BalancesPage(){var walletBalances=useWalletBalancesForAllMarkets();var mintToTickers=useMintToTickers();var openOrdersBalances=useAllOpenOrdersBalances();var data=(walletBalances||[]).map(function(balance){var balances={coin:mintToTickers[balance.mint],mint:balance.mint,walletBalance:balance.balance,openOrdersFree:0,openOrdersTotal:0};var _iterator=_createForOfIteratorHelper(openOrdersBalances[balance.mint]||[]),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var openOrdersAccount=_step.value;balances['openOrdersFree']+=openOrdersAccount.free;balances['openOrdersTotal']+=openOrdersAccount.total;}}catch(err){_iterator.e(err);}finally{_iterator.f();}return balances;});return/*#__PURE__*/_jsx(FloatingElement,{style:{flex:1,paddingTop:10},children:/*#__PURE__*/_jsx(Tabs,{defaultActiveKey:\"walletBalances\",children:/*#__PURE__*/_jsx(TabPane,{tab:\"Wallet Balances\",children:/*#__PURE__*/_jsx(WalletBalancesTable,{walletBalances:data})},\"walletBalances\")})});}","map":{"version":3,"sources":["/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/src/pages/BalancesPage.tsx"],"names":["React","Tabs","useAllOpenOrdersBalances","useWalletBalancesForAllMarkets","FloatingElement","WalletBalancesTable","useMintToTickers","TabPane","BalancesPage","walletBalances","mintToTickers","openOrdersBalances","data","map","balance","balances","coin","mint","walletBalance","openOrdersFree","openOrdersTotal","openOrdersAccount","free","total","flex","paddingTop"],"mappings":"4MAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,MAArB,CACA,OACEC,wBADF,CAEEC,8BAFF,KAGO,kBAHP,CAIA,MAAOC,CAAAA,eAAP,KAA4B,sCAA5B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,iDAAhC,CACA,OAASC,gBAAT,KAAiC,iBAAjC,C,2CAEA,GAAQC,CAAAA,OAAR,CAAoBN,IAApB,CAAQM,OAAR,CAEA,cAAe,SAASC,CAAAA,YAAT,EAAwB,CACrC,GAAMC,CAAAA,cAAc,CAAGN,8BAA8B,EAArD,CACA,GAAMO,CAAAA,aAAa,CAAGJ,gBAAgB,EAAtC,CACA,GAAMK,CAAAA,kBAAkB,CAAGT,wBAAwB,EAAnD,CAEA,GAAMU,CAAAA,IAAI,CAAG,CAACH,cAAc,EAAI,EAAnB,EAAuBI,GAAvB,CAA2B,SAACC,OAAD,CAAa,CACnD,GAAMC,CAAAA,QAAQ,CAAG,CACfC,IAAI,CAAEN,aAAa,CAACI,OAAO,CAACG,IAAT,CADJ,CAEfA,IAAI,CAAEH,OAAO,CAACG,IAFC,CAGfC,aAAa,CAAEJ,OAAO,CAACA,OAHR,CAIfK,cAAc,CAAE,CAJD,CAKfC,eAAe,CAAE,CALF,CAAjB,CADmD,yCAQrBT,kBAAkB,CAACG,OAAO,CAACG,IAAT,CAAlB,EAAoC,EARf,YAQnD,+CAAsE,IAA7DI,CAAAA,iBAA6D,aACpEN,QAAQ,CAAC,gBAAD,CAAR,EAA8BM,iBAAiB,CAACC,IAAhD,CACAP,QAAQ,CAAC,iBAAD,CAAR,EAA+BM,iBAAiB,CAACE,KAAjD,CACD,CAXkD,qDAYnD,MAAOR,CAAAA,QAAP,CACD,CAbY,CAAb,CAeA,mBACE,KAAC,eAAD,EAAiB,KAAK,CAAE,CAAES,IAAI,CAAE,CAAR,CAAWC,UAAU,CAAE,EAAvB,CAAxB,uBACE,KAAC,IAAD,EAAM,gBAAgB,CAAC,gBAAvB,uBACE,KAAC,OAAD,EAAS,GAAG,CAAC,iBAAb,uBACE,KAAC,mBAAD,EAAqB,cAAc,CAAEb,IAArC,EADF,EAAmC,gBAAnC,CADF,EADF,EADF,CASD","sourcesContent":["import React from 'react';\nimport { Tabs } from 'antd';\nimport {\n  useAllOpenOrdersBalances,\n  useWalletBalancesForAllMarkets,\n} from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport WalletBalancesTable from '../components/UserInfoTable/WalletBalancesTable';\nimport { useMintToTickers } from '../utils/tokens';\n\nconst { TabPane } = Tabs;\n\nexport default function BalancesPage() {\n  const walletBalances = useWalletBalancesForAllMarkets();\n  const mintToTickers = useMintToTickers();\n  const openOrdersBalances = useAllOpenOrdersBalances();\n\n  const data = (walletBalances || []).map((balance) => {\n    const balances = {\n      coin: mintToTickers[balance.mint],\n      mint: balance.mint,\n      walletBalance: balance.balance,\n      openOrdersFree: 0,\n      openOrdersTotal: 0,\n    };\n    for (let openOrdersAccount of openOrdersBalances[balance.mint] || []) {\n      balances['openOrdersFree'] += openOrdersAccount.free;\n      balances['openOrdersTotal'] += openOrdersAccount.total;\n    }\n    return balances;\n  });\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Tabs defaultActiveKey=\"walletBalances\">\n        <TabPane tab=\"Wallet Balances\" key=\"walletBalances\">\n          <WalletBalancesTable walletBalances={data} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}