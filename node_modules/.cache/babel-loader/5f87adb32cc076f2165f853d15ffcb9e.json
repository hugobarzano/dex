{"ast":null,"code":"import _regeneratorRuntime from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/fork/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/fork/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/fork/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/fork/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useState}from'react';import{Button,Form,Input,Tooltip,Typography}from'antd';import{notify}from'../utils/notifications';import{MARKETS}from'@project-serum/serum';import{useConnection}from'../utils/connection';import FloatingElement from'../components/layout/FloatingElement';import styled from'styled-components';import{useWallet}from'../utils/wallet';import{listMarket}from'../utils/send';import{useMintInput}from'../components/useMintInput';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Text=Typography.Text,Title=Typography.Title;var Wrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  max-width: 800px;\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 24px;\\n  margin-bottom: 24px;\\n\"])));export default function ListNewMarketPage(){var connection=useConnection();var _useWallet=useWallet(),wallet=_useWallet.wallet,connected=_useWallet.connected;var _useMintInput=useMintInput('baseMint',/*#__PURE__*/_jsxs(Text,{children:[\"Base Token Mint Address\",' ',/*#__PURE__*/_jsxs(Text,{type:\"secondary\",children:[\"(e.g. BTC solana address:\",' ',/*#__PURE__*/_jsx(Text,{type:\"secondary\",code:true,children:\"9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E\"}),\")\"]})]}),'The base token is the token being traded. For example, the base token of a BTC/USDT market is BTC.'),_useMintInput2=_slicedToArray(_useMintInput,2),baseMintInput=_useMintInput2[0],baseMintInfo=_useMintInput2[1];var _useMintInput3=useMintInput('quoteMint',/*#__PURE__*/_jsxs(Text,{children:[\"Quote Token Mint Address\",' ',/*#__PURE__*/_jsxs(Text,{type:\"secondary\",children:[\"(e.g. USDT solana address:\",' ',/*#__PURE__*/_jsx(Text,{type:\"secondary\",code:true,children:\"BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4\"}),\")\"]})]}),'The quote token is the token used to price trades. For example, the quote token of a BTC/USDT market is USDT.'),_useMintInput4=_slicedToArray(_useMintInput3,2),quoteMintInput=_useMintInput4[0],quoteMintInfo=_useMintInput4[1];var _useState=useState('1'),_useState2=_slicedToArray(_useState,2),lotSize=_useState2[0],setLotSize=_useState2[1];var _useState3=useState('0.01'),_useState4=_slicedToArray(_useState3,2),tickSize=_useState4[0],setTickSize=_useState4[1];var dexProgramId=MARKETS.find(function(_ref){var deprecated=_ref.deprecated;return!deprecated;}).programId;var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),submitting=_useState6[0],setSubmitting=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),listedMarket=_useState8[0],setListedMarket=_useState8[1];var baseLotSize;var quoteLotSize;if(baseMintInfo&&parseFloat(lotSize)>0){baseLotSize=Math.round(Math.pow(10,baseMintInfo.decimals)*parseFloat(lotSize));if(quoteMintInfo&&parseFloat(tickSize)>0){quoteLotSize=Math.round(parseFloat(lotSize)*Math.pow(10,quoteMintInfo.decimals)*parseFloat(tickSize));}}var canSubmit=connected&&!!baseMintInfo&&!!quoteMintInfo&&!!baseLotSize&&!!quoteLotSize;function onSubmit(){return _onSubmit.apply(this,arguments);}function _onSubmit(){_onSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var marketAddress;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(canSubmit){_context.next=2;break;}return _context.abrupt(\"return\");case 2:setSubmitting(true);_context.prev=3;_context.next=6;return listMarket({connection:connection,wallet:wallet,baseMint:baseMintInfo.address,quoteMint:quoteMintInfo.address,baseLotSize:baseLotSize,quoteLotSize:quoteLotSize,dexProgramId:dexProgramId});case 6:marketAddress=_context.sent;setListedMarket(marketAddress);_context.next=14;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](3);console.warn(_context.t0);notify({message:'Error listing new market',description:_context.t0.message,type:'error'});case 14:_context.prev=14;setSubmitting(false);return _context.finish(14);case 17:case\"end\":return _context.stop();}}},_callee,null,[[3,10,14,17]]);}));return _onSubmit.apply(this,arguments);}return/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsxs(FloatingElement,{children:[/*#__PURE__*/_jsx(Title,{level:4,children:\"List New Market\"}),/*#__PURE__*/_jsxs(Form,{labelCol:{span:24},wrapperCol:{span:24},layout:'vertical',onFinish:onSubmit,children:[baseMintInput,quoteMintInput,/*#__PURE__*/_jsx(Form.Item,{label:/*#__PURE__*/_jsxs(Tooltip,{title:\"Smallest allowed order size. For a BTC/USDT market, this would be in units of BTC.\",children:[\"Minimum Order Size\",' ',/*#__PURE__*/_jsx(Text,{type:\"secondary\",children:\"(Lot size in e.g. BTC)\"})]}),name:\"lotSize\",initialValue:\"1\",validateStatus:baseMintInfo&&quoteMintInfo?baseLotSize?'success':'error':null,hasFeedback:baseMintInfo&&quoteMintInfo,children:/*#__PURE__*/_jsx(Input,{value:lotSize,onChange:function onChange(e){return setLotSize(e.target.value.trim());},type:\"number\",min:\"0\",step:\"any\"})}),/*#__PURE__*/_jsx(Form.Item,{label:/*#__PURE__*/_jsxs(Tooltip,{title:\"Smallest amount by which prices can move. For a BTC/USDT market, this would be in units of USDT.\",children:[\"Tick Size\",' ',/*#__PURE__*/_jsx(Text,{type:\"secondary\",children:\"(Price increment in e.g. USDT)\"})]}),name:\"tickSize\",initialValue:\"0.01\",validateStatus:baseMintInfo&&quoteMintInfo?quoteLotSize?'success':'error':null,hasFeedback:baseMintInfo&&quoteMintInfo,children:/*#__PURE__*/_jsx(Input,{value:tickSize,onChange:function onChange(e){return setTickSize(e.target.value.trim());},type:\"number\",min:\"0\",step:\"any\"})}),/*#__PURE__*/_jsx(Form.Item,{label:\" \",colon:false,children:/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",disabled:!canSubmit,loading:submitting,children:connected?'Submit':'Not connected to wallet'})})]})]}),listedMarket?/*#__PURE__*/_jsx(FloatingElement,{children:/*#__PURE__*/_jsxs(Text,{children:[\"New market address: \",listedMarket.toBase58()]})}):null]});}","map":{"version":3,"sources":["/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/fork/serum-dex-ui/src/pages/ListNewMarketPage.jsx"],"names":["React","useState","Button","Form","Input","Tooltip","Typography","notify","MARKETS","useConnection","FloatingElement","styled","useWallet","listMarket","useMintInput","Text","Title","Wrapper","div","ListNewMarketPage","connection","wallet","connected","baseMintInput","baseMintInfo","quoteMintInput","quoteMintInfo","lotSize","setLotSize","tickSize","setTickSize","dexProgramId","find","deprecated","programId","submitting","setSubmitting","listedMarket","setListedMarket","baseLotSize","quoteLotSize","parseFloat","Math","round","decimals","canSubmit","onSubmit","baseMint","address","quoteMint","marketAddress","console","warn","message","description","type","span","e","target","value","trim","toBase58"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Form, Input, Tooltip, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { MARKETS } from '@project-serum/serum';\nimport { useConnection } from '../utils/connection';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport styled from 'styled-components';\nimport { useWallet } from '../utils/wallet';\nimport { listMarket } from '../utils/send';\nimport { useMintInput } from '../components/useMintInput';\n\nconst { Text, Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nexport default function ListNewMarketPage() {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [baseMintInput, baseMintInfo] = useMintInput(\n    'baseMint',\n    <Text>\n      Base Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. BTC solana address:{' '}\n        {\n          <Text type=\"secondary\" code>\n            9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E\n          </Text>\n        }\n        )\n      </Text>\n    </Text>,\n    'The base token is the token being traded. For example, the base token of a BTC/USDT market is BTC.',\n  );\n  const [quoteMintInput, quoteMintInfo] = useMintInput(\n    'quoteMint',\n    <Text>\n      Quote Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. USDT solana address:{' '}\n        {\n          <Text type=\"secondary\" code>\n            BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4\n          </Text>\n        }\n        )\n      </Text>\n    </Text>,\n    'The quote token is the token used to price trades. For example, the quote token of a BTC/USDT market is USDT.',\n  );\n  const [lotSize, setLotSize] = useState('1');\n  const [tickSize, setTickSize] = useState('0.01');\n  const dexProgramId = MARKETS.find(({ deprecated }) => !deprecated).programId;\n  const [submitting, setSubmitting] = useState(false);\n\n  const [listedMarket, setListedMarket] = useState(null);\n\n  let baseLotSize;\n  let quoteLotSize;\n  if (baseMintInfo && parseFloat(lotSize) > 0) {\n    baseLotSize = Math.round(10 ** baseMintInfo.decimals * parseFloat(lotSize));\n    if (quoteMintInfo && parseFloat(tickSize) > 0) {\n      quoteLotSize = Math.round(\n        parseFloat(lotSize) *\n          10 ** quoteMintInfo.decimals *\n          parseFloat(tickSize),\n      );\n    }\n  }\n\n  const canSubmit =\n    connected &&\n    !!baseMintInfo &&\n    !!quoteMintInfo &&\n    !!baseLotSize &&\n    !!quoteLotSize;\n\n  async function onSubmit() {\n    if (!canSubmit) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const marketAddress = await listMarket({\n        connection,\n        wallet,\n        baseMint: baseMintInfo.address,\n        quoteMint: quoteMintInfo.address,\n        baseLotSize,\n        quoteLotSize,\n        dexProgramId,\n      });\n      setListedMarket(marketAddress);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error listing new market',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={4}>List New Market</Title>\n        <Form\n          labelCol={{ span: 24 }}\n          wrapperCol={{ span: 24 }}\n          layout={'vertical'}\n          onFinish={onSubmit}\n        >\n          {baseMintInput}\n          {quoteMintInput}\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest allowed order size. For a BTC/USDT market, this would be in units of BTC.\">\n                Minimum Order Size{' '}\n                <Text type=\"secondary\">(Lot size in e.g. BTC)</Text>\n              </Tooltip>\n            }\n            name=\"lotSize\"\n            initialValue=\"1\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? baseLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={lotSize}\n              onChange={(e) => setLotSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest amount by which prices can move. For a BTC/USDT market, this would be in units of USDT.\">\n                Tick Size{' '}\n                <Text type=\"secondary\">(Price increment in e.g. USDT)</Text>\n              </Tooltip>\n            }\n            name=\"tickSize\"\n            initialValue=\"0.01\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? quoteLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={tickSize}\n              onChange={(e) => setTickSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item label=\" \" colon={false}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!canSubmit}\n              loading={submitting}\n            >\n              {connected ? 'Submit' : 'Not connected to wallet'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </FloatingElement>\n      {listedMarket ? (\n        <FloatingElement>\n          <Text>New market address: {listedMarket.toBase58()}</Text>\n        </FloatingElement>\n      ) : null}\n    </Wrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}