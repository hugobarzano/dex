{"ast":null,"code":"import React from'react';import{Modal}from'antd';import{useSelectedBaseCurrencyAccount,useMarket,useSelectedQuoteCurrencyAccount}from'../utils/markets';import{useWallet}from'../utils/wallet';import Link from'./Link';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function DepositDialog(_ref){var onClose=_ref.onClose,baseOrQuote=_ref.baseOrQuote;var _useMarket=useMarket(),market=_useMarket.market,baseCurrency=_useMarket.baseCurrency,quoteCurrency=_useMarket.quoteCurrency;var _useWallet=useWallet(),providerName=_useWallet.providerName,providerUrl=_useWallet.providerUrl;var baseCurrencyAccount=useSelectedBaseCurrencyAccount();var quoteCurrencyAccount=useSelectedQuoteCurrencyAccount();var coinMint;var account;var depositCoin;if(baseOrQuote==='base'){coinMint=market===null||market===void 0?void 0:market.baseMintAddress;account=baseCurrencyAccount;depositCoin=baseCurrency;}else if(baseOrQuote==='quote'){coinMint=market===null||market===void 0?void 0:market.quoteMintAddress;account=quoteCurrencyAccount;depositCoin=quoteCurrency;}else{account=null;}if(!coinMint){return null;}return/*#__PURE__*/_jsx(Modal,{title:depositCoin,visible:!!coinMint,onOk:onClose,onCancel:onClose,children:/*#__PURE__*/_jsxs(\"div\",{style:{paddingTop:'20px'},children:[/*#__PURE__*/_jsx(\"p\",{style:{color:'white'},children:\"Mint address:\"}),/*#__PURE__*/_jsx(\"p\",{style:{color:'rgba(255,255,255,0.5)'},children:coinMint.toBase58()}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{style:{color:'white'},children:\"SPL Deposit address:\"}),/*#__PURE__*/_jsx(\"p\",{style:{color:'rgba(255,255,255,0.5)'},children:account?account.pubkey.toBase58():/*#__PURE__*/_jsxs(_Fragment,{children:[\"Visit\",' ',/*#__PURE__*/_jsx(Link,{external:true,to:providerUrl,children:providerName}),' ',\"to create an account for this mint\"]})})]})]})});}","map":{"version":3,"sources":["/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/src/components/DepositDialog.jsx"],"names":["React","Modal","useSelectedBaseCurrencyAccount","useMarket","useSelectedQuoteCurrencyAccount","useWallet","Link","DepositDialog","onClose","baseOrQuote","market","baseCurrency","quoteCurrency","providerName","providerUrl","baseCurrencyAccount","quoteCurrencyAccount","coinMint","account","depositCoin","baseMintAddress","quoteMintAddress","paddingTop","color","toBase58","pubkey"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,KAAsB,MAAtB,CACA,OACEC,8BADF,CAEEC,SAFF,CAGEC,+BAHF,KAIO,kBAJP,CAKA,OAASC,SAAT,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,C,6IAEA,cAAe,SAASC,CAAAA,aAAT,MAAiD,IAAxBC,CAAAA,OAAwB,MAAxBA,OAAwB,CAAfC,WAAe,MAAfA,WAAe,CAC9D,eAAgDN,SAAS,EAAzD,CAAQO,MAAR,YAAQA,MAAR,CAAgBC,YAAhB,YAAgBA,YAAhB,CAA8BC,aAA9B,YAA8BA,aAA9B,CAEA,eAAsCP,SAAS,EAA/C,CAAQQ,YAAR,YAAQA,YAAR,CAAsBC,WAAtB,YAAsBA,WAAtB,CACA,GAAMC,CAAAA,mBAAmB,CAAGb,8BAA8B,EAA1D,CACA,GAAMc,CAAAA,oBAAoB,CAAGZ,+BAA+B,EAA5D,CACA,GAAIa,CAAAA,QAAJ,CACA,GAAIC,CAAAA,OAAJ,CACA,GAAIC,CAAAA,WAAJ,CACA,GAAIV,WAAW,GAAK,MAApB,CAA4B,CAC1BQ,QAAQ,CAAGP,MAAH,SAAGA,MAAH,iBAAGA,MAAM,CAAEU,eAAnB,CACAF,OAAO,CAAGH,mBAAV,CACAI,WAAW,CAAGR,YAAd,CACD,CAJD,IAIO,IAAIF,WAAW,GAAK,OAApB,CAA6B,CAClCQ,QAAQ,CAAGP,MAAH,SAAGA,MAAH,iBAAGA,MAAM,CAAEW,gBAAnB,CACAH,OAAO,CAAGF,oBAAV,CACAG,WAAW,CAAGP,aAAd,CACD,CAJM,IAIA,CACLM,OAAO,CAAG,IAAV,CACD,CACD,GAAI,CAACD,QAAL,CAAe,CACb,MAAO,KAAP,CACD,CACD,mBACE,KAAC,KAAD,EACE,KAAK,CAAEE,WADT,CAEE,OAAO,CAAE,CAAC,CAACF,QAFb,CAGE,IAAI,CAAET,OAHR,CAIE,QAAQ,CAAEA,OAJZ,uBAME,aAAK,KAAK,CAAE,CAAEc,UAAU,CAAE,MAAd,CAAZ,wBACE,UAAG,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAT,CAAV,2BADF,cAEE,UAAG,KAAK,CAAE,CAAEA,KAAK,CAAE,uBAAT,CAAV,UAA+CN,QAAQ,CAACO,QAAT,EAA/C,EAFF,cAGE,oCACE,UAAG,KAAK,CAAE,CAAED,KAAK,CAAE,OAAT,CAAV,kCADF,cAEE,UAAG,KAAK,CAAE,CAAEA,KAAK,CAAE,uBAAT,CAAV,UACGL,OAAO,CACNA,OAAO,CAACO,MAAR,CAAeD,QAAf,EADM,cAGN,mCACQ,GADR,cAEE,KAAC,IAAD,EAAM,QAAQ,KAAd,CAAe,EAAE,CAAEV,WAAnB,UACGD,YADH,EAFF,CAIU,GAJV,wCAJJ,EAFF,GAHF,GANF,EADF,CA6BD","sourcesContent":["import React from 'react';\nimport { Modal } from 'antd';\nimport {\n  useSelectedBaseCurrencyAccount,\n  useMarket,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\n\nexport default function DepositDialog({ onClose, baseOrQuote }) {\n  const { market, baseCurrency, quoteCurrency } = useMarket();\n\n  const { providerName, providerUrl } = useWallet();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  let coinMint;\n  let account;\n  let depositCoin;\n  if (baseOrQuote === 'base') {\n    coinMint = market?.baseMintAddress;\n    account = baseCurrencyAccount;\n    depositCoin = baseCurrency;\n  } else if (baseOrQuote === 'quote') {\n    coinMint = market?.quoteMintAddress;\n    account = quoteCurrencyAccount;\n    depositCoin = quoteCurrency;\n  } else {\n    account = null;\n  }\n  if (!coinMint) {\n    return null;\n  }\n  return (\n    <Modal\n      title={depositCoin}\n      visible={!!coinMint}\n      onOk={onClose}\n      onCancel={onClose}\n    >\n      <div style={{ paddingTop: '20px' }}>\n        <p style={{ color: 'white' }}>Mint address:</p>\n        <p style={{ color: 'rgba(255,255,255,0.5)' }}>{coinMint.toBase58()}</p>\n        <div>\n          <p style={{ color: 'white' }}>SPL Deposit address:</p>\n          <p style={{ color: 'rgba(255,255,255,0.5)' }}>\n            {account ? (\n              account.pubkey.toBase58()\n            ) : (\n              <>\n                Visit{' '}\n                <Link external to={providerUrl}>\n                  {providerName}\n                </Link>{' '}\n                to create an account for this mint\n              </>\n            )}\n          </p>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}