{"ast":null,"code":"var _jsxFileName = \"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/src/components/AppSearch.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Select, Typography } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { TOKEN_MINTS } from '@project-serum/serum';\nimport apps from '@project-serum/awesome-serum';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst appsAndTokens = apps.concat(TOKEN_MINTS.map(mint => {\n  return {\n    name: `${mint.name} SPL`,\n    url: `https://solscan.io/address/${mint.address.toBase58()}`,\n    description: `${mint.name} SPL token`,\n    icon: '',\n    tags: ['token', 'blockchain', 'solana', 'spl', 'solana', mint.address.toBase58()]\n  };\n}));\nexport default function AppSearch(props) {\n  _s();\n\n  const [searchMatches, setSearchMatches] = useState([]);\n  const [searchValue, setSearchValue] = useState(undefined);\n\n  const matchApp = (searchString, app) => {\n    const lowerSearchStr = searchString.toLowerCase();\n    return app.name.toLowerCase().includes(lowerSearchStr) || app.tags.some(tag => tag.toLowerCase().includes(lowerSearchStr) || lowerSearchStr.includes(tag.toLowerCase()));\n  };\n\n  const handleSearch = value => {\n    setSearchValue(value === '' ? undefined : value);\n    const filteredApps = appsAndTokens.filter(app => matchApp(value, app));\n    setSearchMatches(filteredApps);\n  };\n\n  const handleSelect = (value, option) => {\n    window.open(option.href, '_blank');\n    handleClear();\n  };\n\n  const handleClear = () => {\n    setSearchMatches([]);\n    setSearchValue(undefined);\n  };\n\n  const options = searchMatches.map(d => /*#__PURE__*/_jsxDEV(Option, {\n    value: d.name,\n    href: d.url,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: d.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography.Text, {\n      type: \"secondary\",\n      children: d.url.replace('https://', '')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, d.name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this));\n  const ref = useRef();\n  return /*#__PURE__*/_jsxDEV(Select, {\n    ref: ref,\n    showSearch: true,\n    allowClear: true,\n    value: searchValue,\n    placeholder: props.focussed || props.focussed === undefined ? 'Search for dex, swap, wallet, token...' : '',\n    onSearch: handleSearch,\n    onClear: handleClear,\n    onSelect: handleSelect,\n    onFocus: props.onFocus,\n    onBlur: () => {\n      props.onBlur();\n      handleClear();\n    },\n    notFoundContent: null // todo: make this search history\n    ,\n    style: {\n      width: props.width || '300px',\n      transition: props.focussed ? 'width 0.1s ease 0.1s' : ''\n    },\n    dropdownStyle: {\n      width: props.width || '300px'\n    },\n    dropdownMatchSelectWidth: false,\n    suffixIcon: /*#__PURE__*/_jsxDEV(SearchOutlined, {\n      onClick: () => ref.current && ref.current.focus()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this),\n    filterOption: false,\n    children: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AppSearch, \"3qsnCXbvW+SAFnaTIU+QzBlIpMA=\");\n\n_c = AppSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppSearch\");","map":{"version":3,"sources":["/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/src/components/AppSearch.tsx"],"names":["React","useRef","useState","Select","Typography","SearchOutlined","TOKEN_MINTS","apps","Option","appsAndTokens","concat","map","mint","name","url","address","toBase58","description","icon","tags","AppSearch","props","searchMatches","setSearchMatches","searchValue","setSearchValue","undefined","matchApp","searchString","app","lowerSearchStr","toLowerCase","includes","some","tag","handleSearch","value","filteredApps","filter","handleSelect","option","window","open","href","handleClear","options","d","replace","ref","focussed","onFocus","onBlur","width","transition","current","focus"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { Select, Typography } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { TOKEN_MINTS } from '@project-serum/serum';\nimport apps from '@project-serum/awesome-serum';\n\nconst { Option } = Select;\n\nconst appsAndTokens = apps.concat(\n  TOKEN_MINTS.map((mint) => {\n    return {\n      name: `${mint.name} SPL`,\n      url: `https://solscan.io/address/${mint.address.toBase58()}`,\n      description: `${mint.name} SPL token`,\n      icon: '',\n      tags: [\n        'token',\n        'blockchain',\n        'solana',\n        'spl',\n        'solana',\n        mint.address.toBase58(),\n      ],\n    };\n  }),\n);\n\ninterface App {\n  name: string;\n  url: string;\n  description: string;\n  tags: string[];\n}\n\nexport default function AppSearch(props) {\n  const [searchMatches, setSearchMatches] = useState<App[]>([]);\n  const [searchValue, setSearchValue] = useState<string | undefined>(undefined);\n\n  const matchApp = (searchString: string, app: App) => {\n    const lowerSearchStr = searchString.toLowerCase();\n    return (\n      app.name.toLowerCase().includes(lowerSearchStr) ||\n      app.tags.some(\n        (tag) =>\n          tag.toLowerCase().includes(lowerSearchStr) ||\n          lowerSearchStr.includes(tag.toLowerCase()),\n      )\n    );\n  };\n\n  const handleSearch = (value) => {\n    setSearchValue(value === '' ? undefined : value);\n    const filteredApps = appsAndTokens.filter((app) => matchApp(value, app));\n    setSearchMatches(filteredApps);\n  };\n\n  const handleSelect = (value, option) => {\n    window.open(option.href, '_blank');\n    handleClear();\n  };\n\n  const handleClear = () => {\n    setSearchMatches([]);\n    setSearchValue(undefined);\n  };\n\n  const options = searchMatches.map((d) => (\n    <Option key={d.name} value={d.name} href={d.url}>\n      <h3>{d.name}</h3>\n      <Typography.Text type=\"secondary\">\n        {d.url.replace('https://', '')}\n      </Typography.Text>\n    </Option>\n  ));\n\n  const ref = useRef<any>();\n  return (\n    <Select\n      ref={ref}\n      showSearch\n      allowClear\n      value={searchValue}\n      placeholder={\n        props.focussed || props.focussed === undefined\n          ? 'Search for dex, swap, wallet, token...'\n          : ''\n      }\n      onSearch={handleSearch}\n      onClear={handleClear}\n      onSelect={handleSelect}\n      onFocus={props.onFocus}\n      onBlur={() => {\n        props.onBlur();\n        handleClear();\n      }}\n      notFoundContent={null} // todo: make this search history\n      style={{\n        width: props.width || '300px',\n        transition: props.focussed ? 'width 0.1s ease 0.1s' : '',\n      }}\n      dropdownStyle={{\n        width: props.width || '300px',\n      }}\n      dropdownMatchSelectWidth={false}\n      suffixIcon={\n        <SearchOutlined onClick={() => ref.current && ref.current.focus()} />\n      }\n      filterOption={false}\n    >\n      {options}\n    </Select>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}