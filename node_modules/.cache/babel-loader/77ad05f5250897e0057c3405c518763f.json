{"ast":null,"code":"import _objectSpread from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import FloatingElement from'../components/layout/FloatingElement';import{useAllMarkets,useAllOpenOrders,useMarketInfos}from'../utils/markets';import OpenOrderTable from'../components/UserInfoTable/OpenOrderTable';import{Button,Row}from'antd';import{useWallet}from'../utils/wallet';import WalletConnect from'../components/WalletConnect';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function OpenOrdersPage(){var _useWallet=useWallet(),connected=_useWallet.connected;var _useAllOpenOrders=useAllOpenOrders(),openOrders=_useAllOpenOrders.openOrders,loaded=_useAllOpenOrders.loaded,refreshOpenOrders=_useAllOpenOrders.refreshOpenOrders;var marketInfos=useMarketInfos();var marketAddressesToNames=Object.fromEntries(marketInfos.map(function(info){return[info.address.toBase58(),info.name];}));var _useAllMarkets=useAllMarkets(),_useAllMarkets2=_slicedToArray(_useAllMarkets,1),allMarkets=_useAllMarkets2[0];var marketsByAddress=Object.fromEntries((allMarkets||[]).map(function(marketInfo){return[marketInfo.market.address.toBase58(),marketInfo.market];}));var dataSource=(openOrders||[]).map(function(orderInfos){return orderInfos.orders.map(function(order){return _objectSpread({marketName:marketAddressesToNames[orderInfos.marketAddress],market:marketsByAddress[orderInfos.marketAddress]},order);});}).flat();if(!connected){return/*#__PURE__*/_jsx(Row,{justify:\"center\",style:{marginTop:'10%'},children:/*#__PURE__*/_jsx(WalletConnect,{})});}return/*#__PURE__*/_jsxs(FloatingElement,{style:{flex:1,paddingTop:10},children:[/*#__PURE__*/_jsx(Button,{onClick:refreshOpenOrders,loading:!loaded,children:\"Refresh\"}),/*#__PURE__*/_jsx(OpenOrderTable,{openOrders:dataSource,pageSize:25,loading:!loaded,onCancelSuccess:refreshOpenOrders,marketFilter:true})]});}","map":{"version":3,"sources":["/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/src/pages/OpenOrdersPage.tsx"],"names":["React","FloatingElement","useAllMarkets","useAllOpenOrders","useMarketInfos","OpenOrderTable","Button","Row","useWallet","WalletConnect","OpenOrdersPage","connected","openOrders","loaded","refreshOpenOrders","marketInfos","marketAddressesToNames","Object","fromEntries","map","info","address","toBase58","name","allMarkets","marketsByAddress","marketInfo","market","dataSource","orderInfos","orders","order","marketName","marketAddress","flat","marginTop","flex","paddingTop"],"mappings":"uWAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,eAAP,KAA4B,sCAA5B,CACA,OACEC,aADF,CAEEC,gBAFF,CAGEC,cAHF,KAIO,kBAJP,CAKA,MAAOC,CAAAA,cAAP,KAA2B,4CAA3B,CACA,OAASC,MAAT,CAAiBC,GAAjB,KAA4B,MAA5B,CAEA,OAASC,SAAT,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,C,wFAEA,cAAe,SAASC,CAAAA,cAAT,EAA0B,CACvC,eAAsBF,SAAS,EAA/B,CAAQG,SAAR,YAAQA,SAAR,CACA,sBAAkDR,gBAAgB,EAAlE,CAAQS,UAAR,mBAAQA,UAAR,CAAoBC,MAApB,mBAAoBA,MAApB,CAA4BC,iBAA5B,mBAA4BA,iBAA5B,CACA,GAAIC,CAAAA,WAAW,CAAGX,cAAc,EAAhC,CACA,GAAIY,CAAAA,sBAAsB,CAAGC,MAAM,CAACC,WAAP,CAC3BH,WAAW,CAACI,GAAZ,CAAgB,SAACC,IAAD,QAAU,CAACA,IAAI,CAACC,OAAL,CAAaC,QAAb,EAAD,CAA0BF,IAAI,CAACG,IAA/B,CAAV,EAAhB,CAD2B,CAA7B,CAGA,mBAAmBrB,aAAa,EAAhC,kDAAKsB,UAAL,oBACA,GAAMC,CAAAA,gBAAgB,CAAGR,MAAM,CAACC,WAAP,CACvB,CAACM,UAAU,EAAI,EAAf,EAAmBL,GAAnB,CAAuB,SAACO,UAAD,QAAgB,CACrCA,UAAU,CAACC,MAAX,CAAkBN,OAAlB,CAA0BC,QAA1B,EADqC,CAErCI,UAAU,CAACC,MAF0B,CAAhB,EAAvB,CADuB,CAAzB,CAOA,GAAMC,CAAAA,UAA0C,CAAG,CAAChB,UAAU,EAAI,EAAf,EAChDO,GADgD,CAC5C,SAACU,UAAD,QACHA,CAAAA,UAAU,CAACC,MAAX,CAAkBX,GAAlB,CAAsB,SAACY,KAAD,CAAW,CAC/B,sBACEC,UAAU,CAAEhB,sBAAsB,CAACa,UAAU,CAACI,aAAZ,CADpC,CAEEN,MAAM,CAAEF,gBAAgB,CAACI,UAAU,CAACI,aAAZ,CAF1B,EAGKF,KAHL,EAKD,CAND,CADG,EAD4C,EAUhDG,IAVgD,EAAnD,CAYA,GAAI,CAACvB,SAAL,CAAgB,CACd,mBACE,KAAC,GAAD,EACE,OAAO,CAAC,QADV,CAEE,KAAK,CAAE,CACLwB,SAAS,CAAE,KADN,CAFT,uBAME,KAAC,aAAD,IANF,EADF,CAUD,CAED,mBACE,MAAC,eAAD,EAAiB,KAAK,CAAE,CAAEC,IAAI,CAAE,CAAR,CAAWC,UAAU,CAAE,EAAvB,CAAxB,wBACE,KAAC,MAAD,EAAQ,OAAO,CAAEvB,iBAAjB,CAAoC,OAAO,CAAE,CAACD,MAA9C,qBADF,cAIE,KAAC,cAAD,EACE,UAAU,CAAEe,UADd,CAEE,QAAQ,CAAE,EAFZ,CAGE,OAAO,CAAE,CAACf,MAHZ,CAIE,eAAe,CAAEC,iBAJnB,CAKE,YAAY,KALd,EAJF,GADF,CAcD","sourcesContent":["import React from 'react';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport {\n  useAllMarkets,\n  useAllOpenOrders,\n  useMarketInfos,\n} from '../utils/markets';\nimport OpenOrderTable from '../components/UserInfoTable/OpenOrderTable';\nimport { Button, Row } from 'antd';\nimport { OrderWithMarketAndMarketName } from '../utils/types';\nimport { useWallet } from '../utils/wallet';\nimport WalletConnect from '../components/WalletConnect';\n\nexport default function OpenOrdersPage() {\n  const { connected } = useWallet();\n  const { openOrders, loaded, refreshOpenOrders } = useAllOpenOrders();\n  let marketInfos = useMarketInfos();\n  let marketAddressesToNames = Object.fromEntries(\n    marketInfos.map((info) => [info.address.toBase58(), info.name]),\n  );\n  let [allMarkets] = useAllMarkets();\n  const marketsByAddress = Object.fromEntries(\n    (allMarkets || []).map((marketInfo) => [\n      marketInfo.market.address.toBase58(),\n      marketInfo.market,\n    ]),\n  );\n\n  const dataSource: OrderWithMarketAndMarketName[] = (openOrders || [])\n    .map((orderInfos) =>\n      orderInfos.orders.map((order) => {\n        return {\n          marketName: marketAddressesToNames[orderInfos.marketAddress],\n          market: marketsByAddress[orderInfos.marketAddress],\n          ...order,\n        };\n      }),\n    )\n    .flat();\n\n  if (!connected) {\n    return (\n      <Row\n        justify=\"center\"\n        style={{\n          marginTop: '10%',\n        }}\n      >\n        <WalletConnect />\n      </Row>\n    );\n  }\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Button onClick={refreshOpenOrders} loading={!loaded}>\n        Refresh\n      </Button>\n      <OpenOrderTable\n        openOrders={dataSource}\n        pageSize={25}\n        loading={!loaded}\n        onCancelSuccess={refreshOpenOrders}\n        marketFilter\n      />\n    </FloatingElement>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}