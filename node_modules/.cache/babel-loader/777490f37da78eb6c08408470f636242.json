{"ast":null,"code":"import _slicedToArray from\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/fork/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Col,Input,Modal,Row}from'antd';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function CustomClusterEndpointDialog(_ref){var visible=_ref.visible,testingConnection=_ref.testingConnection,onAddCustomEndpoint=_ref.onAddCustomEndpoint,onClose=_ref.onClose;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),customEndpoint=_useState2[0],setCustomEndpoint=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),customEndpointName=_useState4[0],setCustomEndpointName=_useState4[1];var onSubmit=function onSubmit(){var fullEndpoint='https://'+customEndpoint;var params={name:customEndpointName,endpoint:fullEndpoint,custom:true};onAddCustomEndpoint(params);onDoClose();};var onDoClose=function onDoClose(){setCustomEndpoint('');setCustomEndpointName('');onClose&&onClose();};var canSubmit=customEndpoint!==''&&customEndpointName!=='';return/*#__PURE__*/_jsxs(Modal,{title:'Add custom endpoint',visible:visible,onOk:onSubmit,okText:'Add',onCancel:onDoClose,okButtonProps:{disabled:!canSubmit,loading:testingConnection},children:[/*#__PURE__*/_jsx(Row,{style:{marginBottom:8},children:/*#__PURE__*/_jsx(Col,{span:24,children:/*#__PURE__*/_jsx(Input,{placeholder:\"Cluster Name\",value:customEndpointName,onChange:function onChange(e){return setCustomEndpointName(e.target.value);}})})}),/*#__PURE__*/_jsx(Row,{style:{marginBottom:8},children:/*#__PURE__*/_jsx(Col,{span:24,children:/*#__PURE__*/_jsx(Input,{placeholder:\"Cluster Endpoint\",value:customEndpoint,addonBefore:'https://',onChange:function onChange(e){return setCustomEndpoint(e.target.value);}})})})]});}","map":{"version":3,"sources":["/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/fork/serum-dex-ui/src/components/CustomClusterEndpointDialog.tsx"],"names":["React","useState","Col","Input","Modal","Row","CustomClusterEndpointDialog","visible","testingConnection","onAddCustomEndpoint","onClose","customEndpoint","setCustomEndpoint","customEndpointName","setCustomEndpointName","onSubmit","fullEndpoint","params","name","endpoint","custom","onDoClose","canSubmit","disabled","loading","marginBottom","e","target","value"],"mappings":"yLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,GAAT,CAAcC,KAAd,CAAqBC,KAArB,CAA4BC,GAA5B,KAAuC,MAAvC,C,wFAGA,cAAe,SAASC,CAAAA,2BAAT,MAUZ,IATDC,CAAAA,OASC,MATDA,OASC,CARDC,iBAQC,MARDA,iBAQC,CAPDC,mBAOC,MAPDA,mBAOC,CANDC,OAMC,MANDA,OAMC,CACD,cAA4CT,QAAQ,CAAC,EAAD,CAApD,wCAAOU,cAAP,eAAuBC,iBAAvB,eACA,eAAoDX,QAAQ,CAAC,EAAD,CAA5D,yCAAOY,kBAAP,eAA2BC,qBAA3B,eAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,GAAMC,CAAAA,YAAY,CAAG,WAAaL,cAAlC,CACA,GAAMM,CAAAA,MAAM,CAAG,CACbC,IAAI,CAAEL,kBADO,CAEbM,QAAQ,CAAEH,YAFG,CAGbI,MAAM,CAAE,IAHK,CAAf,CAKAX,mBAAmB,CAACQ,MAAD,CAAnB,CACAI,SAAS,GACV,CATD,CAUA,GAAMA,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtBT,iBAAiB,CAAC,EAAD,CAAjB,CACAE,qBAAqB,CAAC,EAAD,CAArB,CACAJ,OAAO,EAAIA,OAAO,EAAlB,CACD,CAJD,CAKA,GAAMY,CAAAA,SAAS,CAAGX,cAAc,GAAK,EAAnB,EAAyBE,kBAAkB,GAAK,EAAlE,CAEA,mBACE,MAAC,KAAD,EACE,KAAK,CAAE,qBADT,CAEE,OAAO,CAAEN,OAFX,CAGE,IAAI,CAAEQ,QAHR,CAIE,MAAM,CAAE,KAJV,CAKE,QAAQ,CAAEM,SALZ,CAME,aAAa,CAAE,CAAEE,QAAQ,CAAE,CAACD,SAAb,CAAwBE,OAAO,CAAEhB,iBAAjC,CANjB,wBAQE,KAAC,GAAD,EAAK,KAAK,CAAE,CAAEiB,YAAY,CAAE,CAAhB,CAAZ,uBACE,KAAC,GAAD,EAAK,IAAI,CAAE,EAAX,uBACE,KAAC,KAAD,EACE,WAAW,CAAC,cADd,CAEE,KAAK,CAAEZ,kBAFT,CAGE,QAAQ,CAAE,kBAACa,CAAD,QAAOZ,CAAAA,qBAAqB,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAA5B,EAHZ,EADF,EADF,EARF,cAiBE,KAAC,GAAD,EAAK,KAAK,CAAE,CAAEH,YAAY,CAAE,CAAhB,CAAZ,uBACE,KAAC,GAAD,EAAK,IAAI,CAAE,EAAX,uBACE,KAAC,KAAD,EACE,WAAW,CAAC,kBADd,CAEE,KAAK,CAAEd,cAFT,CAGE,WAAW,CAAE,UAHf,CAIE,QAAQ,CAAE,kBAACe,CAAD,QAAOd,CAAAA,iBAAiB,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAAxB,EAJZ,EADF,EADF,EAjBF,GADF,CA8BD","sourcesContent":["import React, { useState } from 'react';\nimport { Col, Input, Modal, Row } from 'antd';\nimport { EndpointInfo } from '../utils/types';\n\nexport default function CustomClusterEndpointDialog({\n  visible,\n  testingConnection,\n  onAddCustomEndpoint,\n  onClose,\n}: {\n  visible: boolean;\n  testingConnection: boolean;\n  onAddCustomEndpoint: (info: EndpointInfo) => void;\n  onClose?: () => void;\n}) {\n  const [customEndpoint, setCustomEndpoint] = useState('');\n  const [customEndpointName, setCustomEndpointName] = useState('');\n\n  const onSubmit = () => {\n    const fullEndpoint = 'https://' + customEndpoint;\n    const params = {\n      name: customEndpointName,\n      endpoint: fullEndpoint,\n      custom: true,\n    };\n    onAddCustomEndpoint(params);\n    onDoClose();\n  };\n  const onDoClose = () => {\n    setCustomEndpoint('');\n    setCustomEndpointName('');\n    onClose && onClose();\n  };\n  const canSubmit = customEndpoint !== '' && customEndpointName !== '';\n\n  return (\n    <Modal\n      title={'Add custom endpoint'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit, loading: testingConnection }}\n    >\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Name\"\n            value={customEndpointName}\n            onChange={(e) => setCustomEndpointName(e.target.value)}\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Endpoint\"\n            value={customEndpoint}\n            addonBefore={'https://'}\n            onChange={(e) => setCustomEndpoint(e.target.value)}\n          />\n        </Col>\n      </Row>\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}