{"ast":null,"code":"var _jsxFileName = \"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/src/components/MintName.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport { abbreviateAddress } from '../utils/utils';\nimport { useMintToTickers } from '../utils/tokens';\nimport { Popover } from 'antd';\nimport LinkAddress from './LinkAddress';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function MintName(_ref) {\n  _s();\n\n  var _mintToTickers$mintAd;\n\n  let {\n    mint,\n    showAddress = false\n  } = _ref;\n  const mintToTickers = useMintToTickers();\n\n  if (!mint) {\n    return null;\n  }\n\n  const mintKey = typeof mint === 'string' ? new PublicKey(mint) : mint;\n  const mintAddress = typeof mint === 'string' ? mint : mint.toBase58();\n  const ticker = (_mintToTickers$mintAd = mintToTickers[mintAddress]) !== null && _mintToTickers$mintAd !== void 0 ? _mintToTickers$mintAd : abbreviateAddress(mintKey);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [ticker, showAddress ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [' ', /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(LinkAddress, {\n          address: mintAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 22\n        }, this),\n        placement: \"bottomRight\",\n        title: \"Token mint\",\n        trigger: \"hover\",\n        children: /*#__PURE__*/_jsxDEV(InfoCircleOutlined, {\n          style: {\n            color: '#2abdd2'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null]\n  }, void 0, true);\n}\n\n_s(MintName, \"TnZS7K9DF2jr53IiNGvmVtOIz3w=\", false, function () {\n  return [useMintToTickers];\n});\n\n_c = MintName;\n\nvar _c;\n\n$RefreshReg$(_c, \"MintName\");","map":{"version":3,"sources":["/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/src/components/MintName.tsx"],"names":["React","PublicKey","abbreviateAddress","useMintToTickers","Popover","LinkAddress","InfoCircleOutlined","MintName","mint","showAddress","mintToTickers","mintKey","mintAddress","toBase58","ticker","color"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,kBAAT,QAAmC,mBAAnC;;;AAEA,OAAO,SAASC,QAAT,OAMJ;AAAA;;AAAA;;AAAA,MANsB;AACvBC,IAAAA,IADuB;AAEvBC,IAAAA,WAAW,GAAG;AAFS,GAMtB;AACD,QAAMC,aAAa,GAAGP,gBAAgB,EAAtC;;AACA,MAAI,CAACK,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AACD,QAAMG,OAAO,GAAG,OAAOH,IAAP,KAAgB,QAAhB,GAA2B,IAAIP,SAAJ,CAAcO,IAAd,CAA3B,GAAiDA,IAAjE;AACA,QAAMI,WAAW,GAAG,OAAOJ,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkCA,IAAI,CAACK,QAAL,EAAtD;AACA,QAAMC,MAAM,4BAAGJ,aAAa,CAACE,WAAD,CAAhB,yEAAiCV,iBAAiB,CAACS,OAAD,CAA9D;AAEA,sBACE;AAAA,eACGG,MADH,EAEGL,WAAW,gBACV;AAAA,iBACG,GADH,eAEE,QAAC,OAAD;AACE,QAAA,OAAO,eAAE,QAAC,WAAD;AAAa,UAAA,OAAO,EAAEG;AAAtB;AAAA;AAAA;AAAA;AAAA,gBADX;AAEE,QAAA,SAAS,EAAC,aAFZ;AAGE,QAAA,KAAK,EAAC,YAHR;AAIE,QAAA,OAAO,EAAC,OAJV;AAAA,+BAME,QAAC,kBAAD;AAAoB,UAAA,KAAK,EAAE;AAAEG,YAAAA,KAAK,EAAE;AAAT;AAA3B;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADU,GAYR,IAdN;AAAA,kBADF;AAkBD;;GAjCeR,Q;UAOQJ,gB;;;KAPRI,Q","sourcesContent":["import React from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport { abbreviateAddress } from '../utils/utils';\nimport { useMintToTickers } from '../utils/tokens';\nimport { Popover } from 'antd';\nimport LinkAddress from './LinkAddress';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n\nexport function MintName({\n  mint,\n  showAddress = false,\n}: {\n  mint: string | PublicKey | null | undefined;\n  showAddress?: boolean;\n}) {\n  const mintToTickers = useMintToTickers();\n  if (!mint) {\n    return null;\n  }\n  const mintKey = typeof mint === 'string' ? new PublicKey(mint) : mint;\n  const mintAddress = typeof mint === 'string' ? mint : mint.toBase58();\n  const ticker = mintToTickers[mintAddress] ?? abbreviateAddress(mintKey);\n\n  return (\n    <>\n      {ticker}\n      {showAddress ? (\n        <>\n          {' '}\n          <Popover\n            content={<LinkAddress address={mintAddress} />}\n            placement=\"bottomRight\"\n            title=\"Token mint\"\n            trigger=\"hover\"\n          >\n            <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n          </Popover>\n        </>\n      ) : null}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}