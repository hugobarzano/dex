{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _regeneratorRuntime = require(\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _toConsumableArray = require(\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _classCallCheck = require(\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFilteredProgramAccounts = exports.getNameOwner = exports.getNameAccountKey = exports.getHashedName = exports.signAndSendTransactionInstructions = exports.Numberu64 = exports.Numberu32 = void 0;\n\nvar assert_1 = __importDefault(require(\"assert\"));\n\nvar crypto_1 = require(\"crypto\");\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\n\nvar bindings_1 = require(\"./bindings\");\n\nvar state_1 = require(\"./state\");\n\nvar Numberu32 = /*#__PURE__*/function (_bn_js_1$default) {\n  _inherits(Numberu32, _bn_js_1$default);\n\n  var _super = _createSuper(Numberu32);\n\n  function Numberu32() {\n    _classCallCheck(this, Numberu32);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Numberu32, [{\n    key: \"toBuffer\",\n    value:\n    /**\n     * Convert to Buffer representation\n     */\n    function toBuffer() {\n      var a = _get(_getPrototypeOf(Numberu32.prototype), \"toArray\", this).call(this).reverse();\n\n      var b = Buffer.from(a);\n\n      if (b.length === 4) {\n        return b;\n      }\n\n      assert_1.default(b.length < 4, 'Numberu32 too large');\n      var zeroPad = Buffer.alloc(4);\n      b.copy(zeroPad);\n      return zeroPad;\n    }\n    /**\n     * Construct a Numberu64 from Buffer representation\n     */\n\n  }], [{\n    key: \"fromBuffer\",\n    value: function fromBuffer(buffer) {\n      assert_1.default(buffer.length === 4, \"Invalid buffer length: \".concat(buffer.length));\n      return new bn_js_1.default(_toConsumableArray(buffer).reverse().map(function (i) {\n        return \"00\".concat(i.toString(16)).slice(-2);\n      }).join(''), 16);\n    }\n  }]);\n\n  return Numberu32;\n}(bn_js_1.default);\n\nexports.Numberu32 = Numberu32;\n\nvar Numberu64 = /*#__PURE__*/function (_bn_js_1$default2) {\n  _inherits(Numberu64, _bn_js_1$default2);\n\n  var _super2 = _createSuper(Numberu64);\n\n  function Numberu64() {\n    _classCallCheck(this, Numberu64);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(Numberu64, [{\n    key: \"toBuffer\",\n    value:\n    /**\n     * Convert to Buffer representation\n     */\n    function toBuffer() {\n      var a = _get(_getPrototypeOf(Numberu64.prototype), \"toArray\", this).call(this).reverse();\n\n      var b = Buffer.from(a);\n\n      if (b.length === 8) {\n        return b;\n      }\n\n      assert_1.default(b.length < 8, 'Numberu64 too large');\n      var zeroPad = Buffer.alloc(8);\n      b.copy(zeroPad);\n      return zeroPad;\n    }\n    /**\n     * Construct a Numberu64 from Buffer representation\n     */\n\n  }], [{\n    key: \"fromBuffer\",\n    value: function fromBuffer(buffer) {\n      assert_1.default(buffer.length === 8, \"Invalid buffer length: \".concat(buffer.length));\n      return new bn_js_1.default(_toConsumableArray(buffer).reverse().map(function (i) {\n        return \"00\".concat(i.toString(16)).slice(-2);\n      }).join(''), 16);\n    }\n  }]);\n\n  return Numberu64;\n}(bn_js_1.default);\n\nexports.Numberu64 = Numberu64;\n\nvar signAndSendTransactionInstructions = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee( // sign and send transaction\n  connection, signers, feePayer, txInstructions) {\n    var tx;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            tx = new web3_js_1.Transaction();\n            tx.feePayer = feePayer.publicKey;\n            signers.push(feePayer);\n            tx.add.apply(tx, _toConsumableArray(txInstructions));\n            _context.next = 6;\n            return connection.sendTransaction(tx, signers, {\n              preflightCommitment: 'single'\n            });\n\n          case 6:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function signAndSendTransactionInstructions(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.signAndSendTransactionInstructions = signAndSendTransactionInstructions;\n\nfunction getHashedName(_x5) {\n  return _getHashedName.apply(this, arguments);\n}\n\nfunction _getHashedName() {\n  _getHashedName = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(name) {\n    var input, buffer;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            input = bindings_1.HASH_PREFIX + name;\n            buffer = crypto_1.createHash('sha256').update(input, 'utf8').digest();\n            return _context2.abrupt(\"return\", buffer);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getHashedName.apply(this, arguments);\n}\n\nexports.getHashedName = getHashedName;\n\nfunction getNameAccountKey(_x6, _x7, _x8) {\n  return _getNameAccountKey.apply(this, arguments);\n}\n\nfunction _getNameAccountKey() {\n  _getNameAccountKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(hashed_name, nameClass, nameParent) {\n    var seeds, _yield$web3_js_1$Publ, _yield$web3_js_1$Publ2, nameAccountKey;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            seeds = [hashed_name];\n\n            if (nameClass) {\n              seeds.push(nameClass.toBuffer());\n            } else {\n              seeds.push(Buffer.alloc(32));\n            }\n\n            if (nameParent) {\n              seeds.push(nameParent.toBuffer());\n            } else {\n              seeds.push(Buffer.alloc(32));\n            }\n\n            _context3.next = 5;\n            return web3_js_1.PublicKey.findProgramAddress(seeds, bindings_1.NAME_PROGRAM_ID);\n\n          case 5:\n            _yield$web3_js_1$Publ = _context3.sent;\n            _yield$web3_js_1$Publ2 = _slicedToArray(_yield$web3_js_1$Publ, 1);\n            nameAccountKey = _yield$web3_js_1$Publ2[0];\n            return _context3.abrupt(\"return\", nameAccountKey);\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getNameAccountKey.apply(this, arguments);\n}\n\nexports.getNameAccountKey = getNameAccountKey;\n\nfunction getNameOwner(_x9, _x10) {\n  return _getNameOwner.apply(this, arguments);\n}\n\nfunction _getNameOwner() {\n  _getNameOwner = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(connection, nameAccountKey) {\n    var nameAccount;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return connection.getAccountInfo(nameAccountKey);\n\n          case 2:\n            nameAccount = _context4.sent;\n\n            if (nameAccount) {\n              _context4.next = 5;\n              break;\n            }\n\n            throw 'Unable to find the given account.';\n\n          case 5:\n            return _context4.abrupt(\"return\", state_1.NameRegistryState.retrieve(connection, nameAccountKey));\n\n          case 6:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _getNameOwner.apply(this, arguments);\n}\n\nexports.getNameOwner = getNameOwner; //Taken from Serum\n\nfunction getFilteredProgramAccounts(_x11, _x12, _x13) {\n  return _getFilteredProgramAccounts.apply(this, arguments);\n}\n\nfunction _getFilteredProgramAccounts() {\n  _getFilteredProgramAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(connection, programId, filters) {\n    var resp;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return connection.getProgramAccounts(programId, {\n              commitment: connection.commitment,\n              filters: filters,\n              encoding: 'base64'\n            });\n\n          case 2:\n            resp = _context5.sent;\n            return _context5.abrupt(\"return\", resp.map(function (_ref2) {\n              var pubkey = _ref2.pubkey,\n                  _ref2$account = _ref2.account,\n                  data = _ref2$account.data,\n                  executable = _ref2$account.executable,\n                  owner = _ref2$account.owner,\n                  lamports = _ref2$account.lamports;\n              return {\n                publicKey: pubkey,\n                accountInfo: {\n                  data: data,\n                  executable: executable,\n                  owner: owner,\n                  lamports: lamports\n                }\n              };\n            }));\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _getFilteredProgramAccounts.apply(this, arguments);\n}\n\nexports.getFilteredProgramAccounts = getFilteredProgramAccounts;","map":{"version":3,"sources":["../src/utils.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFilteredProgramAccounts = exports.getNameOwner = exports.getNameAccountKey = exports.getHashedName = exports.signAndSendTransactionInstructions = exports.Numberu64 = exports.Numberu32 = void 0;\nconst assert_1 = __importDefault(require(\"assert\"));\nconst crypto_1 = require(\"crypto\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bindings_1 = require(\"./bindings\");\nconst state_1 = require(\"./state\");\nclass Numberu32 extends bn_js_1.default {\n    /**\n     * Convert to Buffer representation\n     */\n    toBuffer() {\n        const a = super.toArray().reverse();\n        const b = Buffer.from(a);\n        if (b.length === 4) {\n            return b;\n        }\n        assert_1.default(b.length < 4, 'Numberu32 too large');\n        const zeroPad = Buffer.alloc(4);\n        b.copy(zeroPad);\n        return zeroPad;\n    }\n    /**\n     * Construct a Numberu64 from Buffer representation\n     */\n    static fromBuffer(buffer) {\n        assert_1.default(buffer.length === 4, `Invalid buffer length: ${buffer.length}`);\n        return new bn_js_1.default([...buffer]\n            .reverse()\n            .map((i) => `00${i.toString(16)}`.slice(-2))\n            .join(''), 16);\n    }\n}\nexports.Numberu32 = Numberu32;\nclass Numberu64 extends bn_js_1.default {\n    /**\n     * Convert to Buffer representation\n     */\n    toBuffer() {\n        const a = super.toArray().reverse();\n        const b = Buffer.from(a);\n        if (b.length === 8) {\n            return b;\n        }\n        assert_1.default(b.length < 8, 'Numberu64 too large');\n        const zeroPad = Buffer.alloc(8);\n        b.copy(zeroPad);\n        return zeroPad;\n    }\n    /**\n     * Construct a Numberu64 from Buffer representation\n     */\n    static fromBuffer(buffer) {\n        assert_1.default(buffer.length === 8, `Invalid buffer length: ${buffer.length}`);\n        return new bn_js_1.default([...buffer]\n            .reverse()\n            .map((i) => `00${i.toString(16)}`.slice(-2))\n            .join(''), 16);\n    }\n}\nexports.Numberu64 = Numberu64;\nconst signAndSendTransactionInstructions = async (\n// sign and send transaction\nconnection, signers, feePayer, txInstructions) => {\n    const tx = new web3_js_1.Transaction();\n    tx.feePayer = feePayer.publicKey;\n    signers.push(feePayer);\n    tx.add(...txInstructions);\n    return await connection.sendTransaction(tx, signers, {\n        preflightCommitment: 'single',\n    });\n};\nexports.signAndSendTransactionInstructions = signAndSendTransactionInstructions;\nasync function getHashedName(name) {\n    const input = bindings_1.HASH_PREFIX + name;\n    const buffer = crypto_1.createHash('sha256').update(input, 'utf8').digest();\n    return buffer;\n}\nexports.getHashedName = getHashedName;\nasync function getNameAccountKey(hashed_name, nameClass, nameParent) {\n    const seeds = [hashed_name];\n    if (nameClass) {\n        seeds.push(nameClass.toBuffer());\n    }\n    else {\n        seeds.push(Buffer.alloc(32));\n    }\n    if (nameParent) {\n        seeds.push(nameParent.toBuffer());\n    }\n    else {\n        seeds.push(Buffer.alloc(32));\n    }\n    const [nameAccountKey] = await web3_js_1.PublicKey.findProgramAddress(seeds, bindings_1.NAME_PROGRAM_ID);\n    return nameAccountKey;\n}\nexports.getNameAccountKey = getNameAccountKey;\nasync function getNameOwner(connection, nameAccountKey) {\n    const nameAccount = await connection.getAccountInfo(nameAccountKey);\n    if (!nameAccount) {\n        throw 'Unable to find the given account.';\n    }\n    return state_1.NameRegistryState.retrieve(connection, nameAccountKey);\n}\nexports.getNameOwner = getNameOwner;\n//Taken from Serum\nasync function getFilteredProgramAccounts(connection, programId, filters) {\n    const resp = await connection.getProgramAccounts(programId, {\n        commitment: connection.commitment,\n        filters,\n        encoding: 'base64',\n    });\n    return resp.map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n        publicKey: pubkey,\n        accountInfo: {\n            data: data,\n            executable,\n            owner: owner,\n            lamports,\n        },\n    }));\n}\nexports.getFilteredProgramAccounts = getFilteredProgramAccounts;\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"script"}