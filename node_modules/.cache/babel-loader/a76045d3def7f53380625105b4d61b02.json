{"ast":null,"code":"var _jsxFileName = \"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/src/components/TradesTable.tsx\",\n    _s = $RefreshSig$();\n\nimport { Col, Row } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useMarket, useBonfidaTrades } from '../utils/markets';\nimport { getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\n_c = Title;\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n_c2 = SizeTitle;\nexport default function PublicTrades(_ref) {\n  _s();\n\n  let {\n    smallScreen\n  } = _ref;\n  const {\n    baseCurrency,\n    quoteCurrency,\n    market\n  } = useMarket();\n  const [trades, loaded] = useBonfidaTrades();\n  return /*#__PURE__*/_jsxDEV(FloatingElement, {\n    style: smallScreen ? {\n      flex: 1\n    } : {\n      marginTop: '10px',\n      minHeight: '270px',\n      maxHeight: 'calc(100vh - 700px)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Recent Market trades\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SizeTitle, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        children: [\"Price (\", quoteCurrency, \") \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        style: {\n          textAlign: 'right'\n        },\n        children: [\"Size (\", baseCurrency, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        style: {\n          textAlign: 'right'\n        },\n        children: \"Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), !!trades && loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginRight: '-20px',\n        paddingRight: '5px',\n        overflowY: 'scroll',\n        maxHeight: smallScreen ? 'calc(100% - 75px)' : 'calc(100vh - 800px)'\n      },\n      children: trades.map((trade, i) => /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          marginBottom: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          style: {\n            color: trade.side === 'buy' ? '#41C77A' : '#F23B69'\n          },\n          children: (market === null || market === void 0 ? void 0 : market.tickSize) && !isNaN(trade.price) ? Number(trade.price).toFixed(getDecimalCount(market.tickSize)) : trade.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          style: {\n            textAlign: 'right'\n          },\n          children: (market === null || market === void 0 ? void 0 : market.minOrderSize) && !isNaN(trade.size) ? Number(trade.size).toFixed(getDecimalCount(market.minOrderSize)) : trade.size\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          style: {\n            textAlign: 'right',\n            color: '#434a59'\n          },\n          children: trade.time && new Date(trade.time).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PublicTrades, \"I481IMNF+hbVHAsyv7mkh0/3Aw4=\", false, function () {\n  return [useMarket, useBonfidaTrades];\n});\n\n_c3 = PublicTrades;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"SizeTitle\");\n$RefreshReg$(_c3, \"PublicTrades\");","map":{"version":3,"sources":["/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/src/components/TradesTable.tsx"],"names":["Col","Row","React","styled","useMarket","useBonfidaTrades","getDecimalCount","FloatingElement","Title","div","SizeTitle","PublicTrades","smallScreen","baseCurrency","quoteCurrency","market","trades","loaded","flex","marginTop","minHeight","maxHeight","textAlign","marginRight","paddingRight","overflowY","map","trade","i","marginBottom","color","side","tickSize","isNaN","price","Number","toFixed","minOrderSize","size","time","Date","toLocaleTimeString"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,EAAoBC,gBAApB,QAA4C,kBAA5C;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;;AAGA,MAAMC,KAAK,GAAGL,MAAM,CAACM,GAAI;AACzB;AACA,CAFA;KAAMD,K;AAGN,MAAME,SAAS,GAAGP,MAAM,CAACF,GAAD,CAAM;AAC9B;AACA;AACA,CAHA;MAAMS,S;AAKN,eAAe,SAASC,YAAT,OAAuC;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACpD,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA;AAA/B,MAA0CX,SAAS,EAAzD;AACA,QAAM,CAACY,MAAD,EAASC,MAAT,IAAmBZ,gBAAgB,EAAzC;AAEA,sBACE,QAAC,eAAD;AACE,IAAA,KAAK,EACHO,WAAW,GACP;AAAEM,MAAAA,IAAI,EAAE;AAAR,KADO,GAEP;AACEC,MAAAA,SAAS,EAAE,MADb;AAEEC,MAAAA,SAAS,EAAE,OAFb;AAGEC,MAAAA,SAAS,EAAE;AAHb,KAJR;AAAA,4BAWE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE,QAAC,SAAD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA,8BAAsBP,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAc,QAAA,KAAK,EAAE;AAAEQ,UAAAA,SAAS,EAAE;AAAb,SAArB;AAAA,6BACST,YADT;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAc,QAAA,KAAK,EAAE;AAAES,UAAAA,SAAS,EAAE;AAAb,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,EAqBG,CAAC,CAACN,MAAF,IAAYC,MAAZ,iBACC;AACE,MAAA,KAAK,EAAE;AACLM,QAAAA,WAAW,EAAE,OADR;AAELC,QAAAA,YAAY,EAAE,KAFT;AAGLC,QAAAA,SAAS,EAAE,QAHN;AAILJ,QAAAA,SAAS,EAAET,WAAW,GAClB,mBADkB,GAElB;AANC,OADT;AAAA,gBAUGI,MAAM,CAACU,GAAP,CAAW,CAACC,KAAD,EAAsBC,CAAtB,kBACV,QAAC,GAAD;AAAa,QAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAApB;AAAA,gCACE,QAAC,GAAD;AACE,UAAA,IAAI,EAAE,CADR;AAEE,UAAA,KAAK,EAAE;AACLC,YAAAA,KAAK,EAAEH,KAAK,CAACI,IAAN,KAAe,KAAf,GAAuB,SAAvB,GAAmC;AADrC,WAFT;AAAA,oBAMG,CAAAhB,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEiB,QAAR,KAAoB,CAACC,KAAK,CAACN,KAAK,CAACO,KAAP,CAA1B,GACGC,MAAM,CAACR,KAAK,CAACO,KAAP,CAAN,CAAoBE,OAApB,CACE9B,eAAe,CAACS,MAAM,CAACiB,QAAR,CADjB,CADH,GAIGL,KAAK,CAACO;AAVZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAaE,QAAC,GAAD;AAAK,UAAA,IAAI,EAAE,CAAX;AAAc,UAAA,KAAK,EAAE;AAAEZ,YAAAA,SAAS,EAAE;AAAb,WAArB;AAAA,oBACG,CAAAP,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEsB,YAAR,KAAwB,CAACJ,KAAK,CAACN,KAAK,CAACW,IAAP,CAA9B,GACGH,MAAM,CAACR,KAAK,CAACW,IAAP,CAAN,CAAmBF,OAAnB,CACE9B,eAAe,CAACS,MAAM,CAACsB,YAAR,CADjB,CADH,GAIGV,KAAK,CAACW;AALZ;AAAA;AAAA;AAAA;AAAA,gBAbF,eAoBE,QAAC,GAAD;AAAK,UAAA,IAAI,EAAE,CAAX;AAAc,UAAA,KAAK,EAAE;AAAEhB,YAAAA,SAAS,EAAE,OAAb;AAAsBQ,YAAAA,KAAK,EAAE;AAA7B,WAArB;AAAA,oBACGH,KAAK,CAACY,IAAN,IAAc,IAAIC,IAAJ,CAASb,KAAK,CAACY,IAAf,EAAqBE,kBAArB;AADjB;AAAA;AAAA;AAAA;AAAA,gBApBF;AAAA,SAAUb,CAAV;AAAA;AAAA;AAAA;AAAA,cADD;AAVH;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+DD;;GAnEuBjB,Y;UAC0BP,S,EACvBC,gB;;;MAFHM,Y","sourcesContent":["import { Col, Row } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useMarket, useBonfidaTrades } from '../utils/markets';\nimport { getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\nimport { BonfidaTrade } from '../utils/types';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nexport default function PublicTrades({ smallScreen }) {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const [trades, loaded] = useBonfidaTrades();\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen\n          ? { flex: 1 }\n          : {\n              marginTop: '10px',\n              minHeight: '270px',\n              maxHeight: 'calc(100vh - 700px)',\n            }\n      }\n    >\n      <Title>Recent Market trades</Title>\n      <SizeTitle>\n        <Col span={8}>Price ({quoteCurrency}) </Col>\n        <Col span={8} style={{ textAlign: 'right' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={8} style={{ textAlign: 'right' }}>\n          Time\n        </Col>\n      </SizeTitle>\n      {!!trades && loaded && (\n        <div\n          style={{\n            marginRight: '-20px',\n            paddingRight: '5px',\n            overflowY: 'scroll',\n            maxHeight: smallScreen\n              ? 'calc(100% - 75px)'\n              : 'calc(100vh - 800px)',\n          }}\n        >\n          {trades.map((trade: BonfidaTrade, i: number) => (\n            <Row key={i} style={{ marginBottom: 4 }}>\n              <Col\n                span={8}\n                style={{\n                  color: trade.side === 'buy' ? '#41C77A' : '#F23B69',\n                }}\n              >\n                {market?.tickSize && !isNaN(trade.price)\n                  ? Number(trade.price).toFixed(\n                      getDecimalCount(market.tickSize),\n                    )\n                  : trade.price}\n              </Col>\n              <Col span={8} style={{ textAlign: 'right' }}>\n                {market?.minOrderSize && !isNaN(trade.size)\n                  ? Number(trade.size).toFixed(\n                      getDecimalCount(market.minOrderSize),\n                    )\n                  : trade.size}\n              </Col>\n              <Col span={8} style={{ textAlign: 'right', color: '#434a59' }}>\n                {trade.time && new Date(trade.time).toLocaleTimeString()}\n              </Col>\n            </Row>\n          ))}\n        </div>\n      )}\n    </FloatingElement>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}