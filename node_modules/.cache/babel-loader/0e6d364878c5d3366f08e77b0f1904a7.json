{"ast":null,"code":"import _regeneratorRuntime from \"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/cesarhugo.barzano/Desktop/CesarCorp/coins/serum-dex-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { ledgerUSBVendorId } from \"@ledgerhq/devices\";\nvar ledgerDevices = [{\n  vendorId: ledgerUSBVendorId\n}];\nexport function requestLedgerDevice() {\n  return _requestLedgerDevice.apply(this, arguments);\n}\n\nfunction _requestLedgerDevice() {\n  _requestLedgerDevice = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var device;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return navigator.usb.requestDevice({\n              filters: ledgerDevices\n            });\n\n          case 2:\n            device = _context.sent;\n            return _context.abrupt(\"return\", device);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _requestLedgerDevice.apply(this, arguments);\n}\n\nexport function getLedgerDevices() {\n  return _getLedgerDevices.apply(this, arguments);\n}\n\nfunction _getLedgerDevices() {\n  _getLedgerDevices = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var devices;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return navigator.usb.getDevices();\n\n          case 2:\n            devices = _context2.sent;\n            return _context2.abrupt(\"return\", devices.filter(function (d) {\n              return d.vendorId === ledgerUSBVendorId;\n            }));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getLedgerDevices.apply(this, arguments);\n}\n\nexport function getFirstLedgerDevice() {\n  return _getFirstLedgerDevice.apply(this, arguments);\n}\n\nfunction _getFirstLedgerDevice() {\n  _getFirstLedgerDevice = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var existingDevices;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return getLedgerDevices();\n\n          case 2:\n            existingDevices = _context3.sent;\n\n            if (!(existingDevices.length > 0)) {\n              _context3.next = 5;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", existingDevices[0]);\n\n          case 5:\n            return _context3.abrupt(\"return\", requestLedgerDevice());\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getFirstLedgerDevice.apply(this, arguments);\n}\n\nexport var isSupported = function isSupported() {\n  return Promise.resolve(!!navigator && // $FlowFixMe\n  !!navigator.usb && typeof navigator.usb.getDevices === \"function\");\n};","map":{"version":3,"sources":["../src/webusb.js"],"names":["ledgerDevices","vendorId","ledgerUSBVendorId","device","filters","devices","navigator","d","existingDevices","getLedgerDevices","requestLedgerDevice","isSupported","Promise"],"mappings":";;AACA,SAAA,iBAAA,QAAA,mBAAA;AAEA,IAAMA,aAAa,GAAG,CAAC;AAAEC,EAAAA,QAAQ,EAAEC;AAAZ,CAAD,CAAtB;AAEA,gBAAO,mBAAP;AAAA;AAAA;;;kFAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEgB,SAAS,CAAT,GAAA,CAAA,aAAA,CAA4B;AAAEE,cAAAA,OAAO,EAAEJ;AAAX,aAA5B,CAFhB;;AAAA;AAECG,YAAAA,MAFD;AAAA,6CAGL,MAHK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAMP,gBAAO,gBAAP;AAAA;AAAA;;;+EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEiBG,SAAS,CAATA,GAAAA,CAAtB,UAAsBA,EAFjB;;AAAA;AAECD,YAAAA,OAFD;AAAA,8CAGEA,OAAO,CAAPA,MAAAA,CAAgBE,UAAAA,CAAD;AAAA,qBAAOA,CAAC,CAADA,QAAAA,KAA7B,iBAAsB;AAAA,aAAfF,CAHF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAMP,gBAAO,oBAAP;AAAA;AAAA;;;mFAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACyBI,gBAA9B,EADK;;AAAA;AACCD,YAAAA,eADD;;AAAA,kBAEDA,eAAe,CAAfA,MAAAA,GAAJ,CAFK;AAAA;AAAA;AAAA;;AAAA,8CAEkCA,eAAe,CAAtB,CAAsB,CAFjD;;AAAA;AAAA,8CAGEE,mBAAP,EAHK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAMP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SACzBC,OAAO,CAAPA,OAAAA,CACE,CAAC,CAAD,SAAA,IACE;AACA,GAAC,CAACN,SAAS,CAFb,GAAA,IAGE,OAAOA,SAAS,CAATA,GAAAA,CAAP,UAAA,KALC,UACLM,CADyB;AAAA,CAApB","sourcesContent":["// @flow\nimport { ledgerUSBVendorId } from \"@ledgerhq/devices\";\n\nconst ledgerDevices = [{ vendorId: ledgerUSBVendorId }];\n\nexport async function requestLedgerDevice(): Promise<USBDevice> {\n  // $FlowFixMe\n  const device = await navigator.usb.requestDevice({ filters: ledgerDevices });\n  return device;\n}\n\nexport async function getLedgerDevices(): Promise<USBDevice[]> {\n  // $FlowFixMe\n  const devices = await navigator.usb.getDevices();\n  return devices.filter((d) => d.vendorId === ledgerUSBVendorId);\n}\n\nexport async function getFirstLedgerDevice(): Promise<USBDevice> {\n  const existingDevices = await getLedgerDevices();\n  if (existingDevices.length > 0) return existingDevices[0];\n  return requestLedgerDevice();\n}\n\nexport const isSupported = (): Promise<boolean> =>\n  Promise.resolve(\n    !!navigator &&\n      // $FlowFixMe\n      !!navigator.usb &&\n      typeof navigator.usb.getDevices === \"function\"\n  );\n"]},"metadata":{},"sourceType":"module"}